components:
  parameters:
    acceptHeader:
      description: The requested content type which should be returned by the server
      example: application/json
      in: header
      name: Accept
      required: true
      schema:
        $ref: '#/components/schemas/WSMIMEDataTypes'
    authorizationHeader:
      description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>"
      example: Bearer XXXX
      in: header
      name: Authorization
      schema:
        pattern: ^Bearer .*$
        type: string
    page:
      description: Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.
      example: '0'
      in: query
      name: page
      required: false
      schema:
        type: integer
    pageSize:
      description: The size of the pages to be returned. Default is `1000`.
      example: 1000
      in: query
      name: pageSize
      required: false
      schema:
        type: integer
    searchResultsDbId:
      description: Permanent unique identifier which references the search results
      in: path
      name: searchResultsDbId
      required: true
      schema:
        type: string
  responses:
    400BadRequest:
      content:
        application/json:
          example: |-
            ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
            ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
            ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
          schema:
            type: string
      description: Bad Request
      headers: {}
    401Unauthorized:
      content:
        application/json:
          example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token
          schema:
            type: string
      description: Unauthorized
      headers: {}
    403Forbidden:
      content:
        application/json:
          example: ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action
          schema:
            type: string
      description: Forbidden
      headers: {}
    404NotFound:
      content:
        application/json:
          example: ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found
          schema:
            type: string
      description: Not Found
      headers: {}
    successfulSearchResponse:
      content:
        application/json:
          example:
            metadata:
              datafiles: []
              pagination:
                currentPage: 0
                pageSize: 0
                totalCount: 0
                totalPages: 0
              status: []
            result:
              searchResultDbId: 551ae08c-4548-4bde-ad70-f23beb25e2ea
          schema:
            $ref: '#/components/schemas/successfulSearchResponse'
      description: OK
      headers: {}
  schemas:
    VariableBaseClass:
      properties:
        contextOfUse:
          description: 'Indication of how trait is routinely used. (examples: ["Trial evaluation", "Nursery evaluation"])'
          items:
            type: string
          type: array
        crop:
          description: 'Crop name (examples: "Maize", "Wheat")'
          type: string
        defaultValue:
          description: 'Variable default value. (examples: "red", "2.3", etc.)'
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        growthStage:
          description: 'Growth stage at which measurement is made (examples: "flowering")'
          type: string
        institution:
          description: Name of institution submitting the variable
          type: string
        language:
          description: 2 letter ISO code for the language of submission of the variable.
          type: string
        method:
          $ref: '#/components/schemas/method'
        ontologyDbId:
          deprecated: true
          description: DEPRECATED in v1.3 - see "this.ontologyReference.ontologyDbId"
          type: string
        ontologyName:
          deprecated: true
          description: DEPRECATED in v1.3 - see "this.ontologyReference.ontologyName"
          type: string
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        scale:
          $ref: '#/components/schemas/scale'
        scientist:
          description: Name of scientist submitting the variable.
          type: string
        status:
          description: 'Variable status. (examples: "recommended", "obsolete", "legacy", etc.)'
          type: string
        submissionTimestamp:
          description: Timestamp when the Variable was added (ISO 8601)
          format: date-time
          type: string
        synonyms:
          description: Other variable names
          items:
            type: string
          type: array
        trait:
          $ref: '#/components/schemas/trait'
        xref:
          description: Cross reference of the variable term to a term from an external ontology or to a database of a major system.
          type: string
      required:
      - trait
      - method
      - scale
      type: object
    WSMIMEDataTypes:
      enum:
      - application/json
      - text/csv
      - text/tsv
      - application/flapjack
      type: string
    alleleMatrixDetails:
      properties:
        description:
          description: How the matrix was generated
          type: string
        lastUpdated:
          description: A date format
          format: date-time
          type: string
        matrixDbId:
          description: ID of the matrix
          type: string
        matrixName:
          description: Name of the matrix
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "matrixName"
          type: string
        studyDbId:
          description: Link to the study where the matrix was produced
          type: string
      type: object
    alleleMatrixSearchRequest:
      properties:
        expandHomozygotes:
          description: Should homozygotes be expanded (true) or collapsed into a single occurence (false)
          type: boolean
        format:
          description: The data format of the response data. ie "json", "tsv", etc
          type: string
        markerDbId:
          description: An ID which uniquely identifies a Marker
          items:
            type: string
          type: array
        markerProfileDbId:
          description: An ID which uniquely identifies a Marker Profile
          items:
            type: string
          type: array
        markerprofileDbId:
          deprecated: true
          description: DEPRECATED in v1.3 - see "markerProfileDbId" (camel case)
          items:
            type: string
          type: array
        matrixDbId:
          description: An ID which uniquely identifies an Allele Matrix
          items:
            type: string
          type: array
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        sepPhased:
          description: The string to use as a separator for phased allele calls.
          type: string
        sepUnphased:
          description: The string to use as a separator for unphased allele calls.
          type: string
        unknownString:
          description: The string to use as a representation for missing data.
          type: string
      type: object
    alleleMatrixValues:
      properties:
        data:
          description: 'Is an array of arrays; each inner array has three entries: ```markerDbId```, ```markerProfileDbId```, ```alleleCall```. Scores have to be represented as described further up. e.g. unknown data as "N", etc. Missing data can be skipped.'
          items:
            items:
              type: string
            type: array
          type: array
      type: object
    asynchStatusMetadata:
      properties:
        asynchStatus:
          properties:
            asynchId:
              description: The unique ID to poll for asynchronous results
              type: string
            endTime:
              format: date
              type: string
            percentComplete:
              maximum: 100
              minimum: 0
              type: integer
            startTime:
              format: date
              type: string
            status:
              enum:
              - STARTED
              - PENDING
              - FINISHED
              - ERROR
              type: string
          required:
          - asynchId
      type: object
    breedingMethod:
      properties:
        abbreviation:
          description: an abbreviation for the name of this breeding method
          type: string
        breedingMethodDbId:
          description: the unique identifier for this breeding method
          type: string
        breedingMethodName:
          description: human readable name of the breeding method
          type: string
        description:
          description: human readable description of the breeding method
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "breedingMethodName"
          type: string
      required:
      - breedingMethodDbId
      type: object
    call:
      properties:
        call:
          description: The name of the available call as recorded in the documentation
          type: string
        dataTypes:
          description: The possible data formats returned by the available call
          items:
            $ref: '#/components/schemas/WSMIMEDataTypes'
          type: array
        datatypes:
          deprecated: true
          description: DEPRECATED in v1.3 - see "dataTypes" (camel case)
          items:
            $ref: '#/components/schemas/WSMIMEDataTypes'
          type: array
        methods:
          description: The possible HTTP Methods to be used with the available call
          items:
            enum:
            - GET
            - POST
            - PUT
            - DELETE
            type: string
          type: array
        versions:
          description: The supported versions of a particular call
          items:
            enum:
            - '1.0'
            - '1.1'
            - '1.2'
            - '1.3'
            type: string
          type: array
      required:
      - call
      - dataTypes
      - methods
      type: object
    contact:
      properties:
        contactDbId:
          description: The ID which uniquely identifies this contact
          type: string
        email:
          description: 'The contacts email address '
          type: string
        instituteName:
          description: The name of the institution which this contact is part of
          type: string
        name:
          description: The full name of this contact person
          type: string
        orcid:
          description: The Open Researcher and Contributor ID for this contact person (orcid.org)
          type: string
        type:
          description: 'The type of person this contact represents (ex: Coordinator, Scientist, PI, etc.)'
          type: string
      required:
      - contactDbId
      type: object
    dataLink:
      properties:
        dataLinkName:
          description: The name of the external data link
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "dataLinkName"
          type: string
        type:
          description: The type of external data link
          type: string
        url:
          description: The URL which links to external data
          type: string
      type: object
    dataTypesResponseResult:
      properties:
        data:
          items:
            type: string
          type: array
      title: dataTypesResponseResult
      type: object
    genomeMap:
      properties:
        comments:
          description: Additional comments
          type: string
        commonCropName:
          description: The common name of the crop, found from "GET /commoncropnames"
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        linkageGroupCount:
          description: The number of linkage groups present in this genome map
          format: int32
          type: integer
        mapDbId:
          description: The ID which uniquely identifies this genome map
          type: string
        mapName:
          description: A human readable name for this genome map
          type: string
        markerCount:
          description: The number of markers present in this genome map
          format: int32
          type: integer
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "mapName"
          type: string
        publishedDate:
          description: The date this genome was published
          format: date
          type: string
        scientificName:
          description: Full scientific binomial format name. This includes Genus, Species, and Sub-species
          type: string
        species:
          deprecated: true
          description: DEPRECATED in v1.3 - See "scientificName"
          type: string
        type:
          description: The type of map this represents, ussually "Genetic"
          type: string
        unit:
          description: The units used to describe the data in this map
          type: string
      required:
      - mapDbId
      - commonCropName
      - type
      type: object
    genomeMapDetails:
      properties:
        data:
          description: List of linkage group details associated with a given map
          items:
            $ref: '#/components/schemas/linkageGroup'
          type: array
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        linkageGroups:
          description: '**Deprecated** Use "data"'
          deprecated: true
          items:
            $ref: '#/components/schemas/linkageGroup'
          type: array
        mapDbId:
          description: The ID which uniquely identifies this genome map
          type: string
        mapName:
          description: A human readable name for this map
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "mapName"
          type: string
        type:
          description: The type of map this represents, ussually "Genetic" or "Physical"
          type: string
        unit:
          description: The units used to describe the data in this map
          type: string
      type: object
    geoJSON:
      description: One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.
      properties:
        geometry:
          oneOf:
          - description: "Example \n\n    [ -76.506042, 42.417373 ]"
            properties:
              coordinates:
                $ref: '#/components/schemas/position'
              type:
                enum:
                - Point
                type: string
            title: Point
            type: object
          - description: "Example \n\n    [ \n    \n      [ \n      \n        [ -77.456654, 42.241133 ], \n        \n        [ -75.414133, 41.508282 ],\n      \n        [ -76.506042, 42.417373 ], \n        \n        [ -77.456654, 42.241133 ] \n      \n      ] \n    \n    ]"
            properties:
              coordinates:
                $ref: '#/components/schemas/polygon'
              type:
                enum:
                - Polygon
                type: string
            title: Polygon
            type: object
          title: GeoJSON Geometry
          type: object
        type:
          enum:
          - Feature
          type: string
      title: GeoJSON
      type: object
    germplasm:
      properties:
        accessionNumber:
          description: This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection
          type: string
        acquisitionDate:
          description: The date this germplasm was aquired by the genebank (MCPD)
          format: date
          type: string
        biologicalStatusOfAccessionCode:
          description: The 3 digit code representing the biological status of the accession (MCPD)
          type: integer
        breedingMethodDbId:
          description: The unique identifier for the breeding method used to create this germplasm
          type: string
        commonCropName:
          description: Common name for the crop (MCPD)
          type: string
        countryOfOriginCode:
          description: 3-letter ISO 3166-1 code of the country in which the sample was originally collected (MCPD)
          type: string
        defaultDisplayName:
          description: Human readable name used for display purposes
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        donors:
          description: List of donor institutes (MCPD)
          items:
            properties:
              donorAccessionNumber:
                type: string
              donorInstituteCode:
                type: string
              germplasmPUI:
                type: string
            type: object
          type: array
        genus:
          deprecated: true
          description: DEPRECATED in v1.3 - see "germplasmGenus"
          type: string
        germplasmDbId:
          description: The ID which uniquely identifies a germplasm within the given database server
          type: string
        germplasmGenus:
          description: Genus name for taxon. Initial uppercase letter required. (MCPD)
          type: string
        germplasmName:
          description: Name of the germplasm. It can be the prefered name and does not have to be unique.
          type: string
        germplasmPUI:
          description: The Permanent Unique Identifier which represents a germplasm
          type: string
        germplasmSpecies:
          description: Specific epithet portion of the scientific name in lowercase letters. (MCPD)
          type: string
        instituteCode:
          description: The code for the Institute that has bred the material. (MCPD)
          type: string
        instituteName:
          description: The name of the institution which bred the material (MCPD)
          type: string
        pedigree:
          description: The cross name and optional selection history.
          type: string
        seedSource:
          description: 'The source of the seed '
          type: string
        species:
          deprecated: true
          description: DEPRECATED in v1.3 - see "germplasmSpecies"
          type: string
        speciesAuthority:
          description: The authority organization responsible for tracking and maintaining the species name (MCPD)
          type: string
        subtaxa:
          description: Subtaxon can be used to store any additional taxonomic identifier. (MCPD)
          type: string
        subtaxaAuthority:
          description: ' The authority organization responsible for tracking and maintaining the subtaxon information (MCPD)'
          type: string
        synonyms:
          description: List of alternative names or IDs used to reference this germplasm
          items:
            type: string
          type: array
        taxonIds:
          description: The list of IDs for this SPECIES from different sources. If present, NCBI Taxon should be always listed as "ncbiTaxon" preferably with a purl. The rank of this ID should be species.
          items:
            $ref: '#/components/schemas/taxonID'
          type: array
        typeOfGermplasmStorageCode:
          description: The 2 digit code representing the type of storage this germplasm is kept in at a genebank. (MCPD)
          items:
            type: string
          type: array
      type: object
    germplasmAttribute:
      properties:
        attributeCode:
          description: Short abbreviation which represents this attribute
          type: string
        attributeDbId:
          description: The ID which uniquely identifies this attribute within the given database server
          type: string
        attributeName:
          description: The human readable name of this attribute
          type: string
        determinedDate:
          description: The date the value of this attribute was determined for a given germplasm
          format: date
          type: string
        value:
          description: The value of this attribute for a given germplasm
          type: string
      type: object
    germplasmAttributeCategory:
      properties:
        attributeCategoryDbId:
          description: The ID which uniquely identifies this attribute category within the given database server
          type: string
        attributeCategoryName:
          description: 'A human readable name for this attribute category. Very similar to Trait class. (examples: "morphologic", "phenologic", "agronomic", "physiologic", "abiotic stress", "biotic stress", "biochemic", "quality traits", "fertility", etc.)'
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "attributeCategoryName"
          type: string
      type: object
    germplasmAttributeDef:
      allOf:
      - $ref: '#/components/schemas/VariableBaseClass'
      - properties:
          attributeCategoryDbId:
            description: General category for the attribute. very similar to Trait class.
            type: string
          attributeDbId:
            description: The ID which uniquely identifies this attribute within the given database server
            type: string
          attributeName:
            description: A human readable name for this attribute
            type: string
          code:
            deprecated: true
            description: DEPRECATED in v1.3 - see "this.trait.alternativeAbbreviations"
            type: string
          datatype:
            deprecated: true
            description: DEPRECATED in v1.3 - see "this.scale.dataType"
            type: string
          description:
            description: A human readable description of this attribute
            type: string
          name:
            deprecated: true
            description: DEPRECATED in v1.3 - Use "this.attributeName"
            type: string
          uri:
            deprecated: true
            description: DEPRECATED in v1.3 - see "this.xref"
            type: string
          values:
            deprecated: true
            description: DEPRECATED in v1.3 - see "this.scale.validValues"
            type: string
        required:
        - attributeDbId
        - attributeName
        type: object
    germplasmAttributeList:
      properties:
        data:
          description: List of attributes associated with the given germplasm
          items:
            $ref: '#/components/schemas/germplasmAttribute'
          type: array
        germplasmDbId:
          description: The ID which uniquely identifies a germplasm within the given database server
          type: string
      type: object
    germplasmMCPD:
      properties:
        accessionNames:
          description: 'MCPD (v2.1) (ACCENAME) 11. Either a registered or other designation given to the material received, other than the donors accession number (23) or collecting number (3). First letter uppercase. Multiple names are separated by a semicolon without space. Example: Accession name: Bogatyr;Symphony;Emma.'
          items:
            type: string
          type: array
        accessionNumber:
          description: MCPD (v2.1) (ACCENUMB) 2. This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection (e.g. "PI 113869").
          type: string
        acquisitionDate:
          description: MCPD (v2.1) (ACQDATE) 12. Date on which the accession entered the collection [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or "00" [double zero].
          type: string
        acquisitionSourceCode:
          description: 'MCPD (v2.1) (COLLSRC) 21. The coding scheme proposed can be used at 2 different levels of detail: either by using the general codes (in boldface) such as 10, 20, 30, 40, etc., or by using the more specific codes, such as 11, 12, etc. 10) Wild habitat 11) Forest or woodland 12) Shrubland 13) Grassland 14) Desert or tundra 15) Aquatic habitat 20) Farm or cultivated habitat 21) Field 22) Orchard 23) Backyard, kitchen or home garden (urban, peri-urban or rural) 24) Fallow land 25) Pasture 26) Farm store 27) Threshing floor 28) Park 30) Market or shop 40) Institute, Experimental station, Research organization, Genebank 50) Seed company 60) Weedy, disturbed or ruderal habitat 61) Roadside 62) Field margin 99) Other (Elaborate in REMARKS field) '
          enum:
          - '10'
          - '11'
          - '12'
          - '13'
          - '14'
          - '15'
          - '20'
          - '21'
          - '22'
          - '23'
          - '24'
          - '25'
          - '26'
          - '27'
          - '28'
          - '30'
          - '40'
          - '50'
          - '60'
          - '61'
          - '62'
          - '99'
          type: string
        alternateIDs:
          description: 'MCPD (v2.1) (OTHERNUMB) 24. Any other identifiers known to exist in other collections for this accession. Use the following format: INSTCODE:ACCENUMB;INSTCODE:identifier;INSTCODE and identifier are separated by a colon without space. Pairs of INSTCODE and identifier are separated by a semicolon without space. When the institute is not known, the identifier should be preceded by a colon. '
          items:
            type: string
          type: array
        ancestralData:
          description: MCPD (v2.1) (ANCEST) 20. Information about either pedigree or other description of ancestral information (e.g. parent variety in case of mutant or selection). For example a pedigree 'Hanna/7*Atlas//Turk/8*Atlas' or a description 'mutation found in Hanna', 'selection from Irene' or 'cross involving amongst others Hanna and Irene'.
          type: string
        biologicalStatusOfAccessionCode:
          description: 'MCPD (v2.1) (SAMPSTAT) 19. The coding scheme proposed can be used at 3 different levels of detail: either by using the general codes (in boldface) such as 100, 200, 300, 400, or by using the more specific codes such as 110, 120, etc. 100) Wild 110) Natural 120) Semi-natural/wild 130) Semi-natural/sown 200) Weedy 300) Traditional cultivar/landrace 400) Breeding/research material 410) Breeders line 411) Synthetic population 412) Hybrid 413) Founder stock/base population 414) Inbred line (parent of hybrid cultivar) 415) Segregating population 416) Clonal selection 420) Genetic stock 421) Mutant (e.g. induced/insertion mutants, tilling populations) 422) Cytogenetic stocks (e.g. chromosome addition/substitution, aneuploids,  amphiploids) 423) Other genetic stocks (e.g. mapping populations) 500) Advanced or improved cultivar (conventional breeding methods) 600) GMO (by genetic engineering) 999) Other (Elaborate in REMARKS field)'
          enum:
          - '100'
          - '110'
          - '120'
          - '130'
          - '200'
          - '300'
          - '400'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '420'
          - '421'
          - '422'
          - '423'
          - '500'
          - '600'
          - '999'
          type: string
        breedingInstitutes:
          items:
            properties:
              instituteCode:
                description: MCPD (v2.1) (BREDCODE) 18. FAO WIEWS code of the institute that has bred the material. If the holding institute has bred the material, the breeding institute code (BREDCODE) should be the same as the holding institute code (INSTCODE). Follows INSTCODE standard. Multiple values are separated by a semicolon without space.
                type: string
              instituteName:
                description: MCPD (v2.1) (BREDNAME) 18.1  Name of the institute (or person) that bred the material. This descriptor should be used only if BREDCODE cannot be filled because the FAO WIEWS code for this institute is not available. Multiple names are separated by a semicolon without space.
                type: string
            type: object
          type: array
        collectingInfo:
          description: Information about the collection of this germplasm
          properties:
            collectingDate:
              description: MCPD (v2.1) (COLLDATE) 17. Collecting date of the sample [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or "00" [double zero].
              type: string
            collectingInstitutes:
              description: Institutes which collected the sample
              items:
                properties:
                  instituteAddress:
                    description: MCPD (v2.1) (COLLINSTADDRESS) 4.1.1  Address of the institute collecting the sample. This descriptor should be used only if COLLCODE cannot be filled since the FAO WIEWS code for this institute is not available. Multiple values are separated by a semicolon without space.
                    type: string
                  instituteCode:
                    description: MCPD (v2.1) (COLLCODE) 4.  FAO WIEWS code of the institute collecting the sample. If the holding institute has collected the material, the collecting institute code (COLLCODE) should be the same as the holding institute code (INSTCODE). Follows INSTCODE standard. Multiple values are separated by a semicolon without space.
                    type: string
                  instituteName:
                    description: MCPD (v2.1) (COLLNAME) 4.1  Name of the institute collecting the sample. This descriptor should be used only if COLLCODE cannot be filled because the FAO WIEWS code for this institute is not available. Multiple values are separated by a semicolon without space.
                    type: string
                type: object
              type: array
            collectingMissionIdentifier:
              description: MCPD (v2.1) (COLLMISSID) 4.2 Identifier of the collecting mission used by the Collecting Institute (4 or 4.1) (e.g. "CIATFOR052", "CN426").
              type: string
            collectingNumber:
              description: MCPD (v2.1) (COLLNUMB) 3. Original identifier assigned by the collector(s) of the sample, normally composed of the name or initials of the collector(s) followed by a number (e.g. "FM9909"). This identifier is essential for identifying duplicates held in different collections.
              type: string
            collectingSite:
              description: Information about the location where the sample was collected
              properties:
                coordinateUncertainty:
                  description: MCPD (v2.1) (COORDUNCERT) 15.5 Uncertainty associated with the coordinates in metres. Leave the value empty if the uncertainty is unknown.
                  type: string
                elevation:
                  description: MCPD (v2.1) (ELEVATION) 16. Elevation of collecting site expressed in metres above sea level. Negative values are allowed.
                  type: string
                georeferencingMethod:
                  description: MCPD (v2.1) (GEOREFMETH) 15.7  The georeferencing method used (GPS, determined from map, gazetteer, or estimated using software). Leave the value empty if georeferencing method is not known.
                  type: string
                latitudeDecimal:
                  description: MCPD (v2.1) (DECLATITUDE) 15.1 Latitude expressed in decimal degrees. Positive values are North of the Equator; negative values are South of the Equator (e.g. -44.6975).
                  type: string
                latitudeDegrees:
                  description: MCPD (v2.1) (LATITUDE) 15.2 Degrees (2 digits) minutes (2 digits), and seconds (2 digits) followed by N (North) or S (South) (e.g. 103020S). Every missing digit (minutes or seconds) should be indicated with a hyphen. Leading zeros are required (e.g. 10
                  type: string
                locationDescription:
                  description: MCPD (v2.1) (COLLSITE) 14. Location information below the country level that describes where the accession was collected, preferable in English. This might include the distance in kilometres and direction from the nearest town, village or map grid reference point, (e.g. 7 km south of Curitiba in the state of Parana).
                  type: string
                longitudeDecimal:
                  description: MCPD (v2.1) (DECLONGITUDE) 15.3 Longitude expressed in decimal degrees. Positive values are East of the Greenwich Meridian; negative values are West of the Greenwich Meridian (e.g. +120.9123).
                  type: string
                longitudeDegrees:
                  description: MCPD (v2.1) (LONGITUDE) 15.4 Degrees (3 digits), minutes (2 digits), and seconds (2 digits) followed by E (East) or W (West) (e.g. 0762510W). Every missing digit (minutes or seconds) should be indicated with a hyphen. Leading zeros are required (e.g. 076
                  type: string
                spatialReferenceSystem:
                  description: MCPD (v2.1) (COORDDATUM) 15.6 The geodetic datum or spatial reference system upon which the coordinates given in decimal latitude and decimal longitude are based (e.g. WGS84, ETRS89, NAD83). The GPS uses the WGS84 datum.
                  type: string
              type: object
          type: object
        commonCropName:
          description: 'MCPD (v2.1) (CROPNAME) 10. Common name of the crop. Example: "malting barley", "macadamia", "mas". '
          type: string
        countryOfOrigin:
          description: 'MCPD (v2.1) (ORIGCTY) 13. 3-letter ISO 3166-1 code of the country in which the sample was originally collected (e.g. landrace, crop wild relative, farmers" variety), bred or selected (breeding lines, GMOs, segregating populations, hybrids, modern cultivars, etc.). Note: Descriptors 14 to 16 below should be completed accordingly only if it was "collected".'
          type: string
        donorInfo:
          description: Information about the donor
          properties:
            donorAccessionNumber:
              description: MCPD (v2.1) (DONORNUMB) 23. Identifier assigned to an accession by the donor. Follows ACCENUMB standard.
              type: string
            donorInstitute:
              properties:
                instituteCode:
                  description: MCPD (v2.1) (DONORCODE) 22. FAO WIEWS code of the donor institute. Follows INSTCODE standard.
                  type: string
                instituteName:
                  description: MCPD (v2.1) (DONORNAME) 22.1  Name of the donor institute (or person). This descriptor should be used only if DONORCODE cannot be filled because the FAO WIEWS code for this institute is not available.
                  type: string
              type: object
          type: object
        genus:
          description: MCPD (v2.1) (GENUS) 5. Genus name for taxon. Initial uppercase letter required.
          type: string
        germplasmDbId:
          description: A unique identifier which identifies a germplasm in this database
          type: string
        germplasmPUI:
          description: MCPD (v2.1) (PUID) 0. Any persistent, unique identifier assigned to the accession so it can be unambiguously referenced at the global level and the information associated with it harvested through automated means. Report one PUID for each accession. The Secretariat of the International Treaty on Plant Genetic Resources for Food and Agriculture (PGRFA) is facilitating the assignment of a persistent unique identifier (PUID), in the form of a DOI, to PGRFA at the accession level (http://www.planttreaty.org/doi). Genebanks not applying a true PUID to their accessions should use, and request recipients to use, the concatenation of INSTCODE, ACCENUMB, and GENUS as a globally unique identifier similar in most respects to the PUID whenever they exchange information on accessions with third parties (e.g. NOR017:NGB17773:ALLIUM).
          type: string
        instituteCode:
          description: MCPD (v2.1) (INSTCODE) 1. FAO WIEWS code of the institute where the accession is maintained. The codes consist of the 3-letter ISO 3166 country code of the country where the institute is located plus a number (e.g. COL001). The current set of institute codes is available from http://www.fao.org/wiews. For those institutes not yet having an FAO Code, or for those with "obsolete" codes, see "Common formatting rules (v)".
          type: string
        mlsStatus:
          description: MCPD (v2.1) (MLSSTAT) 27. The status of an accession with regards to the Multilateral System (MLS) of the International Treaty on Plant Genetic Resources for Food and Agriculture. Leave the value empty if the status is not known 0 No (not included) 1 Yes (included) 99 Other (elaborate in REMARKS field, e.g. "under development")
          enum:
          - ''
          - '0'
          - '1'
          - '99'
          type: string
        remarks:
          description: MCPD (v2.1) (REMARKS) 28. The remarks field is used to add notes or to elaborate on descriptors with value 99 or 999 (= Other). Prefix remarks with the field name they refer to and a colon (:) without space (e.g. COLLSRC:riverside). Distinct remarks referring to different fields are separated by semicolons without space.
          type: string
        safetyDuplicateInstitues:
          items:
            properties:
              instituteCode:
                description: MCPD (v2.1) (DUPLSITE) 25. FAO WIEWS code of the institute(s) where a safety duplicate of the accession is maintained. Follows INSTCODE standard.
                type: string
              instituteName:
                description: MCPD (v2.1) (DUPLINSTNAME) 25.1  Name of the institute where a safety duplicate of the accession is maintained.
                type: string
            type: object
          type: array
        species:
          description: 'MCPD (v2.1) (SPECIES) 6. Specific epithet portion of the scientific name in lowercase letters. Only the following abbreviation is allowed: "sp." '
          type: string
        speciesAuthority:
          description: MCPD (v2.1) (SPAUTHOR) 7. Provide the authority for the species name.
          type: string
        storageTypeCodes:
          description: MCPD (v2.1) (STORAGE) 26. If germplasm is maintained under different types of storage, multiple choices are allowed, separated by a semicolon (e.g. 20;30). (Refer to FAO/IPGRI Genebank Standards 1994 for details on storage type.) 10) Seed collection 11) Short term 12) Medium term 13) Long term 20) Field collection 30) In vitro collection 40) Cryopreserved collection 50) DNA collection 99) Other (elaborate in REMARKS field)
          items:
            enum:
            - '10'
            - '11'
            - '12'
            - '13'
            - '20'
            - '30'
            - '40'
            - '50'
            - '99'
            type: string
          type: array
        subtaxon:
          description: 'MCPD (v2.1) (SUBTAXA) 8. Subtaxon can be used to store any additional taxonomic identifier. The following abbreviations are allowed: "subsp." (for subspecies); "convar." (for convariety); "var." (for variety); "f." (for form); "Group" (for "cultivar group").'
          type: string
        subtaxonAuthority:
          description: MCPD (v2.1) (SUBTAUTHOR) 9. Provide the subtaxon authority at the most detailed taxonomic level.
          type: string
      type: object
    germplasmMarkerprofilesList:
      properties:
        germplasmDbId:
          description: The ID which uniquely identifies a germplasm within the given database server
          type: string
        markerProfileDbIds:
          description: The ID which uniquely identifies a marker profile within the given database server
          items:
            type: string
          type: array
        markerprofileDbIds:
          deprecated: true
          description: DEPRECATED in v1.3 - see "markerProfileDbIds" (camel case)
          items:
            type: string
      type: object
    germplasmSearchRequest:
      properties:
        accessionNumbers:
          description: List unique identifiers for accessions within a genebank
          items:
            type: string
          type: array
        commonCropNames:
          description: List crops to search by
          items:
            type: string
          type: array
        germplasmDbIds:
          description: List of IDs which uniquely identify germplasm
          items:
            type: string
          type: array
        germplasmGenus:
          description: List of Genus names to identify germplasm
          items:
            type: string
          type: array
        germplasmNames:
          description: List of human readable names to identify germplasm
          items:
            type: string
          type: array
        germplasmPUIs:
          description: List of Permanent Unique Identifiers to identify germplasm
          items:
            type: string
          type: array
        germplasmSpecies:
          description: List of Species names to identify germplasm
          items:
            type: string
          type: array
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
      type: object
    germplasmSummary:
      properties:
        accessionNumber:
          description: This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection
          type: string
        acquisitionDate:
          description: The date this germplasm was aquired by the genebank (MCPD)
          format: date
          type: string
        biologicalStatusOfAccessionCode:
          description: The 3 digit code representing the biological status of the accession (MCPD)
          type: integer
        breedingMethodDbId:
          description: The unique identifier for the breeding method used to create this germplasm
          type: string
        commonCropName:
          description: Common name for the crop (MCPD)
          type: string
        countryOfOriginCode:
          description: 3-letter ISO 3166-1 code of the country in which the sample was originally collected (MCPD)
          type: string
        defaultDisplayName:
          description: Human readable name used for display purposes
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        donors:
          description: List of donor institutes (MCPD)
          items:
            properties:
              donorAccessionNumber:
                type: string
              donorInstituteCode:
                type: string
              germplasmPUI:
                type: string
            type: object
          type: array
        entryNumber:
          deprecated: true
          description: '** Deprecated ** use /studies/{studyDbId/layout for positional germplasm relationships'
          type: string
        genus:
          description: Genus name for taxon. Initial uppercase letter required. (MCPD)
          type: string
        germplasmDbId:
          description: The ID which uniquely identifies a germplasm within the given database server
          type: string
        germplasmName:
          description: Name of the germplasm. It can be the prefered name and does not have to be unique.
          type: string
        germplasmPUI:
          description: The Permanent Unique Identifier which represents a germplasm
          type: string
        instituteCode:
          description: The code for the Institute that has bred the material. (MCPD)
          type: string
        instituteName:
          description: The name of the institution which bred the material (MCPD)
          type: string
        pedigree:
          description: The cross name and optional selection history.
          type: string
        seedSource:
          description: 'The source of the seed '
          type: string
        species:
          description: Specific epithet portion of the scientific name in lowercase letters. (MCPD)
          type: string
        speciesAuthority:
          description: The authority organization responsible for tracking and maintaining the species name (MCPD)
          type: string
        subtaxa:
          description: Subtaxon can be used to store any additional taxonomic identifier. (MCPD)
          type: string
        subtaxaAuthority:
          description: ' The authority organization responsible for tracking and maintaining the subtaxon information (MCPD)'
          type: string
        synonyms:
          description: List of alternative names or IDs used to reference this germplasm
          items:
            type: string
          type: array
        taxonIds:
          description: The list of IDs for this SPECIES from different sources. If present, NCBI Taxon should be always listed as "ncbiTaxon" preferably with a purl. The rank of this ID should be species.
          items:
            $ref: '#/components/schemas/taxonID'
          type: array
        typeOfGermplasmStorageCode:
          description: The 2 digit code representing the type of storage this germplasm is kept in at a genebank. (MCPD)
          items:
            type: string
          type: array
      type: object
    germplasmSummaryList:
      properties:
        data:
          description: List of germplasm associated with a given trial and study
          items:
            $ref: '#/components/schemas/germplasmSummary'
          type: array
        studyDbId:
          deprecated: true
          description: |-
            ** Deprecated ** The request contains the studyDbId
            The ID which uniquely identifies a study within the given database server
          type: string
        trialName:
          deprecated: true
          description: "** Deprecated ** trialName not relevent \nThe human readable name of a trial"
          type: string
      type: object
    image:
      properties:
        additionalInfo:
          additionalProperties:
            type: string
          type: object
        copyright:
          description: The copyright information of this image. Example 'Copyright 2018 Bob Robertson'
          type: string
        description:
          description: The human readable description of an image.
          type: string
        descriptiveOntologyTerms:
          description: A list of terms to formally describe the image. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL.
          items:
            type: string
          type: array
        imageDbId:
          description: The unique identifier of an image
          type: string
        imageFileName:
          description: The name of the image file. Might be the same as 'imageName', but could be different.
          type: string
        imageFileSize:
          description: The size of the image in Bytes.
          type: integer
        imageHeight:
          description: The height of the image in Pixels.
          type: integer
        imageLocation:
          $ref: '#/components/schemas/geoJSON'
        imageName:
          description: The human readable name of an image. Might be the same as 'imageFileName', but could be different.
          type: string
        imageTimeStamp:
          description: The date and time the image was taken
          format: date-time
          type: string
        imageURL:
          description: The complete, absolute URI path to the image file. Images might be stored on a different host or path than the BrAPI web server.
          type: string
        imageWidth:
          description: The width of the image in Pixels.
          type: integer
        mimeType:
          description: The file type of the image. Examples 'image/jpeg', 'image/png', 'image/svg', etc
          pattern: image/.*
          type: string
        observationDbIds:
          description: A list of observation Ids this image is associated with, if applicable.
          items:
            type: string
          type: array
        observationUnitDbId:
          description: The related observation unit identifier, if relevent.
          type: string
      type: object
    imagesSearchRequest:
      properties:
        descriptiveOntologyTerms:
          description: A list of terms to formally describe the image to search for. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL.
          items:
            type: string
          type: array
        imageFileNames:
          description: Image file names to search for.
          items:
            type: string
          type: array
        imageFileSizeMax:
          description: A maximum image file size to search for.
          type: integer
        imageFileSizeMin:
          description: A minimum image file size to search for.
          type: integer
        imageHeightMax:
          description: A maximum image height to search for.
          type: integer
        imageHeightMin:
          description: A minimum image height to search for.
          type: integer
        imageLocation:
          $ref: '#/components/schemas/geoJSON'
        imageNames:
          description: Human readable names to search for.
          items:
            type: string
          type: array
        imageTimeStampRangeEnd:
          description: The latest timestamp to search for.
          format: date-time
          type: string
        imageTimeStampRangeStart:
          description: The earliest timestamp to search for.
          format: date-time
          type: string
        imageWidthMax:
          description: A maximum image width to search for.
          type: integer
        imageWidthMin:
          description: A minimum image width to search for.
          type: integer
        mimeTypes:
          description: A set of image file types to search for.
          items:
            pattern: image/.*
            type: string
          type: array
        observationDbIds:
          description: A list of observation Ids this image is associated with to search for
          items:
            type: string
          type: array
        observationUnitDbIds:
          description: A set of observation unit identifiers to search for.
          items:
            type: string
          type: array
      type: object
    linearRing:
      description: An array of at least four positions where the first equals the last
      items:
        $ref: '#/components/schemas/position'
      minItems: 4
      type: array
    linkageGroup:
      properties:
        linkageGroupName:
          description: The Uniquely Identifiable name of this linkage group
          type: string
        markerCount:
          description: The number of markers associated with this linkage group
          type: integer
        maxPosition:
          description: The maximum position of a marker within this linkage group
          type: integer
      type: object
    listDetails:
      allOf:
      - $ref: '#/components/schemas/listSummary'
      - properties:
          data:
            items:
              type: string
            type: array
        type: object
    listSummary:
      properties:
        dateCreated:
          format: date-time
          type: string
        dateModified:
          format: date-time
          type: string
        description:
          type: string
        listDbId:
          type: string
        listName:
          type: string
        listOwnerName:
          type: string
        listOwnerPersonDbId:
          type: string
        listSize:
          type: integer
        listSource:
          type: string
        listType:
          $ref: '#/components/schemas/listTypes'
      required:
      - listDbId
      - listType
      type: object
    listTypes:
      enum:
      - germplasm
      - markers
      - programs
      - trials
      - studies
      - observationUnits
      - observations
      - observationVariables
      - samples
      type: string
    location:
      properties:
        abbreviation:
          description: An abbreviation which represents this location
          type: string
        abreviation:
          deprecated: true
          description: 'Deprecated  Use abbreviation '
          type: string
        additionalInfo:
          additionalProperties:
            type: string
          description: Additional arbitrary info
          type: object
        altitude:
          description: The altitude of this location
          type: number
        countryCode:
          description: '[ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec'
          type: string
        countryName:
          description: The full name of the country where this location is
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        instituteAddress:
          description: The street address of the institute representing this location
          type: string
        instituteAdress:
          deprecated: true
          description: 'Deprecated  Use instituteAddress '
          type: string
        instituteName:
          description: each institute/laboratory can have several experimental field
          type: string
        latitude:
          description: The latitude of this location
          type: number
        locationDbId:
          description: string identifier
          type: string
        locationName:
          description: A human readable name for this location
          type: string
        locationType:
          description: The type of location this represents (ex. Breeding Location, Storage Location, etc)
          type: string
        longitude:
          description: the longitude of this location
          type: number
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "locationName"
          type: string
      type: object
    marker:
      properties:
        analysisMethods:
          description: List of the genotyping platforms used to interrogate the marker
          items:
            type: string
          type: array
        defaultDisplayName:
          deprecated: true
          description: DEPRECATED in v 1.3 - see "markerName"
          type: string
        markerDbId:
          description: Internal db identifier
          type: string
        markerName:
          description: A string representing the marker that will be meaningful to the user
          type: string
        refAlt:
          description: List of the reference (as the first item) and alternatives (the remaining items)
          items:
            type: string
          type: array
        synonyms:
          description: List of other names for this marker
          items:
            type: string
          type: array
        type:
          description: The type of marker, e.g. SNP
          type: string
      type: object
    markerProfile:
      properties:
        analysisMethod:
          description: The type of analysis performed to determine a set of marker data
          type: string
        data:
          description: array of marker-name/score pairs
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        extractDbId:
          description: Required
          type: string
        germplasmDbId:
          description: Required
          type: string
        markerProfileDbId:
          description: Unique in the database. Can be a catenation of unique IDs for germplasm and extract. Required
          type: string
        markerprofileDbId:
          deprecated: true
          description: DEPRECATED in v1.3 - see "markerProfileDbId" (camel case)
          type: string
        uniqueDisplayName:
          description: Human readable display name for this marker profile
          type: string
      required:
      - data
      - extractDbId
      - germplasmDbId
      - markerProfileDbId
      type: object
    markerProfileDescription:
      properties:
        analysisMethod:
          description: The type of analysis performed to determine a set of marker data
          type: string
        extractDbId:
          description: ' The ID which uniquely identifies this data extract'
          type: string
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          type: string
        markerProfileDbId:
          description: Unique in the database. Can be a catenation of unique IDs for germplasm and extract. Required
          type: string
        markerprofileDbId:
          deprecated: true
          description: DEPRECATED in v1.3 - see "markerProfileDbId" (camel case)
          type: string
        resultCount:
          description: Number of markers present in the marker profile
          type: integer
        sampleDbId:
          description: The ID which uniquely identifies a sample
          type: string
        uniqueDisplayName:
          description: Human readable display name for this marker profile
          type: string
      required:
      - markerProfileDbId
      type: object
    markerResponse:
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/marker'
      type: object
    markerSummaryLinkageGroup:
      properties:
        location:
          description: The position of a marker within a linkage group
          type: string
        markerDbId:
          description: Internal db identifier
          type: string
        markerName:
          description: The human readable name for a marker
          type: string
      type: object
    markerSummaryMap:
      properties:
        linkageGroupName:
          description: The Uniquely Identifiable name of this linkage group
          type: string
        location:
          description: The position of a marker within a linkage group
          type: string
        markerDbId:
          description: Internal db identifier
          type: string
        markerName:
          description: The human readable name for a marker
          type: string
      type: object
    markersResponse:
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          properties:
            data:
              items:
                $ref: '#/components/schemas/marker'
              type: array
          type: object
      type: object
    markersSearchRequest:
      properties:
        includeSynonyms:
          description: Should an array of synonyms be included in the response
          type: boolean
        markerDbIds:
          description: 'List of IDs which uniquely identify markers '
          items:
            type: string
          type: array
        markerNames:
          description: The search pattern for the marker name or synonym.
          items:
            type: string
          type: array
        matchMethod:
          description: How to perform string matching during search. 'exact' will search for exact, case sensitive matches only. 'case_insensitive' will search for exact matches, but case insensitive. 'wildcard' will allow the special characters '*' (star) and '%' (percent) to represent variable length arbitrary strings, and the special character '?' (question) to represent one arbitrary character.
          enum:
          - exact
          - case_insensitive
          - wildcard
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v 1.3 - see "markerNames"
          type: string
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        type:
          deprecated: true
          description: DEPRECATED in v 1.3 - see "types"
          type: string
        types:
          description: The type of marker, e.g. SNP
          items:
            type: string
          type: array
      type: object
    measurement:
      description: A value with units
      properties:
        units:
          description: 'Units (example: "ng/ul")'
          type: string
        value:
          description: 'Value (example: "2.3")'
          type: number
      type: object
    metadata:
      properties:
        datafiles:
          description: The datafiles key contains a list of file paths, which can be relative or complete URLs. These files contain additional information related to the returned object and can be retrieved by a subsequent call. The empty list should be returned if no additional data files are present.
          items:
            type: string
          type: array
        pagination:
          description: The pagination object is applicable only when the payload contains a "data" key. It describes the pagination of the data contained in the "data" array, as a way to identify which subset of data is being returned. Pages are zero indexed, so the first page will be page 0 (zero).
          properties:
            currentPage:
              type: integer
            pageSize:
              type: integer
            totalCount:
              type: integer
            totalPages:
              type: integer
          type: object
        status:
          description: The status field contains a list of informational status messages from the server. If no status is reported, an empty list should be returned. See Error Reporting for more information.
          items:
            $ref: '#/components/schemas/status'
          type: array
      type: object
    method:
      description: Method metadata
      properties:
        class:
          description: 'Method class (examples: "Measurement", "Counting", "Estimation", "Computation", etc.'
          title: className
          type: string
        description:
          description: Method description.
          type: string
        formula:
          description: For computational methods i.e., when the method consists in assessing the trait by computing measurements, write the generic formula used for the calculation
          type: string
        methodDbId:
          description: Method unique identifier
          type: string
        methodName:
          description: Human readable name for the method
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "methodName"
          type: string
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        reference:
          description: Bibliographical reference describing the method.
          type: string
      type: object
    newImageRequest:
      properties:
        additionalInfo:
          additionalProperties:
            type: string
          type: object
        copyright:
          description: The copyright information of this image. Example 'Copyright 2018 Bob Robertson'
          type: string
        description:
          description: The human readable description of an image.
          type: string
        descriptiveOntologyTerms:
          description: A list of terms to formally describe the image. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL.
          items:
            type: string
          type: array
        imageFileName:
          description: The name of the image file. Might be the same as 'imageName', but could be different.
          type: string
        imageFileSize:
          description: The size of the image in Bytes.
          type: integer
        imageHeight:
          description: The height of the image in Pixels.
          type: integer
        imageLocation:
          $ref: '#/components/schemas/geoJSON'
        imageName:
          description: The human readable name of an image. Might be the same as 'imageFileName', but could be different.
          type: string
        imageTimeStamp:
          description: The date and time the image was taken
          format: date-time
          type: string
        imageWidth:
          description: The width of the image in Pixels.
          type: integer
        mimeType:
          description: The file type of the image. Examples 'image/jpeg', 'image/png', 'image/svg', etc
          pattern: image/.*
          type: string
        observationDbIds:
          description: A list of observation Ids this image is associated with, if applicable.
          items:
            type: string
          type: array
        observationUnitDbId:
          description: The related observation unit identifier, if relevent.
          type: string
      type: object
    newListRequest:
      properties:
        data:
          items:
            type: string
          type: array
        description:
          type: string
        listName:
          type: string
        listOwnerName:
          type: string
        listOwnerPersonDbId:
          type: string
        listSize:
          type: integer
        listSource:
          type: string
        listType:
          $ref: '#/components/schemas/listTypes'
      required:
      - listType
      type: object
    newMethodRequest:
      description: new Method request
      properties:
        class:
          description: 'Method class (examples: "Measurement", "Counting", "Estimation", "Computation", etc.)'
          title: className
          type: string
        description:
          description: Method description.
          type: string
        formula:
          description: For computational methods i.e., when the method consists in assessing the trait by computing measurements, write the generic formula used for the calculation
          type: string
        methodName:
          description: Human readable name for the method
          type: string
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        reference:
          description: Bibliographical reference describing the method.
          type: string
      type: object
    newObservationDbIds:
      properties:
        observations:
          description: List of observation references which have been created or updated
          items:
            properties:
              observationDbId:
                type: string
              observationUnitDbId:
                type: string
              observationVariableDbId:
                type: string
            type: object
          type: array
      type: object
    newObservationUnitDbIds:
      properties:
        observationUnitDbIds:
          description: List of observation unit references which have been created or updated
          items:
            type: string
          type: array
      type: object
    newObservationUnitRequest:
      properties:
        X:
          deprecated: true
          description: DEPRECATED - use "positionCoordinateX"
          title: xCoordinate
          type: string
        Y:
          deprecated: true
          description: DEPRECATED - use "positionCoordinateY"
          title: yCoordinate
          type: string
        blockNumber:
          description: The block number for an observation unit. Different systems may use different block designs.
          type: string
        entryNumber:
          description: The entry number for an observation unit. Different systems may use different entry systems.
          type: string
        entryType:
          description: The type of entry for this observation unit. ex. "check", "test", "filler"
          type: string
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          type: string
        observationLevel:
          description: The level of an observation unit. ex. "plot", "plant"
          type: string
        observationUnitDbId:
          description: The ID which uniquely identifies an observation unit
          type: string
        observationUnitName:
          description: A human readable name for an observation unit
          type: string
        observationUnitXref:
          description: A list of external references to this observation unit
          items:
            $ref: '#/components/schemas/observationUnitXref'
          type: array
        observations:
          description: List of observations associated with this observation unit
          items:
            $ref: '#/components/schemas/observation'
          type: array
        plantNumber:
          description: 'The plant number in a field. Applicable for observationLevel: "plant"'
          type: string
        plotNumber:
          description: 'The plot number in a field. Applicable for observationLevel: "plot"'
          type: string
        positionCoordinateX:
          description: The X position coordinate for an observation unit. Different systems may use different coordinate systems.
          type: string
        positionCoordinateXType:
          description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
          type: string
        positionCoordinateY:
          description: The Y position coordinate for an observation unit. Different systems may use different coordinate systems.
          type: string
        positionCoordinateYType:
          description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
          type: string
        replicate:
          description: The replicate number of an observation unit. May be the same as blockNumber.
          type: string
        studyDbId:
          description: The ID which uniquely identifies a study within the given database server
          type: string
        treatments:
          description: List of treatments applied to an observation unit.
          items:
            $ref: '#/components/schemas/observationTreatment'
          type: array
      type: object
    newObservationsRequest:
      properties:
        observations:
          description: List of observation references to be created or updated
          items:
            properties:
              collector:
                type: string
              observationDbId:
                type: string
              observationTimeStamp:
                format: date-time
                type: string
              observationUnitDbId:
                type: string
              observationVariableDbId:
                type: string
              value:
                type: string
            type: object
          type: array
      type: object
    newObservationsRequestDeprecated:
      properties:
        commit:
          description: Should these changes be commited
          type: string
        data:
          description: |-
            Required
            array of marker-name/score pairs
          items:
            properties:
              observatioUnitDbId:
                type: string
              observations:
                items:
                  properties:
                    collector:
                      type: string
                    observationDbId:
                      type: string
                    observationTimeStamp:
                      format: date-time
                      type: string
                    observationUnitDbId:
                      type: string
                    observationVariableDbId:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              studyDbId:
                type: number
            type: object
          type: array
        transactionDbId:
          description: The ID representing this transaction
          type: string
      type: object
    newObservationsTableRequest:
      properties:
        data:
          description: Matrix of observation data recorded for different observation variables across different observation units
          items:
            items:
              type: string
            type: array
          type: array
        headerRow:
          description: The header row describing the data matrix. Append 'observationVariableDbIds' for complete header row.
          items:
            type: string
          type: array
        metadata:
          deprecated: true
          description: DEPRECATED
          properties:
            datafiles:
              items:
                type: string
              type: array
            pagination:
              properties:
                currentPage:
                  type: integer
                pageSize:
                  type: integer
                totalCount:
                  type: integer
                totalPages:
                  type: integer
              type: object
            status:
              items:
                $ref: '#/components/schemas/status'
              type: array
        observationVariableDbIds:
          description: The list of observation variables which have values recorded for them in the data matrix. Append to the 'headerRow' for comlete header row.
          items:
            type: string
          type: array
        result:
          deprecated: true
          description: DEPRECATED
          properties:
            data:
              items:
                items:
                  type: string
                type: array
              type: array
          type: object
      type: object
    newPersonRequest:
      properties:
        description:
          description: description of this person
          type: string
        emailAddress:
          description: email address for this person
          type: string
        firstName:
          description: Persons first name
          type: string
        lastName:
          description: Persons last name
          type: string
        mailingAddress:
          description: physical address of this person
          type: string
        middleName:
          description: Persons middle name
          type: string
        phoneNumber:
          description: phone number of this person
          type: string
        userID:
          description: A systems user ID ascociated with this person. Different from personDbId because you could have a person who is not a user of the system.
          type: string
      type: object
    newSampleDbId:
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          description: List of sample references which have been created or updated
          properties:
            sampleDbId:
              type: string
            sampleId:
              deprecated: true
              description: '** Deprecated ** use sampleDbId'
              type: string
          type: object
      type: object
    newScaleRequest:
      description: New scale request object
      properties:
        dataType:
          $ref: '#/components/schemas/traitDataType'
        decimalPlaces:
          description: For numerical, number of decimal places to be reported
          type: integer
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        scaleName:
          description: Name of the scale
          type: string
        validValues:
          $ref: '#/components/schemas/validValues'
        xref:
          description: Cross reference to the scale, for example to a unit ontology such as UO or to a unit of an external major database
          type: string
      type: object
    newTraitRequest:
      properties:
        alternativeAbbreviations:
          description: Other frequent abbreviations of the trait, if any. These abbreviations do not have to follow a convention
          items:
            type: string
          type: array
        attribute:
          description: A trait can be decomposed as "Trait" = "Entity" + "Attribute", the attribute is the observed feature (or characteristic) of the entity e.g., for "grain colour", attribute = "colour"
          type: string
        class:
          description: 'Trait class. (examples: "morphological trait", "phenological trait", "agronomical trait", "physiological trait", "abiotic stress trait", "biotic stress trait", "biochemical trait", "quality traits trait", "fertility trait", etc.)'
          title: className
          type: string
        description:
          description: The description of a trait
          type: string
        entity:
          description: A trait can be decomposed as "Trait" = "Entity" + "Attribute", the entity is the part of the plant that the trait refers to e.g., for "grain colour", entity = "grain"
          type: string
        mainAbbreviation:
          description: 'Main abbreviation for trait name. (examples: "Carotenoid content" => "CC")'
          type: string
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        status:
          description: 'Trait status (examples: "recommended", "obsolete", "legacy", etc.)'
          type: string
        synonyms:
          description: Other trait names
          items:
            type: string
          type: array
        traitName:
          description: The human readable name of a trait
          type: string
        xref:
          description: Cross reference of the trait to an external ontology or database term e.g., Xref to a trait ontology (TO) term
          type: string
      type: object
    observation:
      properties:
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          type: string
        germplasmName:
          description: Name of the germplasm. It can be the prefered name and does not have to be unique.
          type: string
        observationDbId:
          description: The ID which uniquely identifies an observation
          type: string
        observationLevel:
          description: The level of an observation unit. ex. "plot", "plant"
          type: string
        observationTimeStamp:
          description: 'The date and time  when this observation was made '
          format: date-time
          type: string
        observationUnitDbId:
          description: The ID which uniquely identifies an observation unit
          type: string
        observationUnitName:
          description: A human readable name for an observation unit
          type: string
        observationVariableDbId:
          description: The ID which uniquely identifies an observation variable
          type: string
        observationVariableName:
          description: A human readable name for an observation variable
          type: string
        operator:
          description: The name or identifier of the entity which collected the observation
          type: string
        season:
          $ref: '#/components/schemas/season'
        studyDbId:
          description: The ID which uniquely identifies a study within the given database server
          type: string
        uploadedBy:
          description: The name or id of the user who uploaded the observation to the database system
          type: string
        value:
          description: The value of the data collected as an observation
          type: string
      type: object
    observationSummary:
      properties:
        collector:
          description: The name or identifier of the entity which collected the observation
          type: string
        observationDbId:
          description: The ID which uniquely identifies an observation
          type: string
        observationTimeStamp:
          description: 'The date and time  when this observation was made '
          format: date-time
          type: string
        observationVariableDbId:
          description: The ID which uniquely identifies an observation variable
          type: string
        observationVariableName:
          description: A human readable name for an observation variable
          type: string
        season:
          $ref: '#/components/schemas/season'
        value:
          description: The value of the data collected as an observation
          type: string
      type: object
    observationSummaryPhenotype:
      properties:
        collector:
          description: The name or identifier of the entity which collected the observation
          type: string
        observationDbId:
          description: The ID which uniquely identifies an observation
          type: string
        observationTimeStamp:
          description: 'The date and time  when this observation was made '
          format: date-time
          type: string
        observationVariableDbId:
          description: The ID which uniquely identifies an observation variable
          type: string
        observationVariableName:
          description: A human readable name for an observation variable
          type: string
        season:
          description: The season when the observation data was collected
          type: string
        value:
          description: The value of the data collected as an observation
          type: string
      type: object
    observationTreatment:
      properties:
        factor:
          description: The type of treatment/factor. ex. 'fertilizer', 'inoculation', 'irrigation', etc
          type: string
        modality:
          description: The treatment/factor descritpion. ex. 'low fertilizer', 'yellow rust inoculation', 'high water', etc
          type: string
      type: object
    observationUnit:
      properties:
        X:
          deprecated: true
          description: DEPRECATED - use "positionCoordinateX"
          title: xCoordinate
          type: string
        Y:
          deprecated: true
          description: DEPRECATED - use "positionCoordinateY"
          title: yCoordinate
          type: string
        blockNumber:
          description: The block number for an observation unit. Different systems may use different block designs.
          type: string
        entryNumber:
          description: The entry number for an observation unit. Different systems may use different entry systems.
          type: string
        entryType:
          description: The type of entry for this observation unit. ex. "check", "test", "filler"
          type: string
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          type: string
        germplasmName:
          description: Name of the germplasm. It can be the prefered name and does not have to be unique.
          type: string
        locationDbId:
          description: The ID which uniquely identifies a location, associated with this study
          type: string
        locationName:
          description: The human readable name of a location associated with this study
          type: string
        observationLevel:
          description: The level of an observation unit. ex. "plot", "plant"
          type: string
        observationLevels:
          description: Concatenation of the levels of this observationUnit. Used to handle non canonical level structures. Format levelType:levelID,levelType:levelID
          type: string
        observationUnitDbId:
          description: The ID which uniquely identifies an observation unit
          type: string
        observationUnitName:
          description: A human readable name for an observation unit
          type: string
        observationUnitXref:
          description: A list of external references to this observation unit
          items:
            $ref: '#/components/schemas/observationUnitXref'
          type: array
        observations:
          description: List of observations associated with this observation unit
          items:
            $ref: '#/components/schemas/observationSummary'
          type: array
        pedigree:
          description: The string representation of the pedigree of this observation unit
          type: string
        plantNumber:
          description: 'The plant number in a field. Applicable for observationLevel: "plant"'
          type: string
        plotNumber:
          description: 'The plot number in a field. Applicable for observationLevel: "plot"'
          type: string
        positionCoordinateX:
          description: The X position coordinate for an observation unit. Different systems may use different coordinate systems.
          type: string
        positionCoordinateXType:
          description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
          type: string
        positionCoordinateY:
          description: The Y position coordinate for an observation unit. Different systems may use different coordinate systems.
          type: string
        positionCoordinateYType:
          description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
          type: string
        programDbId:
          description: The ID which uniquely identifies a program
          type: string
        programName:
          description: The human readable name of a program
          type: string
        replicate:
          description: The replicate number of an observation unit. May be the same as blockNumber.
          type: string
        studyDbId:
          description: The ID which uniquely identifies a study within the given database server
          type: string
        studyLocation:
          deprecated: true
          description: DEPRECATED in v1.3 - see "locationName"
          type: string
        studyLocationDbId:
          deprecated: true
          description: DEPRECATED in v1.3 - see "locationDbId"
          type: string
        studyName:
          description: The human readable name for a study
          type: string
        treatments:
          description: List of treatments applied to an observation unit.
          items:
            $ref: '#/components/schemas/observationTreatment'
          type: array
        trialDbId:
          description: The ID which uniquely identifies a trial
          type: string
        trialName:
          description: The human readable name of a trial
          type: string
      type: object
    observationUnitPhenotype:
      properties:
        X:
          deprecated: true
          description: DEPRECATED - use "positionCoordinateX"
          title: xCoordinate
          type: string
        Y:
          deprecated: true
          description: DEPRECATED - use "positionCoordinateY"
          title: yCoordinate
          type: string
        blockNumber:
          description: The block number for an observation unit. Different systems may use different block designs.
          type: string
        entryNumber:
          description: The entry number for an observation unit. Different systems may use different entry systems.
          type: string
        entryType:
          description: The type of entry for this observation unit. ex. "check", "test", "filler"
          type: string
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          type: string
        germplasmName:
          description: Name of the germplasm. It can be the prefered name and does not have to be unique.
          type: string
        observationLevel:
          description: The level of an observation unit. ex. "plot", "plant"
          type: string
        observationLevels:
          description: Concatenation of the levels of this observationUnit. Used to handle non canonical level structures. Format levelType:levelID,levelType:levelID
          type: string
        observationUnitDbId:
          description: The ID which uniquely identifies an observation unit
          type: string
        observationUnitName:
          description: A human readable name for an observation unit
          type: string
        observationUnitXref:
          description: A list of external references to this observation unit
          items:
            $ref: '#/components/schemas/observationUnitXref'
          type: array
        observations:
          description: List of observations associated with this observation unit
          items:
            $ref: '#/components/schemas/observationSummaryPhenotype'
          type: array
        plantNumber:
          description: 'The plant number in a field. Applicable for observationLevel: "plant"'
          type: string
        plotNumber:
          description: 'The plot number in a field. Applicable for observationLevel: "plot"'
          type: string
        positionCoordinateX:
          description: The X position coordinate for an observation unit. Different systems may use different coordinate systems.
          type: string
        positionCoordinateXType:
          description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
          type: string
        positionCoordinateY:
          description: The Y position coordinate for an observation unit. Different systems may use different coordinate systems.
          type: string
        positionCoordinateYType:
          description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
          type: string
        programName:
          description: The human readable name of a program
          type: string
        replicate:
          description: The replicate number of an observation unit. May be the same as blockNumber.
          type: string
        studyDbId:
          description: The ID which uniquely identifies a study within the given database server
          type: string
        studyLocation:
          description: The human readable name of a location associated with this study
          type: string
        studyLocationDbId:
          description: The ID which uniquely identifies a location, associated with this study
          type: string
        studyName:
          description: The human readable name for a study
          type: string
        treatments:
          description: List of treatments applied to an observation unit.
          items:
            $ref: '#/components/schemas/observationTreatment'
          type: array
      type: object
    observationUnitPosition:
      properties:
        X:
          deprecated: true
          description: DEPRECATED - use "positionCoordinateX"
          title: xCoordinate
          type: string
        Y:
          deprecated: true
          description: DEPRECATED - use "positionCoordinateY"
          title: yCoordinate
          type: string
        additionalInfo:
          additionalProperties:
            type: string
          description: Additional arbitrary info
          type: object
        blockNumber:
          description: The block number for an observation unit. Different systems may use different block designs.
          type: string
        entryType:
          description: The type of entry for this observation unit. ex. "check", "test", "filler"
          enum:
          - CHECK
          - TEST
          - FILLER
          type: string
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          type: string
        germplasmName:
          description: Name of the germplasm. It can be the prefered name and does not have to be unique.
          type: string
        observationLevel:
          description: The level of an observation unit. ex. "plot", "plant"
          type: string
        observationUnitDbId:
          description: The ID which uniquely identifies an observation unit
          type: string
        observationUnitName:
          description: A human readable name for an observation unit
          type: string
        positionCoordinateX:
          description: The X position coordinate for an observation unit. Different systems may use different coordinate systems.
          type: string
        positionCoordinateXType:
          description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
          type: string
        positionCoordinateY:
          description: The Y position coordinate for an observation unit. Different systems may use different coordinate systems.
          type: string
        positionCoordinateYType:
          description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
          enum:
          - LONGITUDE
          - LATITUDE
          - PLANTED_ROW
          - PLANTED_INDIVIDUAl
          - GRID_ROW
          - GRID_COL
          - MEASURED_ROW
          - MEASURED_COL
          type: string
        replicate:
          description: The replicate number of an observation unit. May be the same as blockNumber.
          type: string
        studyDbId:
          description: The ID which uniquely identifies a study within the given database server
          type: string
      type: object
    observationUnitXref:
      properties:
        id:
          description: The unique ID in the external reference 'source' system
          type: string
        source:
          description: The system identifier (name, URL, etc) which has an external reference to the observation unit
          type: string
      type: object
    observationUnitsTableResponse:
      properties:
        data:
          description: Matrix of observation meta-data and recorded values. Each inner array represents 1 row of data.
          items:
            items:
              type: string
            type: array
          type: array
        headerRow:
          description: Names of the columns included in the data matrix. Any or All of [ "year","studyDbId","studyName","locationDbId","locationName","germplasmDbId","germplasmName","observationUnitDbId","plotNumber","replicate","blockNumber", "entryType", "X", "Y"]
          items:
            type: string
          type: array
        observationVariableDbIds:
          description: Array of observation variable DbIds for the collected data. This array is appended to the "headerRow" to get the complete header of the data matrix
          items:
            type: string
          type: array
        observationVariableNames:
          description: Human readable names of the observation variables for the collected data. This array should match 1 to 1 with the "observationVariableDbIds" array.
          items:
            type: string
          type: array
      type: object
    observationVariable:
      allOf:
      - $ref: '#/components/schemas/VariableBaseClass'
      - properties:
          date:
            deprecated: true
            description: DEPRECATED in v1.3 - see "submissionTimestamp"
            type: string
          name:
            deprecated: true
            description: DEPRECATED in v1.3 - Use "observationVariableName"
            type: string
          observationVariableDbId:
            description: Variable unique identifier
            type: string
          observationVariableName:
            description: Variable name (usually a short name)
            type: string
        required:
        - observationVariableDbId
        - observationVariableName
        type: object
    observationVariableSearchRequest:
      properties:
        dataTypes:
          description: List of scale data types to filter search results
          items:
            $ref: '#/components/schemas/traitDataType'
          type: array
        methodDbIds:
          description: List of methods to filter search results
          items:
            type: string
          type: array
        observationVariableDbIds:
          description: List of observation variable IDs to search for
          items:
            type: string
          type: array
        observationVariableNames:
          description: List of human readable observation variable names to search for
          items:
            type: string
          type: array
        observationVariableXrefs:
          description: List of cross references for the observation variable to search for
          items:
            type: string
          type: array
        ontologyDbIds:
          description: List of ontology IDs to search for
          items:
            type: string
          type: array
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        scaleDbIds:
          description: List of scales to filter search results
          items:
            type: string
          type: array
        scaleXrefs:
          description: List of cross references for the scale to search for
          items:
            type: string
          type: array
        traitClasses:
          description: List of trait classes to filter search results
          items:
            type: string
          type: array
        traitDbIds:
          description: List of trait unique ID to filter search results
          items:
            type: string
          type: array
        traitXrefs:
          description: List of cross references for the trait to search for
          items:
            type: string
          type: array
      type: object
    observationVariableSearchRequest_Dep:
      properties:
        datatypes:
          description: List of scale data types to filter search results
          items:
            $ref: '#/components/schemas/traitDataType'
          type: array
        methodDbIds:
          description: List of methods to filter search results
          items:
            type: string
          type: array
        names:
          description: List of human readable observation variable names to search for
          items:
            type: string
          type: array
        observationVariableDbIds:
          description: List of observation variable IDs to search for
          items:
            type: string
          type: array
        ontologyDbIds:
          description: List of ontology IDs to search for
          items:
            type: string
          type: array
        ontologyXrefs:
          description: List of cross reference values to search for
          items:
            type: string
          type: array
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        scaleDbIds:
          description: List of scales to filter search results
          items:
            type: string
          type: array
        traitClasses:
          description: List of trait classes to filter search results
          items:
            type: string
          type: array
      type: object
    observationsTable:
      properties:
        data:
          description: Matrix of observation data recorded for different observation variables across different observation units
          items:
            items:
              type: string
            type: array
          type: array
        headerRow:
          description: |-
            The header row describing observation unit fields. Append 'observationVariableDbIds' for complete header row of the table.
            This array should contain any or all of the following strings; year, studyDbId, studyName, locationDbId, locationName, germplasmDbId, germplasmName, observationUnitDbId, plotNumber, replicate, blockNumber, observationTimestamp (DEPRECATED in V1.3), entryType, X, Y
          items:
            description: valid header fields
            enum:
            - year
            - studyDbId
            - studyName
            - locationDbId
            - locationName
            - germplasmDbId
            - germplasmName
            - observationUnitDbId
            - plotNumber
            - replicate
            - blockNumber
            - observationTimestamp
            - entryType
            - X
            - Y
            type: string
          type: array
        observationVariableDbIds:
          description: The list of observation variables which have values recorded for them in the data matrix. Append to the 'headerRow' for comlete header row.
          items:
            type: string
          type: array
        observationVariableNames:
          description: The list of observation variable names which have values recorded for them in the data matrix. Order should match 'observationVariableDbIds'.
          items:
            type: string
          type: array
      type: object
    ontology:
      properties:
        authors:
          description: Ontology's list of authors (no specific format)
          type: string
        copyright:
          description: Ontology copyright
          type: string
        description:
          description: Human readable description of Ontology
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        licence:
          description: Ontology licence
          type: string
        ontologyDbId:
          description: Ontology database unique identifier
          type: string
        ontologyName:
          description: Ontology name
          type: string
        version:
          description: Ontology version (no specific format)
          type: string
      required:
      - ontologyDbId
      - ontologyName
      type: object
    ontologyReference:
      properties:
        documentationLinks:
          description: links to various ontology documentation
          items:
            properties:
              URL:
                format: uri
                type: string
              type:
                enum:
                - OBO
                - RDF
                - WEBPAGE
                type: string
            type: object
          type: array
        ontologyDbId:
          description: Ontology database unique identifier
          type: string
        ontologyName:
          description: Ontology name
          type: string
        version:
          description: Ontology version (no specific format)
          type: string
      required:
      - ontologyName
      type: object
    pedigree:
      properties:
        crossingPlan:
          description: The crossing strategy used to generate this germplasm
          type: string
        crossingYear:
          description: The year the parents were originally crossed
          type: string
        defaultDisplayName:
          description: A human readable name for a germplasm
          type: string
        familyCode:
          description: The code representing the family
          type: string
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          type: string
        parent1DbId:
          description: The germplasm DbId of the first parent of this germplasm
          type: string
        parent1Id:
          deprecated: true
          description: '**Deprecated** use parent1DbId'
          type: string
        parent1Name:
          description: the human readable name of the first parent of this germplasm
          type: string
        parent1Type:
          description: The type of parent the first parent is. ex. 'MALE', 'FEMALE', 'SELF', 'POPULATION', etc.
          enum:
          - MALE
          - FEMALE
          - SELF
          - POPULATION
          type: string
        parent2DbId:
          description: The germplasm DbId of the second parent of this germplasm
          type: string
        parent2Id:
          deprecated: true
          description: '**Deprecated** use parent2DbId'
          type: string
        parent2Name:
          description: The human readable name of the second parent of this germplasm
          type: string
        parent2Type:
          description: The type of parent the second parent is. ex. 'MALE', 'FEMALE', 'SELF', 'POPULATION', etc.
          enum:
          - MALE
          - FEMALE
          - SELF
          - POPULATION
          type: string
        pedigree:
          description: The string representation of the pedigree.
          type: string
        siblings:
          description: 'List of sibling germplasm '
          items:
            properties:
              defaultDisplayName:
                type: string
              germplasmDbId:
                type: string
            type: object
          type: array
      type: object
    person:
      properties:
        description:
          description: description of this person
          type: string
        emailAddress:
          description: email address for this person
          type: string
        firstName:
          description: Persons first name
          type: string
        lastName:
          description: Persons last name
          type: string
        mailingAddress:
          description: physical address of this person
          type: string
        middleName:
          description: Persons middle name
          type: string
        personDbId:
          description: Unique ID for this person
          type: string
        phoneNumber:
          description: phone number of this person
          type: string
        userID:
          description: A systems user ID ascociated with this person. Different from personDbId because you could have a person who is not a user of the system.
          type: string
      required:
      - personDbId
      type: object
    phenotypesRequest:
      properties:
        data:
          description: Matrix of observation data recorded for different observation variables across different observation units
          items:
            description: new phenotypes
            properties:
              observatioUnitDbId:
                type: string
              observations:
                items:
                  $ref: '#/components/schemas/phenotypesRequestObservation'
                type: array
              studyDbId:
                type: string
            required:
            - observatioUnitDbId
            - studyDbId
            - observations
            type: object
          type: array
      type: object
    phenotypesRequestObservation:
      properties:
        collector:
          description: The name or identifier of the entity which collected the observation
          type: string
        observationDbId:
          description: The ID which uniquely identifies an observation
          type: string
        observationTimeStamp:
          description: 'The date and time  when this observation was made '
          format: date-time
          type: string
        observationVariableDbId:
          description: Variable unique identifier
          type: string
        observationVariableName:
          description: A human readable name for an observation variable
          type: string
        season:
          description: The season when the observation data was collected
          type: string
        value:
          description: The value of the data collected as an observation
          type: string
      required:
      - observationVariableDbId
      - observationVariableName
      - collector
      - observationTimeStamp
      - value
      type: object
    phenotypesSearchRequest:
      properties:
        germplasmDbIds:
          description: The name or synonym of external genebank accession identifiers
          items:
            type: string
          type: array
        locationDbIds:
          description: locations these traits were collected
          items:
            type: string
          type: array
        observationLevel:
          description: The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnit Structure.
          type: string
        observationTimeStampRangeEnd:
          description: Timestamp range end
          format: date-time
          type: string
        observationTimeStampRangeStart:
          description: Timestamp range start
          format: date-time
          type: string
        observationVariableDbIds:
          description: The IDs of traits, could be ontology ID, database ID or PUI
          items:
            type: string
          type: array
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        programDbIds:
          description: list of programs to search across
          items:
            type: string
          type: array
        seasonDbIds:
          description: The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)
          items:
            type: string
          type: array
        studyDbIds:
          description: The database ID / PK of the studies search parameter
          items:
            type: string
          type: array
        trialDbIds:
          description: list of trials to search across
          items:
            type: string
          type: array
      type: object
    plateFormat:
      description: Enum for plate formats, usually "PLATE_96" for a 96 well plate or "TUBES" for plateless format
      enum:
      - PLATE_96
      - TUBES
      type: string
    polygon:
      description: An array of linear rings
      items:
        $ref: '#/components/schemas/linearRing'
      type: array
    position:
      description: A single position
      items:
        type: number
      minItems: 2
      type: array
    progeny:
      properties:
        defaultDisplayName:
          description: A human readable name for a germplasm
          type: string
        germplasmDbId:
          description: The ID which uniquely identifies a germplasm
          type: string
        progeny:
          description: List of germplasm entities which are direct children of this germplasm
          items:
            properties:
              defaultDisplayName:
                description: The human readable name of a progeny germplasm
                type: string
              germplasmDbId:
                description: The unique identifier of a progeny germplasm
                type: string
              parentType:
                description: Given a germplasm A having a progeny B and C, 'parentType' for progeny B item refers to the 'parentType' of A toward B.
                enum:
                - MALE
                - FEMALE
                - SELF
                - POPULATION
                type: string
            type: object
          type: array
      type: object
    program:
      properties:
        abbreviation:
          description: An abbreviation which represnts this program
          type: string
        commonCropName:
          description: Common name for the crop which this program is for
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        leadPerson:
          deprecated: true
          description: DEPRECATED in v1.3 - see "leadPersonName" or "leadPersonDbId"
          type: string
        leadPersonDbId:
          description: The unique identifier of the program leader
          type: string
        leadPersonName:
          description: The name of the program leader
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "programName"
          type: string
        objective:
          description: The primary objective of the program
          type: string
        programDbId:
          description: The ID which uniquely identifies the program
          type: string
        programName:
          description: Human readable name of the program
          type: string
      type: object
    programsSearchRequest:
      properties:
        abbreviations:
          description: An abbreviation of a program to search for
          items:
            type: string
          type: array
        commonCropNames:
          description: Common name for the crop which this program is for
          items:
            type: string
          type: array
        leadPersonDbIds:
          description: The person DbIds of the program leader to search for
          items:
            type: string
          type: array
        leadPersonNames:
          description: The names of the program leader to search for
          items:
            type: string
          type: array
        objectives:
          description: A program objective to search for
          items:
            type: string
          type: array
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        programDbIds:
          description: A program identifier to search for
          items:
            type: string
          type: array
        programNames:
          description: A name of a program to search for
          items:
            type: string
          type: array
      type: object
    programsSearchRequest_Deprecated:
      properties:
        abbreviation:
          description: An abbreviation of a program to search for
          type: string
        leadPerson:
          description: The name or identifier of the program leader to search for
          type: string
        name:
          description: A name of a program to search for
          type: string
        objective:
          description: A program objective to search for
          type: string
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        programDbId:
          description: A program identifier to search for
          type: string
      type: object
    sample:
      properties:
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          type: string
        notes:
          description: Additional notes about a samle
          type: string
        observationUnitDbId:
          description: The ID which uniquely identifies an observation unit
          type: string
        plantDbId:
          description: The ID which uniquely identifies a plant. Usually 'plantNumber'
          type: string
        plateDbId:
          description: The ID which uniquely identifies a plate of samples
          type: string
        plateIndex:
          description: The index number of this sample on a plate
          type: integer
        plotDbId:
          description: ' The ID which uniquely identifies a plot. Usually ''plotNumber'''
          type: string
        sampleDbId:
          description: The ID which uniquely identifies a sample
          type: string
        sampleTimestamp:
          description: The date and time a sample was collected from the field
          format: date-time
          type: string
        sampleType:
          description: 'The type of sample taken. ex. ''DNA'', ''RNA'', ''Tissue'', etc '
          type: string
        studyDbId:
          description: The ID which uniquely identifies a study within the given database server
          type: string
        takenBy:
          description: The name or identifier of the entity which took the sample from the field
          type: string
        tissueType:
          description: The type of tissue sampled. ex. 'Leaf', 'Root', etc.
          type: string
      type: object
    sampleSearchRequest:
      properties:
        germplasmDbIds:
          description: ' The ID which uniquely identifies a germplasm'
          items:
            type: string
          type: array
        observationUnitDbIds:
          description: The ID which uniquely identifies an observation unit
          items:
            type: string
          type: array
        page:
          description: Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is 0.
          type: integer
        pageSize:
          description: The size of the pages to be returned. Default is 1000.
          type: integer
        plateDbIds:
          description: The ID which uniquely identifies a plate of samples
          items:
            type: string
          type: array
        sampleDbIds:
          description: The ID which uniquely identifies a sample
          items:
            type: string
          type: array
      type: object
    sampleSearchRequest_Dep:
      properties:
        germplasmDbId:
          description: ' The ID which uniquely identifies a germplasm'
          items:
            type: string
          type: array
        observationUnitDbId:
          description: The ID which uniquely identifies an observation unit
          items:
            type: string
          type: array
        page:
          description: Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is 0.
          type: integer
        pageSize:
          description: The size of the pages to be returned. Default is 1000.
          type: integer
        plateDbId:
          description: The ID which uniquely identifies a plate of samples
          items:
            type: string
          type: array
        sampleDbId:
          description: The ID which uniquely identifies a sample
          items:
            type: string
          type: array
      type: object
    scale:
      description: Scale metadata
      properties:
        dataType:
          $ref: '#/components/schemas/traitDataType'
        decimalPlaces:
          description: For numerical, number of decimal places to be reported
          type: integer
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "scaleName"
          type: string
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        scaleDbId:
          description: Unique identifier of the scale. If left blank, the upload system will automatically generate a scale ID.
          type: string
        scaleName:
          description: Name of the scale
          type: string
        validValues:
          $ref: '#/components/schemas/validValues'
        xref:
          description: Cross reference to the scale, for example to a unit ontology such as UO or to a unit of an external major database
          type: string
      type: object
    season:
      properties:
        season:
          description: Name of the season. ex. 'Spring', 'Q2', 'Season A', etc.
          type: string
        seasonDbId:
          description: The ID which uniquely identifies a season
          type: string
        year:
          description: The 4 digit year of the season.
          type: string
      type: object
    status:
      properties:
        code:
          deprecated: true
          description: DEPRECATED in v1.3 - see Error Handling best practice documentation
          type: string
        message:
          description: A short message concerning the status of this request/response
          type: string
        messageType:
          description: The logging level for the attached message
          enum:
          - DEBUG
          - ERROR
          - WARNING
          - INFO
          type: string
      required:
      - message
      - messageType
      type: object
    study:
      properties:
        active:
          description: Is this study currently active
          type: string
        additionalInfo:
          additionalProperties:
            type: string
          description: Additional arbitrary info
          type: object
        commonCropName:
          description: Common name for the crop associated with this study
          type: string
        contacts:
          description: List of contact entities associated with this study
          items:
            $ref: '#/components/schemas/contact'
          type: array
        dataLinks:
          description: List of links to extra data files associated with this study. Extra data could include notes, images, and reference data.
          items:
            $ref: '#/components/schemas/dataLink'
          type: array
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        endDate:
          description: The date the study ends
          format: date
          type: string
        lastUpdate:
          description: The date and time when this study was last modified
          properties:
            timestamp:
              format: date-time
              type: string
            version:
              type: string
          type: object
        license:
          description: The usage license associated with the study data
          type: string
        location:
          $ref: '#/components/schemas/location'
        seasons:
          description: List of seasons over which this study was performed.
          items:
            type: string
          type: array
        startDate:
          description: The date this study started
          format: date
          type: string
        studyDbId:
          description: The ID which uniquely identifies a study within the given database server
          type: string
        studyDescription:
          description: The description of this study
          type: string
        studyName:
          description: The human readable name for a study
          type: string
        studyType:
          deprecated: true
          description: DEPRECATED in v1.3 - See "studyTypeName"
          type: string
        studyTypeDbId:
          description: The unique identifier of the type of study being performed.
          type: string
        studyTypeName:
          description: The name of the type of study being performed. ex. "Yield Trial", etc
          type: string
        trialDbId:
          description: The ID which uniquely identifies a trial
          type: string
        trialName:
          description: The human readable name of a trial
          type: string
      type: object
    studyLayoutRequest:
      properties:
        layout:
          description: List of observation unit position data entities which need to be updated
          items:
            properties:
              X:
                deprecated: true
                description: DEPRECATED - use "positionCoordinateX"
                title: xCoordinate
                type: string
              Y:
                deprecated: true
                description: DEPRECATED - use "positionCoordinateY"
                title: yCoordinate
                type: string
              blockNumber:
                type: integer
              entryType:
                enum:
                - CHECK
                - TEST
                - FILLER
                type: string
              observationUnitDbId:
                type: string
              positionCoordinateX:
                description: The X position coordinate for an observation unit. Different systems may use different coordinate systems.
                type: string
              positionCoordinateXType:
                description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
                enum:
                - LONGITUDE
                - LATITUDE
                - PLANTED_ROW
                - PLANTED_INDIVIDUAl
                - GRID_ROW
                - GRID_COL
                - MEASURED_ROW
                - MEASURED_COL
                type: string
              positionCoordinateY:
                description: The Y position coordinate for an observation unit. Different systems may use different coordinate systems.
                type: string
              positionCoordinateYType:
                description: "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column "
                enum:
                - LONGITUDE
                - LATITUDE
                - PLANTED_ROW
                - PLANTED_INDIVIDUAl
                - GRID_ROW
                - GRID_COL
                - MEASURED_ROW
                - MEASURED_COL
                type: string
              replicate:
                type: integer
            type: object
          type: array
      type: object
    studySearchRequest:
      properties:
        active:
          description: Is this study currently active
          type: boolean
        commonCropNames:
          description: Common names for the crop associated with this study
          items:
            type: string
          type: array
        germplasmDbIds:
          description: List of IDs which uniquely identify germplasm
          items:
            type: string
          type: array
        locationDbIds:
          description: List of location names to filter search results
          items:
            type: string
          type: array
        observationVariableDbIds:
          description: List of observation variable IDs to search for
          items:
            type: string
          type: array
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        programDbIds:
          description: List of program identifiers to filter search results
          items:
            type: string
          type: array
        programNames:
          description: List of program names to filter search results
          items:
            type: string
          type: array
        seasonDbIds:
          description: The ID which uniquely identifies a season
          items:
            type: string
          type: array
        sortBy:
          description: Name of one of the fields within the study object on which results can be sorted
          enum:
          - studyDbId
          - trialDbId
          - programDbId
          - locationDbId
          - seasonDbId
          - studyTypeName
          - studyTypeDbId
          - studyName
          - studyLocation
          - programName
          - germplasmDbId
          - observationVariableDbId
          type: string
        sortOrder:
          description: Order results should be sorted. ex. "ASC" or "DESC"
          enum:
          - ASC
          - DESC
          type: string
        studyDbIds:
          description: List of study identifiers to search for
          items:
            type: string
          type: array
        studyNames:
          description: List of study names to filter search results
          items:
            type: string
          type: array
        studyTypeDbIds:
          description: The unique identifier of the type of study being performed.
          items:
            type: string
          type: array
        studyTypeNames:
          description: The name of the type of study being performed. ex. "Yield Trial", etc
          items:
            type: string
          type: array
        trialDbIds:
          description: List of trial identifiers to filter search results
          items:
            type: string
          type: array
      type: object
    studySearchRequest_Dep:
      properties:
        active:
          description: Is this study currently active
          type: boolean
        germplasmDbIds:
          description: List of IDs which uniquely identify germplasm
          items:
            type: string
          type: array
        locationDbIds:
          description: List of location identifiers to filter search results
          items:
            type: string
          type: array
        observationVariableDbIds:
          description: List of observation variable IDs to search for
          items:
            type: string
          type: array
        page:
          description: Which page of the "data" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.
          type: integer
        pageSize:
          description: The maximum number of items to return per page of the "data" array. Default is 1000.
          type: integer
        programDbIds:
          description: List of program identifiers to filter search results
          items:
            type: string
          type: array
        programNames:
          description: List of program names to filter search results
          items:
            type: string
          type: array
        seasonDbId:
          description: The ID which uniquely identifies a season
          items:
            type: string
          type: array
        sortBy:
          description: Name of one of the fields within the study object on which results can be sorted
          enum:
          - studyDbId
          - trialDbId
          - programDbId
          - locationDbId
          - seasonDbId
          - studyType
          - studyName
          - studyLocation
          - programName
          - germplasmDbId
          - observationVariableDbId
          type: string
        sortOrder:
          description: Order results should be sorted. ex. "ASC" or "DESC"
          enum:
          - asc
          - desc
          type: string
        studyDbIds:
          description: List of study identifiers to search for
          items:
            type: string
          type: array
        studyLocations:
          description: List of location names to filter search results
          items:
            type: string
          type: array
        studyNames:
          description: List of study names to filter search results
          items:
            type: string
          type: array
        studyType:
          description: The type of study being performed. ex. "Yeald Trial", etc
          type: string
        trialDbIds:
          description: List of trial identifiers to filter search results
          items:
            type: string
          type: array
      type: object
    studySummary:
      properties:
        active:
          description: Is this study currently active
          type: string
        additionalInfo:
          additionalProperties:
            type: string
          description: Additional arbitrary info
          type: object
        commonCropName:
          description: Common name for the crop associated with this study
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        endDate:
          description: The date the study ends
          format: date
          type: string
        locationDbId:
          description: The ID which uniquely identifies a location
          type: string
        locationName:
          description: The human readable name for a location
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "studyName"
          type: string
        programDbId:
          description: The ID which uniquely identifies a program within the given database server
          type: string
        programName:
          description: The humane readable name of a program
          type: string
        seasons:
          description: List of seasons over which this study was performed.
          items:
            $ref: '#/components/schemas/season'
          type: array
        startDate:
          description: The date this study started
          format: date
          type: string
        studyDbId:
          description: The ID which uniquely identifies a study within the given database server
          type: string
        studyName:
          description: The humane readable name of a study
          type: string
        studyType:
          deprecated: true
          description: DEPRECATED in v1.3 - See "studyTypeName"
          type: string
        studyTypeDbId:
          description: The unique identifier of the type of study being performed.
          type: string
        studyTypeName:
          description: The name of the type of study being performed. ex. "Yield Trial", etc
          type: string
        trialDbId:
          description: The ID which uniquely identifies a trial
          type: string
        trialName:
          description: The human readable name of a trial
          type: string
      type: object
    studyType:
      properties:
        description:
          description: The description of this study type
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "studyTypeName"
          type: string
        studyTypeDbId:
          description: The unique identifier of a study type
          type: string
        studyTypeName:
          description: The human readable name of a study type
          type: string
      type: object
    successfulSearchResponse:
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          properties:
            searchResultDbId:
              type: string
          type: object
      title: successfulSearchResponse
      type: object
    taxonID:
      properties:
        sourceName:
          description: The human readable name of the taxonomy provider
          type: string
        taxonId:
          description: The identifier (name, ID, URI) of a particular taxonomy within the source provider
          type: string
      required:
      - sourceName
      - taxonId
      type: object
    trait:
      properties:
        alternativeAbbreviations:
          description: Other frequent abbreviations of the trait, if any. These abbreviations do not have to follow a convention
          items:
            type: string
          type: array
        attribute:
          description: A trait can be decomposed as "Trait" = "Entity" + "Attribute", the attribute is the observed feature (or characteristic) of the entity e.g., for "grain colour", attribute = "colour"
          type: string
        class:
          description: 'Trait class. (examples: "morphological trait", "phenological trait", "agronomical trait", "physiological trait", "abiotic stress trait", "biotic stress trait", "biochemical trait", "quality traits trait", "fertility trait", etc.)'
          title: className
          type: string
        description:
          description: The description of a trait
          type: string
        entity:
          description: A trait can be decomposed as "Trait" = "Entity" + "Attribute", the entity is the part of the plant that the trait refers to e.g., for "grain colour", entity = "grain"
          type: string
        mainAbbreviation:
          description: 'Main abbreviation for trait name. (examples: "Carotenoid content" => "CC")'
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "traitName"
          type: string
        ontologyReference:
          $ref: '#/components/schemas/ontologyReference'
        status:
          description: 'Trait status (examples: "recommended", "obsolete", "legacy", etc.)'
          type: string
        synonyms:
          description: Other trait names
          items:
            type: string
          type: array
        traitDbId:
          description: The ID which uniquely identifies a trait
          type: string
        traitName:
          description: The human readable name of a trait
          type: string
        xref:
          description: Cross reference of the trait to an external ontology or database term e.g., Xref to a trait ontology (TO) term
          type: string
      type: object
    traitDataType:
      description: "Class of the scale, entries can be \n\n  \"Code\" -  This scale class is exceptionally used to express complex traits. Code is a nominal\n            scale that combines the expressions of the different traits composing the complex\n            trait. For exemple a severity trait might be expressed by a 2 digit and 2 character\n            code. The first 2 digits are the percentage of the plant covered by a fungus and the 2\n            characters refer to the delay in development, e.g. \"75VD\" means \"75%\" of the plant is \n            Crop Ontology & Integrated Breeding Platform | Curation Guidelines | 5/6/2016 9\n            infected and the plant is very delayed.\n  \n  \"Date\" - The date class is for events expressed in a time format, e.g. yyyymmddThh:mm:ssZ or dd/mm/yy\n  \n  \"Duration\" - The Duration class is for time elapsed between two events expressed in a time format, e.g. days, hours, months\n  \n  \"Nominal\" - Categorical scale that can take one of a limited and fixed number of categories. There is no intrinsic ordering to the categories\n  \n  \"Numerical\" - Numerical scales express the trait with real numbers. The numerical scale defines the unit e.g. centimeter, ton per hectar, branches\n  \n  \"Ordinal\" - Ordinal scales are scales composed of ordered categories\n  \n  \"Text\" - A free text is used to express the trait.\n  "
      enum:
      - Code
      - Duration
      - Nominal
      - Numerical
      - Ordinal
      - Text
      - Date
      type: string
    traitSummary:
      properties:
        defaultValue:
          description: The default value of a trait (if applicable) ex. "0", "", "null"
          type: string
        description:
          description: The description of a trait
          type: string
        name:
          deprecated: true
          description: DEPRECATED in v1.3 - Use "traitName"
          type: string
        observationVariables:
          description: List of observation variable DbIds which include this trait
          items:
            type: string
          type: array
        traitDbId:
          description: The ID which uniquely identifies a trait
          type: string
        traitId:
          deprecated: true
          description: DEPRECATED The ID which uniquely identifies a trait
          type: string
        traitName:
          description: The human readable name of a trait
          type: string
      type: object
    trial:
      properties:
        active:
          description: Is this trail currently active
          type: boolean
        additionalInfo:
          additionalProperties:
            type: string
          description: Additional arbitrary info
          type: object
        commonCropName:
          description: Common name for the crop associated with this trial
          type: string
        contacts:
          description: List of contact entities associated with this trial
          items:
            $ref: '#/components/schemas/contact'
          type: array
        datasetAuthorship:
          deprecated: true
          description: DEPRECATED in v1.3 - see datasetAuthorships
          properties:
            datasetPUI:
              type: string
            license:
              type: string
          type: object
        datasetAuthorships:
          description: License and citation information for the data in this trial
          items:
            properties:
              datasetPUI:
                type: string
              license:
                type: string
            type: object
          type: array
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        endDate:
          description: The date this trial ends
          format: date
          type: string
        programDbId:
          description: A program identifier to search for
          type: string
        programName:
          description: The human readable name of a program
          type: string
        publications:
          items:
            properties:
              publicationPUI:
                type: string
              publicationReference:
                type: string
            type: object
          type: array
        startDate:
          description: The date this trial started
          format: date
          type: string
        studies:
          description: List of studies inside this trial
          items:
            properties:
              locationDbId:
                type: string
              locationName:
                type: string
              studyDbId:
                type: string
              studyName:
                type: string
            type: object
          type: array
        trialDbId:
          description: The ID which uniquely identifies a trial
          type: string
        trialName:
          description: The human readable name of a trial
          type: string
      type: object
    trialSummary:
      properties:
        active:
          description: Is this trail currently active
          type: boolean
        additionalInfo:
          additionalProperties:
            type: string
          description: Additional arbitrary info
          type: object
        commonCropName:
          description: Common name for the crop associated with this trial
          type: string
        documentationURL:
          description: A URL to the human readable documentation of this object
          format: uri
          type: string
        endDate:
          description: The date this trial ends
          format: date
          type: string
        programDbId:
          description: The ID which uniquely identifies a program
          type: string
        programName:
          description: The human readable name of a program
          type: string
        startDate:
          description: The date this trial started
          format: date
          type: string
        studies:
          description: List of studies inside this trial
          items:
            properties:
              locationDbId:
                type: string
              locationName:
                type: string
              studyDbId:
                type: string
              studyName:
                type: string
            type: object
          type: array
        trialDbId:
          description: The ID which uniquely identifies a trial
          type: string
        trialName:
          description: The human readable name of a trial
          type: string
      type: object
    validValues:
      properties:
        categories:
          description: 'List of possible values and their meaning (examples: ["0=low", "1=medium", "2=high"]'
          items:
            type: string
          type: array
        max:
          description: Maximum value (used for field data capture control).
          type: integer
        min:
          description: Minimum value (used for data capture control) for numerical and date scales
          type: integer
      type: object
    vendorContact:
      properties:
        vendorAddress:
          description: The street address of the vendor
          type: string
        vendorCity:
          description: The name of the city where the vendor is located
          type: string
        vendorContactName:
          description: The name or identifier of the primary vendor contact
          type: string
        vendorCountry:
          description: The name of the country where the vendor is located
          type: string
        vendorDescription:
          description: A description of the vendor
          type: string
        vendorEmail:
          description: The primary email address used to contact the vendor
          type: string
        vendorName:
          description: The human readable name of the vendor
          type: string
        vendorPhone:
          description: The primary phone number used to contact the vendor
          type: string
        vendorURL:
          description: The primary URL for the vendor
          type: string
      type: object
    vendorOntologyReference:
      description: Ontology reference details
      properties:
        ontologyID:
          description: 'Ontology unique ID (example: "0025034" or "4577")'
          type: string
        ontologyPrefix:
          description: 'Ontology identifier prefix (example: "PO" or "NCBITaxon")'
          type: string
        ontologyTerm:
          description: 'Ontology term string (example: "leaf" or "Zea mays")'
          type: string
      type: object
    vendorOrder:
      description: The details of a vendor order
      properties:
        clientId:
          description: A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the correct billing and contact info.
          type: string
        numberOfSamples:
          description: The total number of samples contained in this request. Used for billing and basic validation of the request.
          type: integer
        orderId:
          description: The order id returned by the vendor when the order was successfully submitted.
          type: string
        requiredServiceInfo:
          additionalProperties:
            type: string
          description: A map of additional data required by the requested service. This includes things like Volume and Concentration.
          type: object
        serviceId:
          description: A unique, alpha-numeric ID which identifies the requested service to be used for this order. The service defines what platform, technology, and markers will be used. A list of service IDs can be retrieved from the Vendor Specs.
          type: string
      type: object
    vendorOrderRequest:
      description: Request object structure to submit plate data to a vendor
      properties:
        clientId:
          description: A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the contract, billing, and contact info.
          type: string
        numberOfSamples:
          description: The total number of samples contained in this request. Used for billing and basic validation of the request.
          type: integer
        plates:
          description: Array of new plates to be submitted to a vendor
          items:
            properties:
              clientPlateBarcode:
                description: (Optional) The value of the bar code attached to this plate
                type: string
              clientPlateId:
                description: The ID which uniquely identifies this plate to the client making the request
                type: string
              sampleSubmissionFormat:
                $ref: '#/components/schemas/plateFormat'
              samples:
                items:
                  $ref: '#/components/schemas/vendorSample'
                type: array
            type: object
          type: array
        requiredServiceInfo:
          additionalProperties:
            type: string
          description: A map of additional data required by the requested service. This includes things like Volume and Concentration.
          type: object
        sampleType:
          description: The type of Samples being submitted
          enum:
          - DNA
          - RNA
          - Tissue
          type: string
        serviceIds:
          description: A list of unique, alpha-numeric ID which identify the requested services to be applied to this order. A Vendor Service defines what platform, technology, and markers will be used. A list of service IDs can be retrieved from the Vendor Specs.
          items:
            type: string
          type: array
      type: object
    vendorOrderResponse:
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          description: Response to an order request
          properties:
            orderId:
              description: A unique, alpha-numeric ID which identifies the order .
              type: string
            shipmentForms:
              description: Array of paper forms which need to be printed and included with the physical shipment
              items:
                properties:
                  fileDescription:
                    description: The human readable long description for this form
                    type: string
                  fileName:
                    description: The human readable name for this form
                    type: string
                  fileURL:
                    description: The URL to download this form
                    type: string
                type: object
              type: array
          type: object
      title: vendorOrderResponse
      type: object
    vendorPlate:
      properties:
        clientPlateBarcode:
          description: (Optional) The value of the bar code attached to this plate
          type: string
        clientPlateId:
          description: The ID which uniquely identifies this plate to the client making the request
          type: string
        sampleSubmissionFormat:
          $ref: '#/components/schemas/plateFormat'
        samples:
          items:
            $ref: '#/components/schemas/vendorSample'
          type: array
      type: object
    vendorPlateGetResponse:
      description: Response of a plate submission
      properties:
        clientId:
          description: A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the contract, billing, and contact info.
          type: string
        numberOfSamples:
          description: The total number of samples contained in this request. Used for billing and basic validation of the request.
          type: integer
        plates:
          description: Array of new plates to be submitted to a vendor
          items:
            properties:
              clientPlateBarcode:
                description: (Optional) The value of the bar code attached to this plate
                type: string
              clientPlateId:
                description: The ID which uniquely identifies this plate to the client making the request
                type: string
              sampleSubmissionFormat:
                $ref: '#/components/schemas/plateFormat'
              samples:
                items:
                  $ref: '#/components/schemas/vendorSample'
                type: array
            type: object
          type: array
      type: object
    vendorPlatesSubmissionRequest:
      description: Request object structure to submit plate data to a vendor
      properties:
        clientId:
          description: A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the contract, billing, and contact info.
          type: string
        numberOfSamples:
          description: The total number of samples contained in this request. Used for billing and basic validation of the request.
          type: integer
        plates:
          description: Array of new plates to be submitted to a vendor
          items:
            properties:
              clientPlateBarcode:
                description: (Optional) The value of the bar code attached to this plate
                type: string
              clientPlateId:
                description: The ID which uniquely identifies this plate to the client making the request
                type: string
              sampleSubmissionFormat:
                $ref: '#/components/schemas/plateFormat'
              samples:
                items:
                  $ref: '#/components/schemas/vendorSample'
                type: array
            type: object
          type: array
        sampleType:
          description: The type of Samples being submitted
          enum:
          - DNA
          - RNA
          - Tissue
          type: string
      type: object
    vendorPlatesSubmissionResponse:
      description: Response to an order request
      properties:
        submissionId:
          description: A unique, alpha-numeric ID which identifies a set of plates which have been successfully submitted.
          type: string
      type: object
    vendorResultFile:
      properties:
        additionalInfo:
          additionalProperties:
            type: string
          description: Additional arbitrary info
          type: object
        clientSampleIds:
          description: The list of sampleDbIds included in the file
          items:
            type: string
          type: array
        fileName:
          description: Name of the file
          type: string
        fileType:
          description: Format of the file
          type: string
        fileURL:
          description: The URL to a file with the results of a vendor analysis
          type: string
        md5sum:
          description: MD5 Hash Check Sum for the file to confirm download without error
          type: string
      required:
      - fileURL
      - fileType
      - fileName
      - clientSampleIds
      type: object
    vendorSample:
      properties:
        clientSampleBarCode:
          description: (Optional) The value of the bar code attached to this sample
          type: string
        clientSampleId:
          description: The ID which uniquely identifies this sample to the client making the request
          type: string
        column:
          description: The Column identifier for this samples location in the plate
          type: string
        comments:
          description: Generic comments about this sample for the vendor
          type: string
        concentration:
          $ref: '#/components/schemas/measurement'
        organismName:
          description: Scientific organism name
          type: string
        row:
          description: The Row identifier for this samples location in the plate
          type: string
        speciesName:
          description: Scientific species name
          type: string
        taxonomyOntologyReference:
          $ref: '#/components/schemas/vendorOntologyReference'
        tissueType:
          description: The type of tissue in this sample. List of accepted tissue types can be found in the Vendor Specs.
          type: string
        tissueTypeOntologyReference:
          $ref: '#/components/schemas/vendorOntologyReference'
        volume:
          $ref: '#/components/schemas/measurement'
        well:
          description: The Well identifier for this samples location in the plate. Ussually a concatination of Row and Column.
          type: string
      type: object
    vendorSpecification:
      properties:
        additionalInfo:
          additionalProperties:
            type: object
          description: Additional arbitrary information specific to a particular Vendor. Look for the Vedors specific API documentation for more details
          type: object
        services:
          description: List of platform specifications available at the vendor
          items:
            $ref: '#/components/schemas/vendorSpecificationService'
          type: array
        vendorContact:
          $ref: '#/components/schemas/vendorContact'
      type: object
    vendorSpecificationService:
      properties:
        serviceDescription:
          description: Description of the vendor platform
          type: string
        serviceId:
          description: Unique identifier for this service
          type: string
        serviceName:
          description: The human readable name of a platform
          type: string
        servicePlatformMarkerType:
          description: The type of markers used in this services platform
          enum:
          - FIXED
          - DISCOVERABLE
          type: string
        servicePlatformName:
          description: The technology platform used by this service
          type: string
        specificRequirements:
          description: Additional arbitrary requirements for a particular platform
          type: object
      type: object
  securitySchemes:
    AuthorizationToken:
      bearerFormat: nonce token or JWT
      description: OAuth Bearer Token - A valid Bearer token to prove authorization
      scheme: bearer
      type: http
info:
  description: |-
    The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.

    <strong>General Reference Documentation</strong>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md">URL Structure</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md">Response Structure</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md">Date/Time Encoding</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md">Location Encoding</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md">Error Handling</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md">Search Services</a>

    <a href="https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md">Asynchronous Processing</a>
  title: BrAPI
  version: '1.3'
openapi: 3.0.0
paths:
  /allelematrices:
    get:
      description: |-
        This resource is used for reading and writing genomic matrices

        GET provides a list of available matrices, optionally filtered by study;
      parameters:
      - description: restricts the list of matrices to a specific study.
        in: query
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 1
                    totalPages: 1
                  status: []
                result:
                  data:
                  - description: example matrix
                    lastUpdated: '2018-05-03T11:03:56-04:00'
                    matrixDbId: mat1
                    matrixName: Example Matrix
                    name: Example Matrix
                    studyDbId: '1001'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/alleleMatrixDetails'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: alleleMatrixDetailsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Allele Matrix summaries
      tags:
      - Marker Profiles
  /allelematrices-search:
    get:
      description: |-
        See Search Services for additional implementation details.

        This uses a more efficient data structure and pagination for large number of markers.

        See Search Services for additional implementation details.

        Use GET when parameter size is less than 2K bytes.

        This method may support asynchronous processing.
      parameters:
      - description: DEPRECATED in v1.3 - see "markerProfileDbId" (camel case)
        deprecated: true
        in: query
        name: markerprofileDbId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: The marker Profile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.
        in: query
        name: markerProfileDbId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: ids of the markers. if none are specified, results are returned for all markers in the database. Not Required if 'markerProfileDbId' or 'matrixDbId' is present.
        in: query
        name: markerDbId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: ''
        in: query
        name: matrixDbId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: format for the datafile to be downloaded. tsv and csv currently supported; flapjack may be supported.
        in: query
        name: format
        required: false
        schema:
          type: string
      - description: Should homozygotes NOT be collapsed into a single occurrence?
        in: query
        name: expandHomozygotes
        required: false
        schema:
          type: boolean
      - description: The string to use as a representation for missing data or the reserved word "empty_string".
        in: query
        name: unknownString
        required: false
        schema:
          type: string
      - description: The string to use as a separator for phased allele calls or the reserved word "empty_string".
        in: query
        name: sepPhased
        required: false
        schema:
          type: string
      - description: The string to use as a separator for unphased allele calls or the reserved word "empty_string".
        in: query
        name: sepUnphased
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 280
                    totalPages: 140
                  status: []
                result:
                  data:
                  - - mr01
                    - P1
                    - A
                  - - mr02
                    - P1
                    - C
              schema:
                properties:
                  metadata:
                    allOf:
                    - $ref: '#/components/schemas/metadata'
                    - $ref: '#/components/schemas/asynchStatusMetadata'
                  result:
                    $ref: '#/components/schemas/alleleMatrixValues'
                required:
                - metadata
                - result
                title: alleleMatrixValuesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the a Matrix of Allele data
      tags:
      - Marker Profiles
    post:
      description: |-
        See Search Services for additional implementation details.

        This uses a more efficient data structure and pagination for large number of markers.

        Use POST when parameter size is greater than 2K bytes.

        - If no format is specified, this call returns the data in JSON form.

        - If a format (other than JSON) is specified and the server supports this format, it will return the link to the exported data file in the "datafiles" field of the "metadata".

        - If more than one format is requested at a time, the server will throw a "501 Not Implemented" error.

        The format of the tsv response can be found on GitHub (https://github.com/plantbreeding/Documentation/wiki/BrAPI-TSV-Expected-Formats)'
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alleleMatrixSearchRequest'
        description: The marker profile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  asynchStatus:
                    asynchId: ''
                    endTime: '2018-12-05'
                    percentComplete: 100
                    startTime: '2018-12-05'
                    status: FINISHED
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 280
                    totalPages: 140
                  status: []
                result:
                  data:
                  - - mr01
                    - P1
                    - A
                  - - mr02
                    - P1
                    - C
              schema:
                properties:
                  metadata:
                    allOf:
                    - $ref: '#/components/schemas/metadata'
                    - $ref: '#/components/schemas/asynchStatusMetadata'
                  result:
                    $ref: '#/components/schemas/alleleMatrixValues'
                required:
                - metadata
                - result
                title: alleleMatrixValuesResponse
                type: object
            application/tsv:
              example:
                metadata:
                  datafiles:
                  - https://my-fancy-server/files/allelematrix-1234.tsv
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data: []
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a request to get a Matrix of Allele data
      tags:
      - Marker Profiles
  /allelematrix-search:
    get:
      deprecated: true
      description: "Status: ACCEPTED.\n\nImplemented by: Germinate (POST only), Cassavabase\n\nUsed by: Flapjack (POST only)\n\nSee Search Services for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nSee Search Services for additional implementation details.\n\n\n\nThis uses a more efficient data structure and pagination for large number of markers. \n\n\n\nUse GET when parameter size is less than 2K bytes.\nThis method may support asynchronous processing."
      parameters:
      - description: The marker profile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.
        in: query
        name: markerprofileDbId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: ids of the markers. if none are specified, results are returned for all markers in the database. Not Required if 'markerprofileDbId' or 'matrixDbId' is present.
        in: query
        name: markerDbId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: ''
        in: query
        name: matrixDbId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: format for the datafile to be downloaded. tsv and csv currently supported; flapjack may be supported.
        in: query
        name: format
        required: false
        schema:
          type: string
      - description: Should homozygotes NOT be collapsed into a single occurrence?
        in: query
        name: expandHomozygotes
        required: false
        schema:
          type: boolean
      - description: The string to use as a representation for missing data or the reserved word "empty_string".
        in: query
        name: unknownString
        required: false
        schema:
          type: string
      - description: The string to use as a separator for phased allele calls or the reserved word "empty_string".
        in: query
        name: sepPhased
        required: false
        schema:
          type: string
      - description: The string to use as a separator for unphased allele calls or the reserved word "empty_string".
        in: query
        name: sepUnphased
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  asynchStatus:
                    asynchId: ''
                    endTime: '2018-12-05'
                    percentComplete: 100
                    startTime: '2018-12-05'
                    status: FINISHED
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 280
                    totalPages: 140
                  status: []
                result:
                  data:
                  - - mr01
                    - P1
                    - A
                  - - mr02
                    - P1
                    - C
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/alleleMatrixValues'
                title: alleleMatrixValuesResponse
                type: object
          description: OK
          headers: {}
      summary: Scores through GET
      tags:
      - Marker Profiles
      - Deprecated
    post:
      deprecated: true
      description: |-
        Status: ACCEPTED.

        Implemented by: Germinate (POST only), Cassavabase

        Used by: Flapjack (POST only)

        See Search Services for additional implementation details.

        This uses a more efficient data structure and pagination for large number of markers.

        Use POST when parameter size is greater than 2K bytes.

        - If no format is specified, this call returns the data in JSON form.

        - If a format (other than JSON) is specified and the server supports this format, it will return the link to the exported data file in the "datafiles" field of the "metadata".

        - If more than one format is requested at a time, the server will throw a "501 Not Implemented" error.

        The format of the tsv response can be found on GitHub (https://github.com/plantbreeding/Documentation/wiki/BrAPI-TSV-Expected-Formats)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alleleMatrixSearchRequest'
        description: The markerprofile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 1000
                    totalCount: 280
                    totalPages: 1
                  status: []
                result:
                  data:
                  - - mr01
                    - P1
                    - A
                  - - mr02
                    - P1
                    - C
                  - - mr03
                    - P1
                    - A
                  - - mr04
                    - P1
                    - G
                  - - mr05
                    - P1
                    - C
                  - - mr06
                    - P1
                    - A
                  - - mr07
                    - P1
                    - G
                  - - mr08
                    - P1
                    - G
                  - - mr09
                    - P1
                    - T
                  - - mr10
                    - P1
                    - C
                  - - mr11
                    - P1
                    - G
                  - - mr12
                    - P1
                    - C
                  - - mr13
                    - P1
                    - A
                  - - mr14
                    - P1
                    - G
                  - - mr15
                    - P1
                    - T
                  - - mr16
                    - P1
                    - C
                  - - mr17
                    - P1
                    - A
                  - - mr18
                    - P1
                    - G
                  - - mr19
                    - P1
                    - T
                  - - mr20
                    - P1
                    - T
                  - - mr01
                    - P2
                    - C
                  - - mr02
                    - P2
                    - C
                  - - mr03
                    - P2
                    - C
                  - - mr04
                    - P2
                    - C
                  - - mr05
                    - P2
                    - C
                  - - mr06
                    - P2
                    - G
                  - - mr07
                    - P2
                    - G
                  - - mr08
                    - P2
                    - A
                  - - mr09
                    - P2
                    - A
                  - - mr10
                    - P2
                    - C
                  - - mr11
                    - P2
                    - C
                  - - mr12
                    - P2
                    - A
                  - - mr13
                    - P2
                    - A
                  - - mr14
                    - P2
                    - T
                  - - mr15
                    - P2
                    - T
                  - - mr16
                    - P2
                    - T
                  - - mr17
                    - P2
                    - G
                  - - mr18
                    - P2
                    - G
                  - - mr19
                    - P2
                    - A
                  - - mr20
                    - P2
                    - T
                  - - mr01
                    - F1-02
                    - A/C
                  - - mr02
                    - F1-02
                    - C
                  - - mr03
                    - F1-02
                    - '-'
                  - - mr04
                    - F1-02
                    - '-'
                  - - mr05
                    - F1-02
                    - '-'
                  - - mr06
                    - F1-02
                    - '-'
                  - - mr07
                    - F1-02
                    - '-'
                  - - mr08
                    - F1-02
                    - '-'
                  - - mr09
                    - F1-02
                    - '-'
                  - - mr10
                    - F1-02
                    - '-'
                  - - mr11
                    - F1-02
                    - '-'
                  - - mr12
                    - F1-02
                    - '-'
                  - - mr13
                    - F1-02
                    - '-'
                  - - mr14
                    - F1-02
                    - G/T
                  - - mr15
                    - F1-02
                    - T
                  - - mr16
                    - F1-02
                    - C/T
                  - - mr17
                    - F1-02
                    - A/G
                  - - mr18
                    - F1-02
                    - G
                  - - mr19
                    - F1-02
                    - T/A
                  - - mr20
                    - F1-02
                    - T
                  - - mr01
                    - F1-03
                    - A/C
                  - - mr02
                    - F1-03
                    - C
                  - - mr03
                    - F1-03
                    - A/C
                  - - mr04
                    - F1-03
                    - G/C
                  - - mr05
                    - F1-03
                    - C
                  - - mr06
                    - F1-03
                    - A/G
                  - - mr07
                    - F1-03
                    - G
                  - - mr08
                    - F1-03
                    - G/A
                  - - mr09
                    - F1-03
                    - T/A
                  - - mr10
                    - F1-03
                    - C
                  - - mr11
                    - F1-03
                    - C/G
                  - - mr12
                    - F1-03
                    - A/C
                  - - mr13
                    - F1-03
                    - A
                  - - mr14
                    - F1-03
                    - G/T
                  - - mr15
                    - F1-03
                    - T
                  - - mr16
                    - F1-03
                    - C/T
                  - - mr17
                    - F1-03
                    - A/G
                  - - mr18
                    - F1-03
                    - G
                  - - mr19
                    - F1-03
                    - T/A
                  - - mr20
                    - F1-03
                    - T
                  - - mr01
                    - F1-04
                    - A
                  - - mr02
                    - F1-04
                    - C
                  - - mr03
                    - F1-04
                    - A
                  - - mr04
                    - F1-04
                    - G
                  - - mr05
                    - F1-04
                    - C
                  - - mr06
                    - F1-04
                    - A
                  - - mr07
                    - F1-04
                    - G
                  - - mr08
                    - F1-04
                    - G
                  - - mr09
                    - F1-04
                    - T
                  - - mr10
                    - F1-04
                    - C
                  - - mr11
                    - F1-04
                    - G
                  - - mr12
                    - F1-04
                    - C
                  - - mr13
                    - F1-04
                    - A
                  - - mr14
                    - F1-04
                    - G
                  - - mr15
                    - F1-04
                    - T
                  - - mr16
                    - F1-04
                    - C
                  - - mr17
                    - F1-04
                    - A
                  - - mr18
                    - F1-04
                    - G
                  - - mr19
                    - F1-04
                    - T
                  - - mr20
                    - F1-04
                    - T
                  - - mr01
                    - F1-05
                    - A/C
                  - - mr02
                    - F1-05
                    - C
                  - - mr03
                    - F1-05
                    - A/C
                  - - mr04
                    - F1-05
                    - G/C
                  - - mr05
                    - F1-05
                    - C
                  - - mr06
                    - F1-05
                    - A/G
                  - - mr07
                    - F1-05
                    - G
                  - - mr08
                    - F1-05
                    - G/A
                  - - mr09
                    - F1-05
                    - T/A
                  - - mr10
                    - F1-05
                    - C
                  - - mr11
                    - F1-05
                    - C/G
                  - - mr12
                    - F1-05
                    - A/C
                  - - mr13
                    - F1-05
                    - A
                  - - mr14
                    - F1-05
                    - G/T
                  - - mr15
                    - F1-05
                    - T
                  - - mr16
                    - F1-05
                    - C/T
                  - - mr17
                    - F1-05
                    - A/G
                  - - mr18
                    - F1-05
                    - G
                  - - mr19
                    - F1-05
                    - T/A
                  - - mr20
                    - F1-05
                    - T
                  - - mr01
                    - F1-06
                    - C
                  - - mr02
                    - F1-06
                    - C
                  - - mr03
                    - F1-06
                    - A/C
                  - - mr04
                    - F1-06
                    - G/C
                  - - mr05
                    - F1-06
                    - C
                  - - mr06
                    - F1-06
                    - A/G
                  - - mr07
                    - F1-06
                    - G
                  - - mr08
                    - F1-06
                    - G/A
                  - - mr09
                    - F1-06
                    - T/A
                  - - mr10
                    - F1-06
                    - C
                  - - mr11
                    - F1-06
                    - C/G
                  - - mr12
                    - F1-06
                    - '-'
                  - - mr13
                    - F1-06
                    - A
                  - - mr14
                    - F1-06
                    - G/T
                  - - mr15
                    - F1-06
                    - T
                  - - mr16
                    - F1-06
                    - C/T
                  - - mr17
                    - F1-06
                    - A/G
                  - - mr18
                    - F1-06
                    - G
                  - - mr19
                    - F1-06
                    - T/A
                  - - mr20
                    - F1-06
                    - T
                  - - mr01
                    - F1-07
                    - A/C
                  - - mr02
                    - F1-07
                    - C/T
                  - - mr03
                    - F1-07
                    - A
                  - - mr04
                    - F1-07
                    - G/C
                  - - mr05
                    - F1-07
                    - G
                  - - mr06
                    - F1-07
                    - A
                  - - mr07
                    - F1-07
                    - G/A
                  - - mr08
                    - F1-07
                    - G/A
                  - - mr09
                    - F1-07
                    - T/A
                  - - mr10
                    - F1-07
                    - G
                  - - mr11
                    - F1-07
                    - C/G
                  - - mr12
                    - F1-07
                    - A/C
                  - - mr13
                    - F1-07
                    - A
                  - - mr14
                    - F1-07
                    - G/T
                  - - mr15
                    - F1-07
                    - T
                  - - mr16
                    - F1-07
                    - C/T
                  - - mr17
                    - F1-07
                    - A
                  - - mr18
                    - F1-07
                    - G
                  - - mr19
                    - F1-07
                    - T/A
                  - - mr20
                    - F1-07
                    - T
                  - - mr01
                    - F1-08
                    - '-'
                  - - mr02
                    - F1-08
                    - '-'
                  - - mr03
                    - F1-08
                    - '-'
                  - - mr04
                    - F1-08
                    - '-'
                  - - mr05
                    - F1-08
                    - '-'
                  - - mr06
                    - F1-08
                    - '-'
                  - - mr07
                    - F1-08
                    - '-'
                  - - mr08
                    - F1-08
                    - '-'
                  - - mr09
                    - F1-08
                    - '-'
                  - - mr10
                    - F1-08
                    - '-'
                  - - mr11
                    - F1-08
                    - '-'
                  - - mr12
                    - F1-08
                    - '-'
                  - - mr13
                    - F1-08
                    - '-'
                  - - mr14
                    - F1-08
                    - '-'
                  - - mr15
                    - F1-08
                    - '-'
                  - - mr16
                    - F1-08
                    - '-'
                  - - mr17
                    - F1-08
                    - '-'
                  - - mr18
                    - F1-08
                    - '-'
                  - - mr19
                    - F1-08
                    - T/A
                  - - mr20
                    - F1-08
                    - T
                  - - mr01
                    - F1-09
                    - A/C
                  - - mr02
                    - F1-09
                    - C
                  - - mr03
                    - F1-09
                    - A/C
                  - - mr04
                    - F1-09
                    - G/C
                  - - mr05
                    - F1-09
                    - C
                  - - mr06
                    - F1-09
                    - A/G
                  - - mr07
                    - F1-09
                    - G
                  - - mr08
                    - F1-09
                    - G/A
                  - - mr09
                    - F1-09
                    - T/A
                  - - mr10
                    - F1-09
                    - C
                  - - mr11
                    - F1-09
                    - C/G
                  - - mr12
                    - F1-09
                    - A/C
                  - - mr13
                    - F1-09
                    - A
                  - - mr14
                    - F1-09
                    - G/T
                  - - mr15
                    - F1-09
                    - T
                  - - mr16
                    - F1-09
                    - C/T
                  - - mr17
                    - F1-09
                    - A/G
                  - - mr18
                    - F1-09
                    - G
                  - - mr19
                    - F1-09
                    - T/A
                  - - mr20
                    - F1-09
                    - T
                  - - mr01
                    - F1-10
                    - A/C
                  - - mr02
                    - F1-10
                    - C
                  - - mr03
                    - F1-10
                    - A/C
                  - - mr04
                    - F1-10
                    - G/C
                  - - mr05
                    - F1-10
                    - C
                  - - mr06
                    - F1-10
                    - A/G
                  - - mr07
                    - F1-10
                    - G
                  - - mr08
                    - F1-10
                    - G/A
                  - - mr09
                    - F1-10
                    - T/A
                  - - mr10
                    - F1-10
                    - C
                  - - mr11
                    - F1-10
                    - C/G
                  - - mr12
                    - F1-10
                    - A/C
                  - - mr13
                    - F1-10
                    - A
                  - - mr14
                    - F1-10
                    - G/T
                  - - mr15
                    - F1-10
                    - T
                  - - mr16
                    - F1-10
                    - C/T
                  - - mr17
                    - F1-10
                    - A/G
                  - - mr18
                    - F1-10
                    - G
                  - - mr19
                    - F1-10
                    - T/A
                  - - mr20
                    - F1-10
                    - T
                  - - mr01
                    - F1-11
                    - A
                  - - mr02
                    - F1-11
                    - C
                  - - mr03
                    - F1-11
                    - A
                  - - mr04
                    - F1-11
                    - G
                  - - mr05
                    - F1-11
                    - C
                  - - mr06
                    - F1-11
                    - A
                  - - mr07
                    - F1-11
                    - G
                  - - mr08
                    - F1-11
                    - G
                  - - mr09
                    - F1-11
                    - T
                  - - mr10
                    - F1-11
                    - C
                  - - mr11
                    - F1-11
                    - G
                  - - mr12
                    - F1-11
                    - C
                  - - mr13
                    - F1-11
                    - A
                  - - mr14
                    - F1-11
                    - G
                  - - mr15
                    - F1-11
                    - T
                  - - mr16
                    - F1-11
                    - C
                  - - mr17
                    - F1-11
                    - A
                  - - mr18
                    - F1-11
                    - G
                  - - mr19
                    - F1-11
                    - T
                  - - mr20
                    - F1-11
                    - T
                  - - mr01
                    - F1-12
                    - A/C
                  - - mr02
                    - F1-12
                    - C
                  - - mr03
                    - F1-12
                    - A/C
                  - - mr04
                    - F1-12
                    - G/C
                  - - mr05
                    - F1-12
                    - C
                  - - mr06
                    - F1-12
                    - A/G
                  - - mr07
                    - F1-12
                    - G
                  - - mr08
                    - F1-12
                    - G/A
                  - - mr09
                    - F1-12
                    - T/A
                  - - mr10
                    - F1-12
                    - C
                  - - mr11
                    - F1-12
                    - C/G
                  - - mr12
                    - F1-12
                    - A/C
                  - - mr13
                    - F1-12
                    - A
                  - - mr14
                    - F1-12
                    - G/T
                  - - mr15
                    - F1-12
                    - T
                  - - mr16
                    - F1-12
                    - C/T
                  - - mr17
                    - F1-12
                    - A/G
                  - - mr18
                    - F1-12
                    - G
                  - - mr19
                    - F1-12
                    - T/A
                  - - mr20
                    - F1-12
                    - T
                  - - mr01
                    - F1-13
                    - A/C
                  - - mr02
                    - F1-13
                    - C
                  - - mr03
                    - F1-13
                    - A/C
                  - - mr04
                    - F1-13
                    - G/C
                  - - mr05
                    - F1-13
                    - C
                  - - mr06
                    - F1-13
                    - A/G
                  - - mr07
                    - F1-13
                    - G
                  - - mr08
                    - F1-13
                    - G/A
                  - - mr09
                    - F1-13
                    - T/A
                  - - mr10
                    - F1-13
                    - C
                  - - mr11
                    - F1-13
                    - C/G
                  - - mr12
                    - F1-13
                    - A/C
                  - - mr13
                    - F1-13
                    - A
                  - - mr14
                    - F1-13
                    - G/T
                  - - mr15
                    - F1-13
                    - T
                  - - mr16
                    - F1-13
                    - C/T
                  - - mr17
                    - F1-13
                    - A/G
                  - - mr18
                    - F1-13
                    - G
                  - - mr19
                    - F1-13
                    - T/A
                  - - mr20
                    - F1-13
                    - T
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/alleleMatrixValues'
                title: alleleMatrixValuesResponse
                type: object
            application/tsv:
              examples:
                response:
                  value:
                    metadata:
                      datafiles:
                      - https://my-fancy-server/files/allelematrix-1234.tsv
                      pagination:
                        currentPage: 0
                        pageSize: 0
                        totalCount: 0
                        totalPages: 0
                      status: []
                    result:
                      data: []
          description: OK
          headers: {}
      summary: Scores through POST
      tags:
      - Marker Profiles
      - Deprecated
  /attributes:
    get:
      description: List available attributes.
      parameters:
      - description: Unique identifier for the general category for the attribute. very similar to Trait class.
        in: query
        name: attributeCategoryDbId
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 5
                    totalPages: 3
                  status: []
                result:
                  data:
                  - attributeCategoryDbId: '2'
                    attributeDbId: ATT01
                    attributeName: Rht-B1b
                    code: RHT
                    contextOfUse: []
                    crop: maize
                    datatype: Categorical
                    defaultValue: '10'
                    description: Allele of marker 11_4769
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Numeric
                      description: Standard rolled measuring tape
                      formula: a^2 + b^2 = c^2
                      methodDbId: m1
                      methodName: Tape Measure
                      name: Tape Measure
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m1
                          type: RDF
                          url: https://ontology.org/m1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Rht-B1b
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Numerical
                      decimalPlaces: 1
                      name: Centimeter
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s1
                          type: OBO
                          url: https://ontology.org/s1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s1
                      scaleName: Centimeter
                      validValues:
                        categories: []
                        max: 99999
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: plant height
                      class: Numeric
                      description: plant height
                      entity: entity
                      mainAbbreviation: H
                      name: Plant Height
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t1
                          type: WEBPAGE
                          url: https://ontology.org/t1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t1
                      traitName: Plant Height
                      xref: xref
                    uri: http://www.brapi.org/ontology/MO_123:1000001
                    values: Present
                    xref: MO_123:100002
                  - attributeCategoryDbId: '3'
                    attributeDbId: ATT02
                    attributeName: Weevil Resistance
                    code: WEV
                    contextOfUse: []
                    crop: maize
                    datatype: Categorical
                    defaultValue: '10'
                    description: Resistance allele
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Categorical
                      description: Comparing sample color to standard color palette
                      formula: NA
                      methodDbId: m3
                      methodName: Standard Color Palette
                      name: Standard Color Palette
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m3
                          type: OBO
                          url: https://ontology.org/m3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Weevil Resistance
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Nominal
                      decimalPlaces: 0
                      name: Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s3
                          type: WEBPAGE
                          url: https://ontology.org/s3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s3
                      scaleName: Color
                      validValues:
                        categories:
                        - dark red
                        - red
                        - dark blue
                        - blue
                        - black
                        max: 0
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: leaf color
                      class: Categorical
                      description: color of leaf sample
                      entity: entity
                      mainAbbreviation: LC
                      name: Leaf Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t3
                          type: RDF
                          url: https://ontology.org/t3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t3
                      traitName: Leaf Color
                      xref: xref
                    uri: http://www.brapi.org/ontology/MO_123:1000002
                    values: Absent
                    xref: MO_123:100003
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/germplasmAttributeDef'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: germplasmAttributeDefsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Germplasm Attributes
      tags:
      - Germplasm Attributes
  /attributes/categories:
    get:
      description: List all available attribute categories.
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 0
                    totalPages: 1
                  status: []
                result:
                  data:
                  - attributeCategoryDbId: '1'
                    attributeCategoryName: Morphological
                    name: Morphological
                  - attributeCategoryDbId: '2'
                    attributeCategoryName: Agronomic
                    name: Agronomic
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/germplasmAttributeCategory'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: germplasmAttributeCategoriesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Categories of Germplasm Attributes
      tags:
      - Germplasm Attributes
  /breedingmethods:
    get:
      description: Get the list of germplasm breeding methods available in a system.
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - abbreviation: MBCR
                    breedingMethodDbId: bm1
                    breedingMethodName: Male Backcross
                    description: Backcross to recover a specific gene.
                    name: Male Backcross
                  - abbreviation: FBCR
                    breedingMethodDbId: bm2
                    breedingMethodName: Female Backcross
                    description: Backcross to recover a specific gene.
                    name: Female Backcross
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/breedingMethod'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: breedingMethodsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Breeding Methods
      tags:
      - Germplasm
  /breedingmethods/{breedingMethodDbId}:
    get:
      description: Get the details of a specific Breeding Method used to produce Germplasm
      parameters:
      - description: Internal database identifier for a breeding method
        in: path
        name: breedingMethodDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  abbreviation: MBCR
                  breedingMethodDbId: bm1
                  breedingMethodName: Male Backcross
                  description: Backcross to recover a specific gene.
                  name: Male Backcross
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/breedingMethod'
                required:
                - metadata
                - result
                title: breedingMethodResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific Breeding Method
      tags:
      - Germplasm
  /calls:
    get:
      description: " Implementation Notes\nHaving a consistent structure for the path string of each call is very important for teams to be able to connect and find errors. Read more on Github.\nHere are the rules for the path of each call that should be returned\n\n\n\nEvery word in the call path should match the documentation exactly, both in spelling and capitalization. Note that path strings are all lower case, but path parameters are camel case.\n\nEach path should start relative to \"/\" and therefore should not include \"/\"\n\nNo leading or trailing slashes (\"/\") \n\nPath parameters are wrapped in curly braces (\"{}\"). The name of the path parameter should be spelled exactly as it is specified in the documentation.\n\n\n\n\nExamples GOOD    \"call\": \"germplasm/{germplasmDbId}/markerprofiles\" BAD    \"call\": \"germplasm/{id}/markerprofiles\" BAD    \"call\": \"germplasm/{germplasmDbId}/markerProfiles\" BAD    \"call\": \"germplasm/{germplasmdbid}/markerprofiles\" BAD    \"call\": \"brapi/v1/germplasm/{germplasmDbId}/markerprofiles\" BAD    \"call\": \"/germplasm/{germplasmDbId}/markerprofiles/\" BAD    \"call\": \"germplasm/<germplasmDbId>/markerprofiles\"\n\n\n\ntest-server.brapi.org/brapi/v1/calls"
      parameters:
      - deprecated: true
        description: DEPRECATED in v1.3 - see dataType (camel case)
        in: query
        name: datatype
        required: false
        schema:
          type: string
      - description: 'The data format supported by the call. Example: `json`'
        in: query
        name: dataType
        required: false
        schema:
          $ref: '#/components/schemas/WSMIMEDataTypes'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 103
                    totalPages: 52
                  status: []
                result:
                  data:
                  - call: allelematrices
                    dataTypes:
                    - application/json
                    datatypes:
                    - application/json
                    methods:
                    - GET
                    versions:
                    - '1.0'
                    - '1.1'
                    - '1.2'
                    - '1.3'
                  - call: allelematrices-search
                    dataTypes:
                    - application/json
                    datatypes:
                    - application/json
                    methods:
                    - GET
                    - POST
                    versions:
                    - '1.2'
                    - '1.3'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        description: Array of availible calls on this server
                        items:
                          $ref: '#/components/schemas/call'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: callsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the list of implemented Calls
      tags:
      - Calls
  /commoncropnames:
    get:
      description: "List the common crop names for the crops available in a database server. \n\nThis call is **required** for multi-crop systems where data from multiple crops may be stored in the same database server. A distinct database server is defined by everything in the URL before \"/brapi/v1\", including host name and base path.  \n\nThis call is recommended for single crop systems to be compatible with multi-crop clients. For a single crop system the response should contain an array with exactly 1 element. \n\nThe common crop name can be used as a search parameter for Programs, Studies, and Germplasm.\n\n\ntest-server.brapi.org/brapi/v1/commonCropNames"
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - Tomatillo
                  - Paw Paw
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        description: array of crop names availible on the server
                        items:
                          description: supported crop name
                          type: string
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: commonCropNamesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Common Crop Names
      tags:
      - Crops
  /crops:
    get:
      deprecated: true
      description: |-
        For multi crop systems this is a useful call to list all the supported crops.


        test-server.brapi.org/brapi/v1/crops
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 2
                    pageSize: 1000
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        description: array of crop names availible on the server
                        items:
                          description: supported crop name
                          type: string
                        type: array
                    type: object
                title: cropsResponse
                type: object
          description: OK
          headers: {}
      summary: List supported crops
      tags:
      - Crops
      - Deprecated
  /germplasm:
    get:
      description: "Addresses these needs\n\n- General germplasm search mechanism that accepts POST for complex queries \n\n- Possibility to search germplasm by more parameters than those allowed by the existing germplasm search \n\n- Possibility to get MCPD details by PUID rather than dbId"
      parameters:
      - description: Permanent unique identifier (DOI, URI, etc.)
        in: query
        name: germplasmPUI
        required: false
        schema:
          type: string
      - description: Internal database identifier
        in: query
        name: germplasmDbId
        required: false
        schema:
          type: string
      - description: Name of the germplasm
        in: query
        name: germplasmName
        required: false
        schema:
          type: string
      - description: The common crop name related to this germplasm
        in: query
        name: commonCropName
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - accessionNumber: A000003
                    acquisitionDate: '2001-01-01'
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000003
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000003
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: '3'
                    germplasmGenus: Fructus
                    germplasmName: Name003
                    germplasmPUI: http://pui.per/accession/A000003
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000002
                    seedSource: A000001/A000002
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  - accessionNumber: A000004
                    acquisitionDate: '2001-01-01'
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000004
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000004
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: '4'
                    germplasmGenus: Fructus
                    germplasmName: Name004
                    germplasmPUI: http://pui.per/accession/A000004
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000003
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 4
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/germplasm'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: germplasmResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Germplasm
      tags:
      - Germplasm
  /germplasm-search:
    get:
      deprecated: true
      description: DEPRECATED in V1.3 - see GET /germplasm
      parameters:
      - description: Permanent unique identifier (DOI, URI, etc.)
        in: query
        name: germplasmPUI
        required: false
        schema:
          type: string
      - description: Internal database identifier
        in: query
        name: germplasmDbId
        required: false
        schema:
          type: string
      - description: Name of the germplasm
        in: query
        name: germplasmName
        required: false
        schema:
          type: string
      - description: The common crop name related to this germplasm
        in: query
        name: commonCropName
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - accessionNumber: A000003
                    acquisitionDate: '2001-01-01'
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000003
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000003
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: '3'
                    germplasmGenus: Fructus
                    germplasmName: Name003
                    germplasmPUI: http://pui.per/accession/A000003
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000002
                    seedSource: A000001/A000002
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  - accessionNumber: A000004
                    acquisitionDate: '2001-01-01'
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000004
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000004
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: '4'
                    germplasmGenus: Fructus
                    germplasmName: Name004
                    germplasmPUI: http://pui.per/accession/A000004
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000003
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 4
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/germplasm'
                        type: array
                    type: object
                title: germplasmResponse
                type: object
          description: OK
          headers: {}
      summary: Germplasm search through GET
      tags:
      - Germplasm
      - Search Services
    post:
      deprecated: true
      description: DEPRECATED in V1.3 - see POST /search/germplasm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/germplasmSearchRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - accessionNumber: A000003
                    acquisitionDate: '2001-01-01'
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000003
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000003
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: '3'
                    germplasmGenus: Fructus
                    germplasmName: Name003
                    germplasmPUI: http://pui.per/accession/A000003
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000002
                    seedSource: A000001/A000002
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  - accessionNumber: A000004
                    acquisitionDate: '2001-01-01'
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000004
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000004
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: '4'
                    germplasmGenus: Fructus
                    germplasmName: Name004
                    germplasmPUI: http://pui.per/accession/A000004
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000003
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 4
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/germplasm'
                        type: array
                    type: object
                title: germplasmResponse
                type: object
          description: OK
          headers: {}
      summary: Germplasm search through POST
      tags:
      - Germplasm
      - Search Services
  /germplasm/{germplasmDbId}:
    get:
      description: Germplasm Details by germplasmDbId was merged with Germplasm Multi Crop Passport Data. The MCPD fields are optional and marked with the prefix [MCPD].
      parameters:
      - description: The internal id of the germplasm
        in: path
        name: germplasmDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  accessionNumber: A000003
                  acquisitionDate: '2001-01-01'
                  biologicalStatusOfAccessionCode: 500
                  breedingMethodDbId: bm1
                  commonCropName: G000003
                  countryOfOriginCode: COUNTRY1
                  defaultDisplayName: G000003
                  documentationURL: https://brapi.org
                  donors: []
                  genus: Fructus
                  germplasmDbId: '3'
                  germplasmGenus: Fructus
                  germplasmName: Name003
                  germplasmPUI: http://pui.per/accession/A000003
                  germplasmSpecies: novus
                  instituteCode: PER001
                  instituteName: INST1
                  pedigree: A000001/A000002
                  seedSource: A000001/A000002
                  species: novus
                  speciesAuthority: L
                  subtaxa: subtaxa
                  subtaxaAuthority: N
                  synonyms:
                  - variety 1
                  taxonIds:
                  - sourceName: ncbiTaxon
                    taxonId: '2340'
                  - sourceName: ciradTaxon
                    taxonId: E312
                  typeOfGermplasmStorageCode: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/germplasm'
                required:
                - metadata
                - result
                title: germplasmResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific Germplasm
      tags:
      - Germplasm
  /germplasm/{germplasmDbId}/attributes:
    get:
      description: Values for all attributes by default.
      parameters:
      - description: The germplasm characterized
        in: path
        name: germplasmDbId
        required: true
        schema:
          type: string
      - description: Restrict the response to only the listed attributeDbIds.
        in: query
        name: attributeDbIds
        required: false
        schema:
          items:
            type: string
          type: array
      - description: '**Deprecated** Use "attributeDbIds" instead'
        deprecated: true
        in: query
        name: attributeList
        required: false
        schema:
          items:
            type: string
          type: array
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 5
                    totalPages: 3
                  status: []
                result:
                  data:
                  - attributeCode: RHT
                    attributeDbId: ATT01
                    attributeName: Rht-B1b
                    determinedDate: '2017-03-17'
                    value: Heterozygous
                  - attributeCode: WEV
                    attributeDbId: ATT02
                    attributeName: Weevil Resistance
                    determinedDate: '2017-03-17'
                    value: Present
                  germplasmDbId: '3'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/germplasmAttributeList'
                required:
                - metadata
                - result
                title: germplasmAttributeListResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the Germplasm Attributes associated with a specific Germplasm
      tags:
      - Germplasm Attributes
      - Germplasm
  /germplasm/{germplasmDbId}/markerprofiles:
    get:
      description: Retrieve the markerProfileDbIds for a given Germplasm ID
      parameters:
      - description: the internal id of the germplasm
        in: path
        name: germplasmDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  germplasmDbId: '3'
                  markerProfileDbIds:
                  - G3-P2
                  markerprofileDbIds:
                  - G3-P2
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/germplasmMarkerprofilesList'
                required:
                - metadata
                - result
                title: germplasmMarkerprofilesListResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the Marker Profiles associated with a specific Germplasm
      tags:
      - Germplasm
  /germplasm/{germplasmDbId}/mcpd:
    get:
      description: |-
        Get all MCPD details of a germplasm

        <a target="_blank" href="https://www.bioversityinternational.org/fileadmin/user_upload/online_library/publications/pdfs/FAOBIOVERSITY_MULTI-CROP_PASSPORT_DESCRIPTORS_V.2.1_2015_2020.pdf"> MCPD v2.1 spec can be found here </a>

        Implementation Notes

        - When the MCPD spec identifies a field which can have multiple values returned, the JSON response should be an array instead of a semi-colon seperated string.
      parameters:
      - description: the internal id of the germplasm
        in: path
        name: germplasmDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  accessionNames:
                  - Name003
                  accessionNumber: A000003
                  acquisitionDate: '2001-01-01'
                  acquisitionSourceCode: '11'
                  alternateIDs:
                  - '3'
                  - http://pui.per/accession/A000003
                  - A000003
                  ancestralData: A000001/A000002
                  biologicalStatusOfAccessionCode: '500'
                  breedingInstitutes:
                  - instituteCode: PER001
                    instituteName: INST1
                  collectingInfo:
                    collectingDate: '2001-01-01'
                    collectingInstitutes:
                    - instituteAddress: INST1
                      instituteCode: PER001
                      instituteName: INST1
                    collectingMissionIdentifier: '3'
                    collectingNumber: A000003
                    collectingSite:
                      coordinateUncertainty: 20m
                      elevation: 20m
                      georeferencingMethod: WGS84
                      latitudeDecimal: '+42.445295'
                      latitudeDegrees: 42 26 43.1 N
                      locationDescription: INST1
                      longitudeDecimal: '-076.471934'
                      longitudeDegrees: 76 28 19.0 W
                      spatialReferenceSystem: WGS84
                  commonCropName: G000003
                  countryOfOrigin: COUNTRY1
                  donorInfo:
                    donorAccessionNumber: A000003
                    donorInstitute:
                      instituteCode: PER001
                      instituteName: INST1
                  genus: Fructus
                  germplasmDbId: '3'
                  germplasmPUI: http://pui.per/accession/A000003
                  instituteCode: PER001
                  mlsStatus: '0'
                  remarks: G000003
                  safetyDuplicateInstitues:
                  - instituteCode: PER001
                    instituteName: INST1
                  species: novus
                  speciesAuthority: L
                  storageTypeCodes: []
                  subtaxon: subtaxa
                  subtaxonAuthority: N
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/germplasmMCPD'
                required:
                - metadata
                - result
                title: germplasmMCPDResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specifc Germplasm in MCPD format
      tags:
      - Germplasm
  /germplasm/{germplasmDbId}/pedigree:
    get:
      description: Get the parentage information of a specific Germplasm
      parameters:
      - description: the internal id of the germplasm
        in: path
        name: germplasmDbId
        required: true
        schema:
          type: string
      - description: text representation of the pedigree
        in: query
        name: notation
        required: false
        schema:
          type: string
      - description: include array of siblings in response
        in: query
        name: includeSiblings
        required: false
        schema:
          type: boolean
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  crossingPlan: OPEN_POLLINATION
                  crossingYear: '2018'
                  defaultDisplayName: G000003
                  familyCode: Cree_x_Bonanza_2018
                  germplasmDbId: '3'
                  parent1DbId: '1'
                  parent1Id: '1'
                  parent1Name: G000001
                  parent1Type: FEMALE
                  parent2DbId: '2'
                  parent2Id: '2'
                  parent2Name: G000002
                  parent2Type: MALE
                  pedigree: A000001/A000002
                  siblings: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/pedigree'
                required:
                - metadata
                - result
                title: pedigreeResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the pedigree details of a specific Germplasm
      tags:
      - Germplasm
  /germplasm/{germplasmDbId}/progeny:
    get:
      description: |-
        Get the germplasmDbIds for all the Progeny of a particular germplasm.

        Implementation Notes

        - Regarding the 'parentType' field in the progeny object. Given a germplasm A having a progeny B and C, 'parentType' for progeny B refers to the 'parentType' of A toward B.
      parameters:
      - description: the internal id of the germplasm
        in: path
        name: germplasmDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  defaultDisplayName: G000002
                  germplasmDbId: '3'
                  progeny:
                  - defaultDisplayName: G000004
                    germplasmDbId: '4'
                    parentType: MALE
                  - defaultDisplayName: G000005
                    germplasmDbId: '5'
                    parentType: MALE
                  - defaultDisplayName: G000006
                    germplasmDbId: '6'
                    parentType: MALE
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/progeny'
                required:
                - metadata
                - result
                title: progenyResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the progeny details of a specific Germplasm
      tags:
      - Germplasm
  /images:
    get:
      description: "Get filtered set of image meta data\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.  "
      parameters:
      - description: The unique identifier for a image
        in: query
        name: imageDbId
        required: false
        schema:
          type: string
      - description: The human readable name of an image
        in: query
        name: imageName
        required: false
        schema:
          type: string
      - description: The unique identifier of the observation unit an image is portraying
        in: query
        name: observationUnitDbId
        required: false
        schema:
          type: string
      - description: The unique identifier of the observation an image is accosiated with
        in: query
        name: observationDbId
        required: false
        schema:
          type: string
      - description: A descriptive term associated with an image
        in: query
        name: descriptiveOntologyTerm
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - additionalInfo: {}
                    copyright: Copyright 2018
                    description: BrAPI Logo
                    descriptiveOntologyTerms:
                    - brapi
                    - logo
                    imageDbId: img1
                    imageFileName: brapi-logo.svg
                    imageFileSize: 3676
                    imageHeight: 56
                    imageLocation:
                      geometry:
                        coordinates:
                        - -110.11301
                        - 50.010082
                        type: Point
                      type: Feature
                    imageName: brapiLogo
                    imageTimeStamp: '2011-06-14T01:02:03Z'
                    imageURL: https://brapi.org/assets/images/brapi-logo.svg
                    imageWidth: 258
                    mimeType: image/svg
                    observationDbIds:
                    - '1'
                    - '2'
                    observationUnitDbId: '1'
                  - additionalInfo: {}
                    copyright: Copyright 2018
                    description: BrAPI Logo
                    descriptiveOntologyTerms:
                    - brapi
                    - logo
                    imageDbId: img2
                    imageFileName: brapi-logo.svg
                    imageFileSize: 3676
                    imageHeight: 56
                    imageLocation:
                      geometry:
                        coordinates:
                        - -110.11301
                        - 50.010082
                        type: Point
                      type: Feature
                    imageName: brapiLogo
                    imageTimeStamp: '2011-06-14T01:02:03Z'
                    imageURL: https://brapi.org/assets/images/brapi-logo.svg
                    imageWidth: 258
                    mimeType: image/svg
                    observationDbIds:
                    - '1'
                    - '2'
                    observationUnitDbId: '1'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        description: Array of image meta data
                        items:
                          $ref: '#/components/schemas/image'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: imagesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the image meta data summaries
      tags:
      - Images
    post:
      description: "Create a new image meta data object\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.\n\n- The `/images` calls support a GeoJSON object structure for describing their location. The BrAPI spec for GeoJSON only supports two of the possible geometries: Points and Polygons.\n\n- With most images, the Point geometry should be used, and it should indicate the longitude and latitude of the camera.\n\n- For top down images (ie from drones, cranes, etc), the Point geometry may be used to indicate the longitude and latitude of the centroid of the image content, and the Polygon geometry may be used to indicate the border of the image content. "
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newImageRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  additionalInfo: {}
                  copyright: Copyright 2019
                  description: BrAPI Logo
                  descriptiveOntologyTerms:
                  - brapi
                  - logo
                  imageDbId: ce15937e-093e-4624-8950-00dab3172e4c
                  imageFileName: brapi-logo.svg
                  imageFileSize: 3676
                  imageHeight: 56
                  imageLocation:
                    geometry:
                      coordinates:
                      - -110.11301
                      - 50.010082
                      type: Point
                    type: Feature
                  imageName: brapiLogo
                  imageTimeStamp: '1969-12-31T01:02:03Z'
                  imageURL: ''
                  imageWidth: 258
                  mimeType: image/svg
                  observationDbIds:
                  - '1'
                  - '2'
                  observationUnitDbId: '11'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/image'
                required:
                - metadata
                - result
                title: imageResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Create a new image meta data object
      tags:
      - Images
  /images/{imageDbId}:
    get:
      description: "Get one image meta data object\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's. "
      parameters:
      - description: The unique identifier for a image
        in: path
        name: imageDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  additionalInfo: {}
                  copyright: Copyright 2018
                  description: BrAPI Logo
                  descriptiveOntologyTerms:
                  - brapi
                  - logo
                  imageDbId: img1
                  imageFileName: brapi-logo.svg
                  imageFileSize: 3676
                  imageHeight: 56
                  imageLocation:
                    geometry:
                      coordinates:
                      - -110.11301
                      - 50.010082
                      type: Point
                    type: Feature
                  imageName: brapiLogo
                  imageTimeStamp: '2011-06-14T01:02:03Z'
                  imageURL: https://brapi.org/assets/images/brapi-logo.svg
                  imageWidth: 258
                  mimeType: image/svg
                  observationDbIds:
                  - '1'
                  - '2'
                  observationUnitDbId: '1'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/image'
                required:
                - metadata
                - result
                title: imageResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the an image meta data summary
      tags:
      - Images
    put:
      description: "Update an image meta data object\n\nImplementation Notes\n\n- This call should be paired with 'PUT /images/{imageDbId}/imagecontent' for full capability\n\n- A server may choose to modify the image meta data object based on the actually image which has been uploaded. \n\n- Image data may be stored in a database or file system. Servers should generate and provide the \\\"imageURL\\\" as an absolute path for retrieving the image, wherever it happens to live. \n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's. \n\n- The `/images` calls support a GeoJSON object structure for describing their location. The BrAPI spec for GeoJSON only supports two of the possible geometries: Points and Polygons. \n        \n- With most images, the Point geometry should be used, and it should indicate the longitude and latitude of the camera. \n        \n- For top down images (ie from drones, cranes, etc), the Point geometry may be used to indicate the longitude and latitude of the centroid of the image content, and the Polygon geometry may be used to indicate the border of the image content. '"
      parameters:
      - description: The unique identifier for a image
        in: path
        name: imageDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newImageRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  additionalInfo: {}
                  copyright: Copyright 2019
                  description: BrAPI Logo
                  descriptiveOntologyTerms:
                  - brapi
                  - logo
                  imageDbId: img1
                  imageFileName: brapi-logo.svg
                  imageFileSize: 3676
                  imageHeight: 56
                  imageLocation:
                    geometry:
                      coordinates:
                      - -110.11301
                      - 50.010082
                      type: Point
                    type: Feature
                  imageName: brapiLogo
                  imageTimeStamp: '1969-12-31T01:02:03Z'
                  imageURL: ''
                  imageWidth: 258
                  mimeType: image/svg
                  observationDbIds:
                  - '1'
                  - '2'
                  observationUnitDbId: '11'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/image'
                required:
                - metadata
                - result
                title: imageResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update an image meta data
      tags:
      - Images
  /images/{imageDbId}/imagecontent:
    put:
      description: "Update an image with the image file content\n\nImplementation Notes\n\n- This call should be paired with 'PUT /images/{imageDbId}' for full capability\n\n- A server may choose to modify the image meta data object based on the actually image which has been uploaded. \n\n- Image data may be stored in a database or file system. Servers should generate and provide the \"imageURL\" for retrieving the image, wherever it happens to live.  "
      parameters:
      - description: The unique identifier for a image
        in: path
        name: imageDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          image/*:
            schema:
              format: binary
              type: string
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  additionalInfo: {}
                  copyright: Copyright 2019
                  description: BrAPI Logo
                  descriptiveOntologyTerms:
                  - brapi
                  - logo
                  imageDbId: img1
                  imageFileName: brapi-logo.svg
                  imageFileSize: 3676
                  imageHeight: 56
                  imageLocation:
                    geometry:
                      coordinates:
                      - -110.11301
                      - 50.010082
                      type: Point
                    type: Feature
                  imageName: brapiLogo
                  imageTimeStamp: '1969-12-31T01:02:03Z'
                  imageURL: http://localhost:8080/brapi/v1/images/img1/brapi-logo.svg
                  imageWidth: 258
                  mimeType: image/svg
                  observationDbIds:
                  - '1'
                  - '2'
                  observationUnitDbId: '11'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/image'
                required:
                - metadata
                - result
                title: imageResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update an image with the image file content
      tags:
      - Images
  /lists:
    get:
      description: Get filtered set of generic lists
      parameters:
      - description: The type of objects contained by this generic list
        in: query
        name: listType
        required: false
        schema:
          $ref: '#/components/schemas/listTypes'
      - description: The human readable name of this generic list
        in: query
        name: listName
        required: false
        schema:
          type: string
      - description: The unique ID of this generic list
        in: query
        name: listDbId
        required: false
        schema:
          type: string
      - description: The source tag of this generic list
        in: query
        name: listSource
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - dateCreated: '2011-06-14T22:12:51-04:00'
                    dateModified: '2011-06-14T22:12:51-04:00'
                    description: Example List of germplasm
                    listDbId: list1
                    listName: Example List 1
                    listOwnerName: Bob Robertson
                    listOwnerPersonDbId: person1
                    listSize: 3
                    listSource: User Created
                    listType: germplasm
                  - dateCreated: '2011-06-14T22:12:51-04:00'
                    dateModified: '2011-06-14T22:12:51-04:00'
                    description: Example List of germplasm
                    listDbId: list2
                    listName: Example List 2
                    listOwnerName: Rob Robertson
                    listOwnerPersonDbId: person2
                    listSize: 3
                    listSource: User Created
                    listType: germplasm
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        description: Array of generic list summaries
                        items:
                          $ref: '#/components/schemas/listSummary'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: listSummaryResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the List Summaries
      tags:
      - Lists
    post:
      description: Create a new list
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newListRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data:
                  - string
                  dateCreated: '2018-12-05T14:36:04-05:00'
                  dateModified: '2018-12-05T14:36:04-05:00'
                  description: string
                  listDbId: d93d6bb6-dfc3-4d15-8d2e-654c618ce12e
                  listName: string
                  listOwnerName: string
                  listOwnerPersonDbId: string
                  listSize: 1
                  listSource: string
                  listType: germplasm
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/listDetails'
                required:
                - metadata
                - result
                title: listResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Create a New List
      tags:
      - Lists
  /lists/{listDbId}:
    get:
      description: Get a specific generic lists
      parameters:
      - description: The unique ID of this generic list
        in: path
        name: listDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data:
                  - '1'
                  - '2'
                  - '3'
                  dateCreated: '2011-06-14T22:12:51-04:00'
                  dateModified: '2011-06-14T22:12:51-04:00'
                  description: Example List of germplasm
                  listDbId: list1
                  listName: Example List 1
                  listOwnerName: Bob Robertson
                  listOwnerPersonDbId: person1
                  listSize: 3
                  listSource: User Created
                  listType: germplasm
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/listDetails'
                required:
                - metadata
                - result
                title: listResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific List
      tags:
      - Lists
    put:
      description: Update an existing generic list
      parameters:
      - description: The unique ID of this generic list
        in: path
        name: listDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newListRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data:
                  - string
                  dateCreated: '2011-06-14T22:12:51-04:00'
                  dateModified: '2018-12-05T14:36:04-05:00'
                  description: string
                  listDbId: list1
                  listName: string
                  listOwnerName: string
                  listOwnerPersonDbId: string
                  listSize: 1
                  listSource: string
                  listType: germplasm
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/listDetails'
                required:
                - metadata
                - result
                title: listResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update a specific List
      tags:
      - Lists
  /lists/{listDbId}/items:
    post:
      description: Add new data to a specific generic lists
      parameters:
      - description: The unique ID of this generic list
        in: path
        name: listDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data:
                  - '1'
                  - '2'
                  - '3'
                  dateCreated: '2011-06-14T22:12:51-04:00'
                  dateModified: '2018-12-05T14:36:04-05:00'
                  description: string
                  listDbId: list1
                  listName: string
                  listOwnerName: string
                  listOwnerPersonDbId: string
                  listSize: 3
                  listSource: string
                  listType: germplasm
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/listDetails'
                required:
                - metadata
                - result
                title: listResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Add Items to a specific List
      tags:
      - Lists
  /locations:
    get:
      description: |-
        Implemented by: Germinate

        Get a list of locations.

        * The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec.

        * `altitude` is in meters.

        **Note**: Consider revising to describe polygon lat/lan points and check if adopting http://geojson.org/ is worth doing for v1.
      parameters:
      - description: Filter by location type specified.
        in: query
        name: locationType
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 17
                    totalPages: 9
                  status: []
                result:
                  data:
                  - abbreviation: L1
                    abreviation: L1
                    additionalInfo:
                      adm1: Junin
                      adm2: Chanchamayo
                      adm3: San Ramon
                      annualMeanTemperature: '23'
                      annualTotalPrecipitation: '360'
                      cont: South America
                      creg: LAC
                      local: San Ramon
                    altitude: 828
                    countryCode: PER
                    countryName: Peru
                    documentationURL: https://brapi.org
                    instituteAddress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteAdress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteName: Plant Science Institute
                    latitude: -11.1274995803833
                    locationDbId: '1'
                    locationName: Location 1
                    locationType: Storage location
                    longitude: -75.35639190673828
                    name: Location 1
                  - abbreviation: L2
                    abreviation: L2
                    additionalInfo: {}
                    altitude: 964
                    countryCode: PER
                    countryName: Peru
                    documentationURL: https://brapi.org
                    instituteAddress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteAdress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteName: Plant Science Institute
                    latitude: -11.161160469055176
                    locationDbId: '2'
                    locationName: Location 2
                    locationType: Breeding location
                    longitude: -75.34171295166016
                    name: Location 2
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/location'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: locationsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Locations
      tags:
      - Locations
  /locations/{locationDbId}:
    get:
      description: |-
        Get details for a location.

        - The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec.

        - `altitude` is in meters.
      parameters:
      - description: The internal DB id for a location
        in: path
        name: locationDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  abbreviation: L1
                  abreviation: L1
                  additionalInfo:
                    adm1: Junin
                    adm2: Chanchamayo
                    adm3: San Ramon
                    annualMeanTemperature: '23'
                    annualTotalPrecipitation: '360'
                    cont: South America
                    creg: LAC
                    local: San Ramon
                  altitude: 828
                  countryCode: PER
                  countryName: Peru
                  documentationURL: https://brapi.org
                  instituteAddress: 71 Pilgrim Avenue Chevy Chase MD 20815
                  instituteAdress: 71 Pilgrim Avenue Chevy Chase MD 20815
                  instituteName: Plant Science Institute
                  latitude: -11.1274995803833
                  locationDbId: '1'
                  locationName: Location 1
                  locationType: Storage location
                  longitude: -75.35639190673828
                  name: Location 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/location'
                required:
                - metadata
                - result
                title: locationResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific Location
      tags:
      - Locations
  /login:
    post:
      deprecated: true
      description: "Implemented by: Tripal Brapi module, Cassavabase, Germinate, BMS\n\nUsed by: Flapjack, BMS\n\nResponse data types\nException: the result is not embeded in a \"result\" structure in order to be (one day) OAuth2 compliant. It's also why the anwser mixes snake_case and camelCase.\nFor login, returns a hash with the user name and the token as the value. A metadata key is also present (but usually set to null, unless an error condition occurs).\n\nFor logout, returns an empty resource. A token to remove could be provided (amdin interface) but it is not required. By default, current user token will be removed.\n\n|Variable|Datatype|Description|Required|  \n|------|------|------|:-----:|\n| userDisplayName| string| the display name of the user | Y |\n| access_token | string | the access token for the session | Y |\n| expires_in | integer | The lifetime in seconds of the access token | Y | "
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client_id:
                  type: string
                grant_type:
                  type: string
                password:
                  type: string
                username:
                  type: string
              type: object
      responses:
        '201':
          content:
            application/json:
              example:
                access_token: R6gKDBRxM4HLj6eGi4u5HkQjYoIBTPfvtZzUD8TUzg4
                expires_in: The lifetime in seconds of the access token
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                userDisplayName: John Smith
          description: Created
          headers: {}
      summary: Login
      tags:
      - Authentication
      - Deprecated
  /logout:
    delete:
      deprecated: true
      description: |-
        Implemented by: Tripal Brapi module, Cassavabase, Germinate, BMS

        Used by: Flapjack, BMS

        For logout, returns an empty resource. A token to remove could be provided (amdin interface) but it is not required. By default, current user token will be removed.
      responses:
        '201':
          content:
            application/json:
              example: {}
          description: Created
          headers: {}
      summary: Logout
      tags:
      - Authentication
      - Deprecated
  /maps:
    get:
      description: Get list of maps
      parameters:
      - deprecated: true
        description: DEPRECATED in v1.3 - See "scientificName"
        in: query
        name: species
        required: false
        schema:
          type: string
      - description: The common name of the crop, found from "GET /commoncropnames"
        in: query
        name: commonCropName
        required: false
        schema:
          type: string
      - description: Full scientific binomial format name. This includes Genus, Species, and Sub-species
        in: query
        name: scientificName
        required: false
        schema:
          type: string
      - description: Type of map
        in: query
        name: type
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - comments: comments
                    commonCropName: Paw Paw
                    documentationURL: https://brapi.org
                    linkageGroupCount: 1
                    mapDbId: gm1
                    mapName: Genome Map 1
                    markerCount: 11
                    name: Genome Map 1
                    publishedDate: '2018-01-01'
                    scientificName: Asimina triloba
                    species: triloba
                    type: Genetic
                    unit: cM
                  - comments: comments
                    commonCropName: Paw Paw
                    documentationURL: https://brapi.org
                    linkageGroupCount: 2
                    mapDbId: gm2
                    mapName: Genome Map 2
                    markerCount: 11
                    name: Genome Map 2
                    publishedDate: '2018-01-01'
                    scientificName: Asimina triloba
                    species: triloba
                    type: Genetic
                    unit: cM
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/genomeMap'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: genomeMapsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Genomic Maps
      tags:
      - Genome Maps
  /maps/{mapDbId}:
    get:
      description: Provides the number of markers on each linkageGroup and the max position on the linkageGroup
      parameters:
      - description: The internal db id of a selected map
        in: path
        name: mapDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 1
                    totalPages: 1
                  status: []
                result:
                  data:
                  - linkageGroupName: '1'
                    markerCount: 11
                    maxPosition: 1110
                  documentationURL: https://brapi.org
                  linkageGroups:
                  - linkageGroupName: '1'
                    markerCount: 11
                    maxPosition: 1110
                  mapDbId: gm1
                  mapName: Genome Map 1
                  name: Genome Map 1
                  type: Genetic
                  unit: cM
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/genomeMapDetails'
                required:
                - metadata
                - result
                title: mapDetailsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific Genomic Map
      tags:
      - Genome Maps
  /maps/{mapDbId}/positions:
    get:
      description: All the markers in a given Map, ordered by linkageGroup and position.
      parameters:
      - description: unique id of the map
        in: path
        name: mapDbId
        required: true
        schema:
          type: string
      - deprecated: true
        description: Deprecated Use linkageGroupName instead
        in: query
        name: linkageGroupId
        required: false
        schema:
          type: string
      - description: The chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.
        in: query
        name: linkageGroupName
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 11
                    totalPages: 6
                  status: []
                result:
                  data:
                  - linkageGroupName: '1'
                    location: '1000'
                    markerDbId: mr01
                    markerName: marker1-1
                  - linkageGroupName: '1'
                    location: '1020'
                    markerDbId: mr02
                    markerName: marker1-2
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/markerSummaryMap'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: markerSummaryMapResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the positions of Markers inside a specific Genomic Map
      tags:
      - Genome Maps
  /maps/{mapDbId}/positions/{linkageGroupName}:
    get:
      description: All the markers in a specific Linkage Group (aka Chromasome) inside a particular Map, ordered by position.
      parameters:
      - description: unique id of the map
        in: path
        name: mapDbId
        required: true
        schema:
          type: string
      - description: The chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.
        in: path
        name: linkageGroupName
        required: true
        schema:
          type: string
      - description: minimum position on linkage group
        in: query
        name: min
        required: false
        schema:
          type: integer
      - description: maximum position on linkage group
        in: query
        name: max
        required: false
        schema:
          type: integer
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 11
                    totalPages: 6
                  status: []
                result:
                  data:
                  - location: '1000'
                    markerDbId: mr01
                    markerName: marker1-1
                  - location: '1020'
                    markerDbId: mr02
                    markerName: marker1-2
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/markerSummaryLinkageGroup'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: markerSummaryLinkageGroupResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the positions of Markers inside a specific Linkage Group
      tags:
      - Genome Maps
  /markerprofiles:
    get:
      description: For the requested Germplasm Id and/or Extract Id, returns the Markerprofile Id and number of non-missing allele calls (marker/allele pairs).
      parameters:
      - description: The server's internal ids for the Germplasm IDs, as returned by the Find marker profile by Germplasm service.
        in: query
        name: germplasmDbId
        required: false
        schema:
          type: string
      - description: The server's internal id for the StudyDbId
        in: query
        name: studyDbId
        required: false
        schema:
          type: string
      - description: The server's internal id for the SampleDbId
        in: query
        name: sampleDbId
        required: false
        schema:
          type: string
      - description: The server's internal id for the ExtractDbId
        in: query
        name: extractDbId
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 14
                    totalPages: 7
                  status: []
                result:
                  data:
                  - analysisMethod: GBS
                    extractDbId: extract1
                    germplasmDbId: '1'
                    markerProfileDbId: P1
                    markerprofileDbId: P1
                    resultCount: 20
                    sampleDbId: sam00
                    uniqueDisplayName: My Fancy Germplasm
                  - analysisMethod: GBS
                    extractDbId: extract2
                    germplasmDbId: '1'
                    markerProfileDbId: P2
                    markerprofileDbId: P2
                    resultCount: 20
                    sampleDbId: sam01
                    uniqueDisplayName: My Fancy Germplasm
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/markerProfileDescription'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: markerProfileDescriptionsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Marker Profiles
      tags:
      - Marker Profiles
  /markerprofiles/{markerProfileDbId}:
    get:
      description: "For the requested marker profile ID, returns the allele call for each marker. \n        \nAllele encodings\n\n- Unknown data will by default be encoded by \\\"N\\\"\n\n- Homozygotes are returned as a single occurance, e.g. AA -> A, GG -> G\n\n- Phased heterozygotes are by default separated by a pipe (\\\"|\\\") and unphased heterozygotes are by default separated by a forward slash (\\\"/\\\")\n\n- Dominant markers such as DArTs: 1 for present, 0 for absent\n        \n- If the user would like to use an empty string (\\\"\\\") for any of the parameters, the value should be set to the reserved word \\\"empty_string\\\", e.g. sepUnphased=empty_string.\n\nOpen issue: The pages of data will need to be sorted sensibly in order for the requested page to be delivered consistently.  By map or genome position? Alphabetically?'\""
      parameters:
      - description: The server's internal id for the marker profile
        in: path
        name: markerProfileDbId
        required: true
        schema:
          type: string
      - description: Should homozygotes NOT be collapsed into a single orrucance?
        in: query
        name: expandHomozygotes
        required: false
        schema:
          type: boolean
      - description: The string to use as a representation for missing data or the reserved word "empty_string".
        in: query
        name: unknownString
        required: false
        schema:
          type: string
      - description: The string to use as a separator for phased allele calls or the reserved word "empty_string".
        in: query
        name: sepPhased
        required: false
        schema:
          type: string
      - description: The string to use as a separator for unphased allele calls or the reserved word "empty_string".
        in: query
        name: sepUnphased
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 20
                    totalPages: 10
                  status: []
                result:
                  analysisMethod: GBS
                  data:
                  - marker1-1: A
                  - marker1-2: C
                  extractDbId: extract1
                  germplasmDbId: '1'
                  markerProfileDbId: P1
                  markerprofileDbId: P1
                  uniqueDisplayName: My Fancy Germplasm
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/markerProfile'
                required:
                - metadata
                - result
                title: markerProfilesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details for a specific Marker Profile
      tags:
      - Marker Profiles
  /markers:
    get:
      description: |-
        Other service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria.
        If there is none, an empty array is returned. If there is one or more than one match, returns an array of all marker records that match the search criteria.
      parameters:
      - description: The database ID of the markers to search for
        in: query
        name: markerDbId
        required: false
        schema:
          type: string
      - description: The search paramater for a marker name or synonym.
        in: query
        name: markerName
        required: false
        schema:
          type: string
      - deprecated: true
        description: DEPRECAED in v1.3 - see "markerName"
        in: query
        name: name
        required: false
        schema:
          type: string
      - deprecated: true
        description: DEPRECAED in v1.3 - see /search/markers
        in: query
        name: matchMethod
        required: false
        schema:
          enum:
          - case_insensitive
          - exact
          - wildcard
          type: string
      - description: Whether to include synonyms in the output.
        in: query
        name: includeSynonyms
        required: false
        schema:
          type: boolean
      - description: DEPRECATED in v1.1 - see "includeSynonyms"
        deprecated: true
        in: query
        name: include
        required: false
        schema:
          type: string
      - description: The type of the marker.
        in: query
        name: type
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - analysisMethods:
                    - illumina
                    defaultDisplayName: marker1-1
                    markerDbId: mr01
                    markerName: marker1-1
                    refAlt:
                    - A
                    - T
                    synonyms:
                    - i_11_10010
                    type: marker
                  - analysisMethods:
                    - kasp
                    defaultDisplayName: marker1-2
                    markerDbId: mr02
                    markerName: marker1-2
                    refAlt:
                    - A
                    - T
                    synonyms:
                    - i_11_10020
                    type: marker
              schema:
                $ref: '#/components/schemas/markersResponse'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Markers
      tags:
      - Markers
  /markers-search:
    get:
      deprecated: true
      description: " Scope: CORE.  Status: ACCEPTED.\nImplemented by: Germinate\nSee Search Services for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. "
      parameters:
      - description: The database IDs of the markers to search for
        in: query
        name: markerDbIds
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 'The search pattern for a marker name or synonym. Examples: "11_10002" "11_1%" "11_1*" "11_10?02"'
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: |-
          Possible values are 'case_insensitive', 'exact'
          (case sensitive), 'wildcard' (which is case insensitive). Wildcard uses both '*' and '%' for any number of characters
          and '?' for one character matching. Default is exact.
        in: query
        name: matchMethod
        required: false
        schema:
          type: string
      - description: Whether to include synonyms in the output.
        in: query
        name: includeSynonyms
        required: false
        schema:
          type: boolean
      - description: The type of the marker.
        in: query
        name: type
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - analysisMethods:
                    - illumina
                    defaultDisplayName: marker1-1
                    markerDbId: mr01
                    markerName: marker1-1
                    refAlt:
                    - A
                    - T
                    synonyms:
                    - i_11_10010
                    type: marker
                  - analysisMethods:
                    - kasp
                    defaultDisplayName: marker1-2
                    markerDbId: mr02
                    markerName: marker1-2
                    refAlt:
                    - A
                    - T
                    synonyms:
                    - i_11_10020
                    type: marker
              schema:
                $ref: '#/components/schemas/markersResponse'
          description: OK
          headers: {}
      summary: Markers Search (GET)
      tags:
      - Markers
    post:
      deprecated: true
      description: " Scope: CORE.  Status: ACCEPTED.\nImplemented by: Germinate\nSee Search Services for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. "
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/markersSearchRequest'
        description: The database IDs of the markers to search for
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - analysisMethods:
                    - illumina
                    defaultDisplayName: marker1-1
                    markerDbId: mr01
                    markerName: marker1-1
                    refAlt:
                    - A
                    - T
                    synonyms:
                    - i_11_10010
                    type: marker
                  - analysisMethods:
                    - kasp
                    defaultDisplayName: marker1-2
                    markerDbId: mr02
                    markerName: marker1-2
                    refAlt:
                    - A
                    - T
                    synonyms:
                    - i_11_10020
                    type: marker
              schema:
                $ref: '#/components/schemas/markersResponse'
          description: OK
          headers: {}
      summary: Markers Search (POST)
      tags:
      - Markers
  /markers/{markerDbId}:
    get:
      description: "Status: ACCEPTED \nImplemented By:"
      parameters:
      - description: the internal id of the marker
        in: path
        name: markerDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  analysisMethods:
                  - kasp
                  defaultDisplayName: marker1-2
                  markerDbId: mr02
                  markerName: marker1-2
                  refAlt:
                  - A
                  - T
                  synonyms:
                  - i_11_10020
                  type: marker
              schema:
                $ref: '#/components/schemas/markerResponse'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details for a specific Marker
      tags:
      - Markers
  /methods:
    get:
      description: |-
        Returns a list of Methods available on a server.

        An Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 4
                    totalPages: 2
                  status: []
                result:
                  data:
                  - class: Numeric
                    description: Standard rolled measuring tape
                    formula: a^2 + b^2 = c^2
                    methodDbId: m1
                    methodName: Tape Measure
                    name: Tape Measure
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org/m1
                        type: RDF
                        url: https://ontology.org/m1
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    reference: google.com
                  - class: Numeric
                    description: Dried sample on electric scale
                    formula: NA
                    methodDbId: m2
                    methodName: Dry Electric Scale
                    name: Dry Electric Scale
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org/m2
                        type: WEBPAGE
                        url: https://ontology.org/m2
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    reference: google.com
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/method'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: MethodsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Methods
      tags:
      - Observation Variables
    post:
      description: Create a new method object in the database
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newMethodRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  class: string
                  description: string
                  formula: string
                  methodDbId: 8175d7ac-6221-4e1d-8023-91ddb8b30fd8
                  methodName: string
                  name: string
                  ontologyReference:
                    documentationLinks:
                    - URL: string
                      type: OBO
                      url: string
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  reference: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/method'
                required:
                - metadata
                - result
                title: MethodResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Add a new Method
      tags:
      - Observation Variables
  /methods/{methodDbId}:
    get:
      description: |-
        Retrieve details about a specific method

        An Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.
      parameters:
      - description: Id of the method to retrieve details of.
        in: path
        name: methodDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  class: Numeric
                  description: Standard rolled measuring tape
                  formula: a^2 + b^2 = c^2
                  methodDbId: m1
                  methodName: Tape Measure
                  name: Tape Measure
                  ontologyReference:
                    documentationLinks:
                    - URL: https://ontology.org/m1
                      type: RDF
                      url: https://ontology.org/m1
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  reference: google.com
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/method'
                required:
                - metadata
                - result
                title: MethodResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details for a specific Method
      tags:
      - Observation Variables
    put:
      description: Update the details of an existing method
      parameters:
      - description: Id of the method to retrieve details of.
        in: path
        name: methodDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newMethodRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  class: string
                  description: string
                  formula: string
                  methodDbId: m1
                  methodName: string
                  name: string
                  ontologyReference:
                    documentationLinks:
                    - URL: string
                      type: OBO
                      url: string
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  reference: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/method'
                required:
                - metadata
                - result
                title: MethodResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update an existing Method
      tags:
      - Observation Variables
  /observationLevels:
    get:
      deprecated: true
      description: " ** DEPRECATED ** Use /observationlevels\nCall to retrieve the list of supported observation levels. Observation levels indicate the granularity level at which the measurements are taken. The values are used to supply the `observationLevel` parameter in the observation unit details call. "
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 11
                    totalPages: 6
                  status: []
                result:
                  data:
                  - plot
                  - plant
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          description: observation levels available in this database
                          type: string
                        type: array
                    type: object
                title: observationLevelsResponse
                type: object
          description: OK
          headers: {}
      summary: Deprecated List observation levels
      tags:
      - Observations
      - Deprecated
  /observationlevels:
    get:
      description: "Call to retrieve the list of supported observation levels. \nObservation levels indicate the granularity level at which the measurements are taken. \nThe values are used to supply the `observationLevel` parameter in the observation unit details call."
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 11
                    totalPages: 6
                  status: []
                result:
                  data:
                  - plot
                  - plant
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          description: observation levels available in this database
                          type: string
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationLevelsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Observation Levels
      tags:
      - Observations
  /observationunits:
    get:
      description: Get a set of observation units
      parameters:
      - description: The unique ID of a germplasm (accession) to filter on
        in: query
        name: germplasmDbId
        required: false
        schema:
          type: string
      - description: The unique ID of an observation variable
        in: query
        name: observationVariableDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a studies to filter on
        in: query
        name: studyDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a location where these observations were collected
        in: query
        name: locationDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a trial to filter on
        in: query
        name: trialDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a program to filter on
        in: query
        name: programDbId
        required: false
        schema:
          type: string
      - description: The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)
        in: query
        name: seasonDbId
        required: false
        schema:
          type: string
      - description: The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure.
        in: query
        name: observationLevel
        required: false
        schema:
          type: string
      - description: Timestamp range start
        in: query
        name: observationTimeStampRangeStart
        required: false
        schema:
          format: date-time
          type: string
      - description: Timestamp range end
        in: query
        name: observationTimeStampRangeEnd
        required: false
        schema:
          format: date-time
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    blockNumber: '1'
                    entryNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationLevel: plot
                    observationLevels: block:1;plot:1
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    observationUnitXref:
                    - id: SAMEA179865230
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH03
                      source: gnpis.lot
                    - id: '239865'
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: '1'
                      observationTimeStamp: '2013-06-14T22:03:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: fall 2011
                      value: '1.2'
                    - collector: A. Technician
                      observationDbId: '2'
                      observationTimeStamp: '2013-06-14T22:04:51-04:00'
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season: fall 2011
                      value: '4.5'
                    plantNumber: 'null'
                    plotNumber: '1'
                    programName: Program 1
                    replicate: '0'
                    studyDbId: '1001'
                    studyLocation: Peru
                    studyLocationDbId: '1'
                    studyName: Study 1
                    treatments:
                    - factor: water regimen
                      modality: deficit
                  - X: '1'
                    Y: '1'
                    blockNumber: '101'
                    entryNumber: '1'
                    entryType: FILLER
                    germplasmDbId: '4'
                    germplasmName: Name004
                    observationLevel: plant
                    observationLevels: block:101;plot:5;plant:5
                    observationUnitDbId: '10'
                    observationUnitName: Plant 5
                    observationUnitXref: []
                    observations:
                    - collector: B. Tech
                      observationDbId: '16'
                      observationTimeStamp: '2011-06-14T22:06:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: winter 2012
                      value: '100'
                    - collector: B. Tech
                      observationDbId: '17'
                      observationTimeStamp: '2011-06-14T22:07:51-04:00'
                      observationVariableDbId: MO_123:100003
                      observationVariableName: Carotenoid
                      season: winter 2012
                      value: '9'
                    - collector: B. Tech
                      observationDbId: '18'
                      observationTimeStamp: '2011-06-14T22:08:51-04:00'
                      observationVariableDbId: MO_123:100004
                      observationVariableName: Root weight
                      season: winter 2012
                      value: '2'
                    plantNumber: '5'
                    plotNumber: '5'
                    programName: Program 1
                    replicate: '1'
                    studyDbId: '1003'
                    studyLocation: Peru
                    studyLocationDbId: '2'
                    studyName: Study 3
                    treatments: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnitPhenotype'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationUnitsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Observation Units
      tags:
      - Observations
  /ontologies:
    get:
      description: Call to retrieve a list of observation variable ontologies available in the system.
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 1
                    totalPages: 1
                  status: []
                result:
                  data:
                  - authors: Bob
                    copyright: 2017 Ontology.org
                    description: Ontology.org
                    documentationURL: https://ontology.org
                    licence: Apache
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/ontology'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: ontologiesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Ontologies
      tags:
      - Observation Variables
  /people:
    get:
      description: Get filtered list of people
      parameters:
      - description: A persons first name
        in: query
        name: firstName
        required: false
        schema:
          type: string
      - description: A persons last name
        in: query
        name: lastName
        required: false
        schema:
          type: string
      - description: The unique ID of a person
        in: query
        name: personDbId
        required: false
        schema:
          type: string
      - description: A systems user ID ascociated with this person. Different from personDbId because you could have a person who is not a user of the system.
        in: query
        name: userID
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - description: Example Person
                    emailAddress: bob@bob.com
                    firstName: Bob
                    lastName: Robertson
                    mailingAddress: 123 Road Street, City, State, Country, 98765
                    middleName: Danger
                    personDbId: person1
                    phoneNumber: '+19876543210'
                    userID: bdr45
                  - description: Example Person
                    emailAddress: rob@bob.com
                    firstName: Rob
                    lastName: Robertson
                    mailingAddress: 123 Road Street, City, State, Country, 98765
                    middleName: Danger
                    personDbId: person2
                    phoneNumber: '+19876543210'
                    userID: rdr45
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        description: Array of people
                        items:
                          $ref: '#/components/schemas/person'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: personsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the People
      tags:
      - People
    post:
      description: Create a new person
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newPersonRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  description: string
                  emailAddress: string
                  firstName: Name
                  lastName: Smith
                  mailingAddress: string
                  middleName: string
                  personDbId: 4f67d1b5-d95e-4bf5-b719-79a64b619f00
                  phoneNumber: string
                  userID: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/person'
                required:
                - metadata
                - result
                title: personResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Create a new Person
      tags:
      - People
  /people/{personDbId}:
    get:
      description: Get a specific person
      parameters:
      - description: The unique ID of a person
        in: path
        name: personDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  description: Example Person
                  emailAddress: bob@bob.com
                  firstName: Bob
                  lastName: Robertson
                  mailingAddress: 123 Road Street, City, State, Country, 98765
                  middleName: Danger
                  personDbId: person1
                  phoneNumber: '+19876543210'
                  userID: bdr45
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/person'
                required:
                - metadata
                - result
                title: personResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details for a specific Person
      tags:
      - People
    put:
      description: Update an existing Person
      parameters:
      - description: The unique ID of a person
        in: path
        name: personDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newPersonRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  description: string
                  emailAddress: string
                  firstName: Name
                  lastName: Nameson
                  mailingAddress: string
                  middleName: string
                  personDbId: person1
                  phoneNumber: string
                  userID: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/person'
                required:
                - metadata
                - result
                title: personResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update a Person
      tags:
      - People
  /phenotypes:
    post:
      description: "Notes: \n\nAlong with the study specific phenotype saving calls (in the observationUnit and table formats), this call allows phenotypes to be saved and images to optionally be transferred as well.\n\nCall to invoke for saving the measurements (observations) collected\\nfrom field for all the observation units.\n\nObservation timestamp should be ISO 8601 https://www.w3.org/TR/NOTE-datetime \n\nIn case where JSON data is zipped for faster transfer speed (as in the case of the IRRI handheld implementation), the zipped JSON file will be listed in datafiles. The zipped file contains a JSON file with the same structure as the BrAPI call. In this case a format parameter should be passed as well. \n\nImages can be optionally be uploaded using this call by providing a zipfile of all images in the datafiles, along with the actual zipfile in multi-part form data.\""
      parameters:
      - description: In case where JSON data is zipped for faster transfer speed (as in the case of the IRRI handheld implementation), the zipped JSON file will be listed in datafiles. The zipped file contains a JSON file with the same structure as the BrAPI call.
        in: query
        name: format
        schema:
          $ref: '#/components/schemas/WSMIMEDataTypes'
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phenotypesRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  observations:
                  - observationDbId: bb989815-86bf-430b-9d87-054df8919767
                    observationUnitDbId: '1'
                    observationVariableDbId: MO_123:100002
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/newObservationDbIds'
                required:
                - metadata
                - result
                title: newObservationDbIdsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Add new Observation Unit Phenotypes
      tags:
      - Phenotypes
      - Observations
  /phenotypes-search:
    get:
      deprecated: true
      description: DEPRECATED in v1.3 - See GET /observationunits
      parameters:
      - description: The name or synonym of external genebank accession identifiers
        in: query
        name: germplasmDbId
        required: false
        schema:
          type: string
      - description: The ID of traits, could be ontology ID, database ID or PUI
        in: query
        name: observationVariableDbId
        required: false
        schema:
          type: string
      - description: The database ID / PK of the studies search parameter
        in: query
        name: studyDbId
        required: false
        schema:
          type: string
      - description: locations these traits were collected
        in: query
        name: locationDbId
        required: false
        schema:
          type: string
      - description: trial to search across
        in: query
        name: trialDbId
        required: false
        schema:
          type: string
      - description: program that have phenotyped this trait
        in: query
        name: programDbId
        required: false
        schema:
          type: string
      - description: The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)
        in: query
        name: seasonDbId
        required: false
        schema:
          type: string
      - description: The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure.
        in: query
        name: observationLevel
        required: false
        schema:
          type: string
      - description: Timestamp range start
        in: query
        name: observationTimeStampRangeStart
        required: false
        schema:
          format: date-time
          type: string
      - description: Timestamp range end
        in: query
        name: observationTimeStampRangeEnd
        required: false
        schema:
          format: date-time
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    blockNumber: '1'
                    entryNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationLevel: plot
                    observationLevels: block:1;plot:1
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    observationUnitXref:
                    - id: SAMEA179865230
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH03
                      source: gnpis.lot
                    - id: '239865'
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: '1'
                      observationTimeStamp: '2013-06-14T22:03:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: fall 2011
                      value: '1.2'
                    - collector: A. Technician
                      observationDbId: '2'
                      observationTimeStamp: '2013-06-14T22:04:51-04:00'
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season: fall 2011
                      value: '4.5'
                    plantNumber: 'null'
                    plotNumber: '1'
                    programName: Program 1
                    replicate: '0'
                    studyDbId: '1001'
                    studyLocation: Peru
                    studyLocationDbId: '1'
                    studyName: Study 1
                    treatments:
                    - factor: water regimen
                      modality: deficit
                  - X: '1'
                    Y: '1'
                    blockNumber: '101'
                    entryNumber: '1'
                    entryType: FILLER
                    germplasmDbId: '4'
                    germplasmName: Name004
                    observationLevel: plant
                    observationLevels: block:101;plot:5;plant:5
                    observationUnitDbId: '10'
                    observationUnitName: Plant 5
                    observationUnitXref: []
                    observations:
                    - collector: B. Tech
                      observationDbId: '16'
                      observationTimeStamp: '2011-06-14T22:06:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: winter 2012
                      value: '100'
                    - collector: B. Tech
                      observationDbId: '17'
                      observationTimeStamp: '2011-06-14T22:07:51-04:00'
                      observationVariableDbId: MO_123:100003
                      observationVariableName: Carotenoid
                      season: winter 2012
                      value: '9'
                    - collector: B. Tech
                      observationDbId: '18'
                      observationTimeStamp: '2011-06-14T22:08:51-04:00'
                      observationVariableDbId: MO_123:100004
                      observationVariableName: Root weight
                      season: winter 2012
                      value: '2'
                    plantNumber: '5'
                    plotNumber: '5'
                    programName: Program 1
                    replicate: '1'
                    studyDbId: '1003'
                    studyLocation: Peru
                    studyLocationDbId: '2'
                    studyName: Study 3
                    treatments: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnitPhenotype'
                        type: array
                    type: object
                title: observationUnitsResponse
                type: object
          description: OK
          headers: {}
      summary: Phenotype Search
      tags:
      - Phenotypes
      - Search Services
    post:
      deprecated: true
      description: DEPRECATED in v1.3 - See /search/observationunits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phenotypesSearchRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    blockNumber: '1'
                    entryNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationLevel: plot
                    observationLevels: block:1;plot:1
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    observationUnitXref:
                    - id: SAMEA179865230
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH03
                      source: gnpis.lot
                    - id: '239865'
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: '1'
                      observationTimeStamp: '2013-06-14T22:03:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: fall 2011
                      value: '1.2'
                    - collector: A. Technician
                      observationDbId: '2'
                      observationTimeStamp: '2013-06-14T22:04:51-04:00'
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season: fall 2011
                      value: '4.5'
                    plantNumber: 'null'
                    plotNumber: '1'
                    programName: Program 1
                    replicate: '0'
                    studyDbId: '1001'
                    studyLocation: Peru
                    studyLocationDbId: '1'
                    studyName: Study 1
                    treatments:
                    - factor: water regimen
                      modality: deficit
                  - X: '1'
                    Y: '1'
                    blockNumber: '101'
                    entryNumber: '1'
                    entryType: FILLER
                    germplasmDbId: '4'
                    germplasmName: Name004
                    observationLevel: plant
                    observationLevels: block:101;plot:5;plant:5
                    observationUnitDbId: '10'
                    observationUnitName: Plant 5
                    observationUnitXref: []
                    observations:
                    - collector: B. Tech
                      observationDbId: '16'
                      observationTimeStamp: '2011-06-14T22:06:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season: winter 2012
                      value: '100'
                    - collector: B. Tech
                      observationDbId: '17'
                      observationTimeStamp: '2011-06-14T22:07:51-04:00'
                      observationVariableDbId: MO_123:100003
                      observationVariableName: Carotenoid
                      season: winter 2012
                      value: '9'
                    - collector: B. Tech
                      observationDbId: '18'
                      observationTimeStamp: '2011-06-14T22:08:51-04:00'
                      observationVariableDbId: MO_123:100004
                      observationVariableName: Root weight
                      season: winter 2012
                      value: '2'
                    plantNumber: '5'
                    plotNumber: '5'
                    programName: Program 1
                    replicate: '1'
                    studyDbId: '1003'
                    studyLocation: Peru
                    studyLocationDbId: '2'
                    studyName: Study 3
                    treatments: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnitPhenotype'
                        type: array
                    type: object
                title: observationUnitsResponse
                type: object
          description: OK
          headers: {}
      summary: Phenotype Search
      tags:
      - Phenotypes
      - Search Services
  /phenotypes-search/csv:
    post:
      deprecated: true
      description: DEPRECATED in v1.3 - See /search/observationtables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phenotypesSearchRequest'
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value: {}
            text/csv:
              examples:
                response:
                  value: |-
                    "year","studyDbId","studyName","locationDbId","locationName","germplasmDbId","germplasmName","observationUnitDbId","plotNumber","replicate","blockNumber", "entryType", "X", "Y", "variableDbId1", "variableDbId2", "variableDbId3"
                    "2015", "YieldStudy2015-5", "Yield wheat 2015", "mtp-north-32", "Montpellier", "doi:10.155454/12349537E12", "IR-8", "2016-Maugio-34-575-abc-123", "120", "", "2", "", "5", "15", "45", "3", "10"
                    "2016", "YieldStudy2016-5", "Yield wheat 2016", "mtp-north-32", "Montpellier", "doi:10.155454/12349537E13", "IR-8", "2016-Maugio-34-575-abc-124", "120", "", "2", "", "5", "15", "47", "4", "11"
              schema:
                type: string
          description: OK
          headers: {}
      summary: Phenotype Search CSV
      tags:
      - Phenotypes
      - Search Services
  /phenotypes-search/table:
    post:
      deprecated: true
      description: DEPRECATED in v1.3 - See /search/observationtables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phenotypesSearchRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - - '2013'
                    - '1001'
                    - Study 1
                    - '1'
                    - Location 1
                    - '1'
                    - Name001
                    - '1'
                    - '1'
                    - '0'
                    - '1'
                    - TEST
                    - '1'
                    - '1'
                    - '1.2'
                    - '4.5'
                    - ''
                    - ''
                  - - '2011'
                    - '1003'
                    - Study 3
                    - '2'
                    - Location 2
                    - '4'
                    - Name004
                    - '10'
                    - '5'
                    - '1'
                    - '101'
                    - FILLER
                    - '1'
                    - '1'
                    - '100'
                    - ''
                    - '9'
                    - '2'
                  headerRow:
                  - year
                  - studyDbId
                  - studyName
                  - locationDbId
                  - locationName
                  - germplasmDbId
                  - germplasmName
                  - observationUnitDbId
                  - plotNumber
                  - replicate
                  - blockNumber
                  - entryType
                  - X
                  - Y
                  observationVariableDbIds:
                  - MO_123:100002
                  - MO_123:100006
                  - MO_123:100003
                  - MO_123:100004
                  observationVariableNames:
                  - Plant height
                  - Virus severity
                  - Carotenoid
                  - Root weight
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/observationUnitsTableResponse'
                title: observationUnitsTableResponse
                type: object
          description: OK
          headers: {}
      summary: Phenotype Search Table
      tags:
      - Phenotypes
      - Search Services
  /phenotypes-search/tsv:
    post:
      deprecated: true
      description: DEPRECATED in v1.3 - See /search/observationtables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phenotypesSearchRequest'
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value: {}
            text/csv:
              examples:
                response:
                  value: |-
                    "year"    "studyDbId"    "studyName"    "locationDbId"    "locationName"    "germplasmDbId"    "germplasmName"    "observationUnitDbId"    "plotNumber"    "replicate"    "blockNumber"    "entryType"    "X"    "Y"     "variableDbId1"    "variableDbId2"    "variableDbId3"
                    "2015"    "YieldStudy2015-5"    "Yield wheat 2015"    "mtp-north-32"    "Montpellier"    "doi:10.155454/12349537E12"    "IR-8"    "2016-Maugio-34-575-abc-123"    "120"    ""    "2"    ""    "5"    "15"    "45"    "3"    "10"
                    "2016"    "YieldStudy2016-5"    "Yield wheat 2016"    "mtp-north-32"    "Montpellier"    "doi:10.155454/12349537E13"    "IR-8"    "2016-Maugio-34-575-abc-124"    "120"    ""    "2"    ""    "5"    "15"    "47"    "4"    "11"
              schema:
                type: string
          description: OK
          headers: {}
      summary: Phenotype Search TSV
      tags:
      - Phenotypes
      - Search Services
  /programs:
    get:
      description: Call to retrieve a list of programs.
      parameters:
      - description: Filter by the common crop name. Exact match.
        in: query
        name: commonCropName
        required: false
        schema:
          type: string
      - description: Filter by program name. Exact match.
        in: query
        name: programName
        required: false
        schema:
          type: string
      - description: Filter by program abbreviation. Exact match.
        in: query
        name: abbreviation
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - abbreviation: P1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 1
                    objective: Global Population Improvement
                    programDbId: '1'
                    programName: Program 1
                  - abbreviation: P2
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 2
                    objective: XYZ
                    programDbId: '2'
                    programName: Program 2
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/program'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: programsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the breeding Programs
      tags:
      - Programs
  /programs-search:
    post:
      deprecated: true
      description: DEPRECATED in v1.3 - see /search/programs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/programsSearchRequest_Deprecated'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - abbreviation: P1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 1
                    objective: Global Population Improvement
                    programDbId: '1'
                    programName: Program 1
                  - abbreviation: P2
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 2
                    objective: XYZ
                    programDbId: '2'
                    programName: Program 2
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/program'
                        type: array
                    type: object
                title: programsResponse
                type: object
          description: OK
          headers: {}
      summary: Search Programs
      tags:
      - Programs
      - Search Services
  /samples:
    get:
      description: Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.
      parameters:
      - description: the internal DB id for a sample
        in: query
        name: sampleDbId
        required: false
        schema:
          type: string
      - description: the internal DB id for an observation unit where a sample was taken from
        in: query
        name: observationUnitDbId
        required: false
        schema:
          type: string
      - description: the internal DB id for a plate of samples
        in: query
        name: plateDbId
        required: false
        schema:
          type: string
      - description: the internal DB id for a germplasm
        in: query
        name: germplasmDbId
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - germplasmDbId: '1'
                    notes: Example Sample
                    observationUnitDbId: '1'
                    plantDbId: 'null'
                    plateDbId: pl1
                    plateIndex: 0
                    plotDbId: '1'
                    sampleDbId: sam00
                    sampleTimestamp: '2018-01-01T00:00:00-05:00'
                    sampleType: DNA
                    studyDbId: '1001'
                    takenBy: Bob
                    tissueType: Leaf
                  - germplasmDbId: '1'
                    notes: Example Sample
                    observationUnitDbId: '2'
                    plantDbId: '1'
                    plateDbId: pl1
                    plateIndex: 1
                    plotDbId: '1'
                    sampleDbId: sam01
                    sampleTimestamp: '2018-01-01T00:00:00-05:00'
                    sampleType: DNA
                    studyDbId: '1001'
                    takenBy: Bob
                    tissueType: Leaf
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/sample'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: samplesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Samples
      tags:
      - Samples
    put:
      description: Call to register the event of a sample being taken. Sample ID is assigned as a result of the operation and returned in response.
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sample'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  sampleDbId: d3636ed9-f0d5-47fd-90ea-278d95043411
                  sampleId: d3636ed9-f0d5-47fd-90ea-278d95043411
              schema:
                $ref: '#/components/schemas/newSampleDbId'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Add a new Sample
      tags:
      - Samples
  /samples-search:
    get:
      deprecated: true
      description: DEPRECATED in v1.3 - see GET /samples
      parameters:
      - description: the internal DB id for a sample
        in: query
        name: sampleDbId
        required: false
        schema:
          type: string
      - description: the internal DB id for an observation unit where a sample was taken from
        in: query
        name: observationUnitDbId
        required: false
        schema:
          type: string
      - description: the internal DB id for a plate of samples
        in: query
        name: plateDbId
        required: false
        schema:
          type: string
      - description: the internal DB id for a germplasm
        in: query
        name: germplasmDbId
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - germplasmDbId: '1'
                    notes: Example Sample
                    observationUnitDbId: '1'
                    plantDbId: 'null'
                    plateDbId: pl1
                    plateIndex: 0
                    plotDbId: '1'
                    sampleDbId: sam00
                    sampleTimestamp: '2018-01-01T00:00:00-05:00'
                    sampleType: DNA
                    studyDbId: '1001'
                    takenBy: Bob
                    tissueType: Leaf
                  - germplasmDbId: '1'
                    notes: Example Sample
                    observationUnitDbId: '2'
                    plantDbId: '1'
                    plateDbId: pl1
                    plateIndex: 1
                    plotDbId: '1'
                    sampleDbId: sam01
                    sampleTimestamp: '2018-01-01T00:00:00-05:00'
                    sampleType: DNA
                    studyDbId: '1001'
                    takenBy: Bob
                    tissueType: Leaf
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/sample'
                        type: array
                    type: object
                title: samplesResponse
                type: object
          description: OK
          headers: {}
      summary: Get the Sample Search
      tags:
      - Samples
      - Search Services
    post:
      deprecated: true
      description: DEPRECATED in v1.3 - see GET /search/samples
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sampleSearchRequest_Dep'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - germplasmDbId: '1'
                    notes: Example Sample
                    observationUnitDbId: '1'
                    plantDbId: 'null'
                    plateDbId: pl1
                    plateIndex: 0
                    plotDbId: '1'
                    sampleDbId: sam00
                    sampleTimestamp: '2018-01-01T00:00:00-05:00'
                    sampleType: DNA
                    studyDbId: '1001'
                    takenBy: Bob
                    tissueType: Leaf
                  - germplasmDbId: '1'
                    notes: Example Sample
                    observationUnitDbId: '2'
                    plantDbId: '1'
                    plateDbId: pl1
                    plateIndex: 1
                    plotDbId: '1'
                    sampleDbId: sam01
                    sampleTimestamp: '2018-01-01T00:00:00-05:00'
                    sampleType: DNA
                    studyDbId: '1001'
                    takenBy: Bob
                    tissueType: Leaf
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/sample'
                        type: array
                    type: object
                title: samplesResponse
                type: object
          description: OK
          headers: {}
      summary: Post Sample Search
      tags:
      - Samples
      - Search Services
  /samples/{sampleDbId}:
    get:
      description: Used to retrieve the details of a single Sample from a Sample Tracking system.
      parameters:
      - description: the internal DB id for a sample
        in: path
        name: sampleDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  germplasmDbId: '1'
                  notes: Example Sample
                  observationUnitDbId: '2'
                  plantDbId: '1'
                  plateDbId: pl1
                  plateIndex: 1
                  plotDbId: '1'
                  sampleDbId: sam01
                  sampleTimestamp: '2018-01-01T00:00:00-05:00'
                  sampleType: DNA
                  studyDbId: '1001'
                  takenBy: Bob
                  tissueType: Leaf
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/sample'
                required:
                - metadata
                - result
                title: sampleResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific Sample
      tags:
      - Samples
  /scales:
    get:
      description: |-
        Returns a list of Scales available on a server.

        An Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 4
                    totalPages: 2
                  status: []
                result:
                  data:
                  - dataType: Numerical
                    decimalPlaces: 1
                    name: Centimeter
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org/s1
                        type: OBO
                        url: https://ontology.org/s1
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scaleDbId: s1
                    scaleName: Centimeter
                    validValues:
                      categories: []
                      max: 99999
                      min: 0
                    xref: xref
                  - dataType: Numerical
                    decimalPlaces: 3
                    name: Kilogram
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org/s2
                        type: RDF
                        url: https://ontology.org/s2
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scaleDbId: s2
                    scaleName: Kilogram
                    validValues:
                      categories: []
                      max: 99999
                      min: 0
                    xref: xref
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/scale'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: ScalesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Scales
      tags:
      - Observation Variables
    post:
      description: Create a new scale object in the database
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newScaleRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  dataType: Code
                  decimalPlaces: 0
                  name: string
                  ontologyReference:
                    documentationLinks:
                    - URL: string
                      type: OBO
                      url: string
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  scaleDbId: 90fdedbc-6412-47ac-877b-81dd466fe6d2
                  scaleName: string
                  validValues:
                    categories:
                    - string
                    max: 0
                    min: 0
                  xref: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/scale'
                required:
                - metadata
                - result
                title: ScaleResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Add a new Scale
      tags:
      - Observation Variables
  /scales/{scaleDbId}:
    get:
      description: |-
        Retrieve details about a specific scale

        An Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.
      parameters:
      - description: Id of the scale to retrieve details of.
        in: path
        name: scaleDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  dataType: Numerical
                  decimalPlaces: 1
                  name: Centimeter
                  ontologyReference:
                    documentationLinks:
                    - URL: https://ontology.org/s1
                      type: OBO
                      url: https://ontology.org/s1
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  scaleDbId: s1
                  scaleName: Centimeter
                  validValues:
                    categories: []
                    max: 99999
                    min: 0
                  xref: xref
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/scale'
                required:
                - metadata
                - result
                title: ScaleResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific Scale
      tags:
      - Observation Variables
    put:
      description: Update the details of an existing scale
      parameters:
      - description: Id of the scale to retrieve details of.
        in: path
        name: scaleDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newScaleRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  dataType: Code
                  decimalPlaces: 0
                  name: string
                  ontologyReference:
                    documentationLinks:
                    - URL: string
                      type: OBO
                      url: string
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  scaleDbId: s1
                  scaleName: string
                  validValues:
                    categories:
                    - string
                    max: 0
                    min: 0
                  xref: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/scale'
                required:
                - metadata
                - result
                title: ScaleResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update an existing Scale
      tags:
      - Observation Variables
  /search/germplasm:
    post:
      description: "Search for a set of germplasm based on some criteria\n\nAddresses these needs \n\n- General germplasm search mechanism that accepts POST for complex queries \n\n- Possibility to search germplasm by more parameters than those allowed by the existing germplasm search \n\n- Possibility to get MCPD details by PUID rather than dbId\n\nSee Search Services for additional implementation details."
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/germplasmSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for Germplasm
      tags:
      - Germplasm
      - Search Services
  /search/germplasm/{searchResultsDbId}:
    get:
      description: |-
        See Search Services for additional implementation details.
        Addresses these needs: 1. General germplasm search mechanism that accepts POST for complex queries 2. possibility to search germplasm by more parameters than those allowed by the existing germplasm search 3. possibility to get MCPD details by PUID rather than dbId
      parameters:
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - accessionNumber: A000003
                    acquisitionDate: '2001-01-01'
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000003
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000003
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: '3'
                    germplasmGenus: Fructus
                    germplasmName: Name003
                    germplasmPUI: http://pui.per/accession/A000003
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000002
                    seedSource: A000001/A000002
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  - accessionNumber: A000004
                    acquisitionDate: '2001-01-01'
                    biologicalStatusOfAccessionCode: 500
                    breedingMethodDbId: bm1
                    commonCropName: G000004
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000004
                    documentationURL: https://brapi.org
                    donors: []
                    genus: Fructus
                    germplasmDbId: '4'
                    germplasmGenus: Fructus
                    germplasmName: Name004
                    germplasmPUI: http://pui.per/accession/A000004
                    germplasmSpecies: novus
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001/A000003
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - variety 4
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/germplasm'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: germplasmResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of a Germplasm search request
      tags:
      - Germplasm
      - Search Services
  /search/images:
    post:
      description: "Get filtered set of image meta data\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.  \n\nSee Search Services for additional implementation details."
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/imagesSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for Images
      tags:
      - Images
      - Search Services
  /search/images/{searchResultsDbId}:
    get:
      description: "Get filtered set of image meta data\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.  "
      parameters:
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - additionalInfo: {}
                    copyright: Copyright 2018
                    description: BrAPI Logo
                    descriptiveOntologyTerms:
                    - brapi
                    - logo
                    imageDbId: img2
                    imageFileName: brapi-logo.svg
                    imageFileSize: 3676
                    imageHeight: 56
                    imageLocation:
                      geometry:
                        coordinates:
                        - -110.11301
                        - 50.010082
                        type: Point
                      type: Feature
                    imageName: brapiLogo
                    imageTimeStamp: '2011-06-14T01:02:03Z'
                    imageURL: https://brapi.org/assets/images/brapi-logo.svg
                    imageWidth: 258
                    mimeType: image/svg
                    observationDbIds:
                    - '1'
                    - '2'
                    observationUnitDbId: '1'
                  - additionalInfo: {}
                    copyright: Copyright 2019
                    description: BrAPI Logo
                    descriptiveOntologyTerms:
                    - brapi
                    - logo
                    imageDbId: ce15937e-093e-4624-8950-00dab3172e4c
                    imageFileName: brapi-logo.svg
                    imageFileSize: 3676
                    imageHeight: 56
                    imageLocation:
                      geometry:
                        coordinates:
                        - -110.11301
                        - 50.010082
                        type: Point
                      type: Feature
                    imageName: brapiLogo
                    imageTimeStamp: '1969-12-31T01:02:03Z'
                    imageURL: ''
                    imageWidth: 258
                    mimeType: image/svg
                    observationDbIds:
                    - '1'
                    - '2'
                    observationUnitDbId: '11'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        description: Array of image meta data
                        items:
                          $ref: '#/components/schemas/image'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: imagesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of an Images search request
      tags:
      - Images
      - Search Services
  /search/markers:
    post:
      description: "See Search Services for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. \nIf there is none, an empty array is returned. If there is one or more than one match, returns an array of all marker records that match the search criteria. '"
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/markersSearchRequest'
        description: The database IDs of the markers to search for
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for Markers
      tags:
      - Markers
      - Search Services
  /search/markers/{searchResultsDbId}:
    get:
      description: See Search Services for additional implementation details. Other service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. '
      parameters:
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - analysisMethods:
                    - illumina
                    defaultDisplayName: marker1-1
                    markerDbId: mr01
                    markerName: marker1-1
                    refAlt:
                    - A
                    - T
                    synonyms:
                    - i_11_10010
                    type: marker
                  - analysisMethods:
                    - kasp
                    defaultDisplayName: marker1-2
                    markerDbId: mr02
                    markerName: marker1-2
                    refAlt:
                    - A
                    - T
                    synonyms:
                    - i_11_10020
                    type: marker
              schema:
                $ref: '#/components/schemas/markersResponse'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of a Markers search request
      tags:
      - Markers
      - Search Services
  /search/observationtables:
    post:
      description: |-
        Returns a list of observationUnit with the observed Phenotypes.

        observationTimeStamp - Iso Standard 8601.

        observationValue data type inferred from the ontology
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phenotypesSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for a table of Observations
      tags:
      - Observations
      - Search Services
  /search/observationtables/{searchResultsDbId}:
    get:
      description: |
        Returns a list of observationUnit with the observed Phenotypes.

        observationTimeStamp - Iso Standard 8601.

        observationValue data type inferred from the ontology
      parameters:
      - $ref: '#/components/parameters/acceptHeader'
      - $ref: '#/components/parameters/authorizationHeader'
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - - '2013'
                    - '1001'
                    - Study 1
                    - '1'
                    - Location 1
                    - '1'
                    - Name001
                    - '1'
                    - '1'
                    - '0'
                    - '1'
                    - TEST
                    - '1'
                    - '1'
                    - '1.2'
                    - '4.5'
                    - ''
                    - ''
                  - - '2011'
                    - '1003'
                    - Study 3
                    - '2'
                    - Location 2
                    - '4'
                    - Name004
                    - '10'
                    - '5'
                    - '1'
                    - '101'
                    - FILLER
                    - '1'
                    - '1'
                    - '100'
                    - ''
                    - '9'
                    - '2'
                  headerRow:
                  - year
                  - studyDbId
                  - studyName
                  - locationDbId
                  - locationName
                  - germplasmDbId
                  - germplasmName
                  - observationUnitDbId
                  - plotNumber
                  - replicate
                  - blockNumber
                  - entryType
                  - X
                  - Y
                  observationVariableDbIds:
                  - MO_123:100002
                  - MO_123:100006
                  - MO_123:100003
                  - MO_123:100004
                  observationVariableNames:
                  - Plant height
                  - Virus severity
                  - Carotenoid
                  - Root weight
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/observationUnitsTableResponse'
                required:
                - metadata
                - result
                title: observationUnitsTableResponse
                type: object
            text/csv:
              example: |-
                "year", "studyDbId", "studyName", "locationDbId", "locationName", "germplasmDbId", "germplasmName", "observationUnitDbId", "plotNumber", "replicate", "blockNumber", "entryType", "X", "Y", "MO_123:100002", "MO_123:100006", "MO_123:100003", "MO_123:100004", "MO_123:100005"
                "2013", "1001", "Study 1", "1", "Location 1", "1", "Name001", "1", "1", "0", "1", "TEST", "1", "1", "1.2", "4.5", "", "", ""
                "2011", "1003", "Study 3", "2", "Location 2", "4", "Name004", "10", "5", "1", "101", "FILLER", "1", "1", "100", "", "9", "2", ""
                "2011", "1003", "Study 3", "2", "Location 2", "2", "Name002", "11", "6", "1", "101", "FILLER", "1", "1", "11", "", "12", "5", "black"
                "2013", "1001", "Study 1", "1", "Location 1", "1", "Name001", "2", "1", "0", "1", "TEST", "1", "1", "1.1", "5.1", "", "", ""
              schema:
                type: string
            text/tsv:
              example: "\"year\"\t\"studyDbId\"\t\"studyName\"\t\"locationDbId\"\t\"locationName\"\t\"germplasmDbId\"\t\"germplasmName\"\t\"observationUnitDbId\"\t\"plotNumber\"\t\"replicate\"\t\"blockNumber\"\t\"entryType\"\t\"X\"\t\"Y\"\t\"MO_123:100002\"\t\"MO_123:100006\"\t\"MO_123:100003\"\t\"MO_123:100004\"\t\"MO_123:100005\"\n\"2013\"\t\"1001\"\t\"Study 1\"\t\"1\"\t\"Location 1\"\t\"1\"\t\"Name001\"\t\"1\"\t\"1\"\t\"0\"\t\"1\"\t\"TEST\"\t\"1\"\t\"1\"\t\"1.2\"\t\"4.5\"\t\"\"\t\"\"\t\"\"\n\"2011\"\t\"1003\"\t\"Study 3\"\t\"2\"\t\"Location 2\"\t\"4\"\t\"Name004\"\t\"10\"\t\"5\"\t\"1\"\t\"101\"\t\"FILLER\"\t\"1\"\t\"1\"\t\"100\"\t\"\"\t\"9\"\t\"2\"\t\"\"\n\"2011\"\t\"1003\"\t\"Study 3\"\t\"2\"\t\"Location 2\"\t\"2\"\t\"Name002\"\t\"11\"\t\"6\"\t\"1\"\t\"101\"\t\"FILLER\"\t\"1\"\t\"1\"\t\"11\"\t\"\"\t\"12\"\t\"5\"\t\"black\"\n\"2013\"\t\"1001\"\t\"Study 1\"\t\"1\"\t\"Location 1\"\t\"1\"\t\"Name001\"\t\"2\"\t\"1\"\t\"0\"\t\"1\"\t\"TEST\"\t\"1\"\t\"1\"\t\"1.1\"\t\"5.1\"\t\"\"\t\"\"\t\"\""
              schema:
                type: string
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of a Observation table search request
      tags:
      - Observations
      - Search Services
  /search/observationunits:
    post:
      description: "Returns a list of observationUnit with the observed Phenotypes.\n\nSee Search Services for additional implementation details.\n\nUse case - this section allows to get a dataset from multiple studies. It allows to integrate data from several databases.\n\nRefactor note - This call allows to get and integrate portions of multiple phenotyping data matrixes. A proposed evolution allowed to get a list of single observations, this functionality is still possible with this call by specifybing the observation variable, see below.\n\nExample Use cases \n\n- Study a panel of germplasm accross multiple studies\n\n    '{\"germplasmDbIds\": [\"Syrah\", \"34Mtp362\"]}'\n\n- Get all data for a specific study (same as \"/studies/{studyDbId}/observationunits\")\n\n    '{\"studyDbIds\" : [\"383\"]}'\n\n- Get simple atomic phenotyping values \n\n    '{\n\n       \"germplasmDbIds\" : [ \"Syrah\", \"34Mtp362\" ], \n\n       \"observationVariableDbIds\" : [ \"CO_345:0000043\"]\n\n     }'\n\n- Study Locations for adaptation to climate change\n\n    '{\n\n       \"locationDbIds\" : [\"383838\", \"MONTPELLIER\"], \n\n       \"germplasmDbIds\" : [ \"14Mtp361\", \"24Mtp362\", \"34Mtp363\", \"44Mtp364\"]\n\n     }'\n\n- Find phenotypes that are from after a certain timestamp\n\n    '{\n\n       \"observationTimeStampRangeStart\" : \"2013-06-14T23:59:59-04:00\", \n\n       \"observationTimeStampRangeEnd\" : \"2013-06-15T23:59:59-04:00\"\n\n     }'\n     \nobservationTimeStampRangeStart and observationTimeStampRangeEnd use Iso Standard 8601.\n\nobservationValue data type inferred from the ontology"
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phenotypesSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for Observation Units
      tags:
      - Observations
      - Search Services
  /search/observationunits/{searchResultsDbId}:
    get:
      description: |-
        Returns a list of observationUnit with the observed Phenotypes.

        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    blockNumber: '1'
                    entryNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    observationUnitXref:
                    - id: SAMEA179865230
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH03
                      source: gnpis.lot
                    - id: '239865'
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: '1'
                      observationTimeStamp: '2013-06-14T22:03:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season:
                        season: fall
                        seasonDbId: '1'
                        year: '2011'
                      value: '1.2'
                    - collector: A. Technician
                      observationDbId: '2'
                      observationTimeStamp: '2013-06-14T22:04:51-04:00'
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season:
                        season: fall
                        seasonDbId: '1'
                        year: '2011'
                      value: '4.5'
                    - collector: string
                      observationDbId: bb989815-86bf-430b-9d87-054df8919767
                      observationTimeStamp: '1970-01-18T14:02:52-05:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season:
                        season: fall
                        seasonDbId: '1'
                        year: '2011'
                      value: string
                    pedigree: ''
                    plantNumber: 'null'
                    plotNumber: '1'
                    replicate: '0'
                  - X: '1'
                    Y: '1'
                    blockNumber: '101'
                    entryNumber: '1'
                    entryType: FILLER
                    germplasmDbId: '4'
                    germplasmName: Name004
                    observationUnitDbId: '10'
                    observationUnitName: Plant 5
                    observationUnitXref: []
                    observations:
                    - collector: B. Tech
                      observationDbId: '16'
                      observationTimeStamp: '2011-06-14T22:06:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season:
                        season: winter
                        seasonDbId: '2'
                        year: '2012'
                      value: '100'
                    - collector: B. Tech
                      observationDbId: '17'
                      observationTimeStamp: '2011-06-14T22:07:51-04:00'
                      observationVariableDbId: MO_123:100003
                      observationVariableName: Carotenoid
                      season:
                        season: winter
                        seasonDbId: '2'
                        year: '2012'
                      value: '9'
                    - collector: B. Tech
                      observationDbId: '18'
                      observationTimeStamp: '2011-06-14T22:08:51-04:00'
                      observationVariableDbId: MO_123:100004
                      observationVariableName: Root weight
                      season:
                        season: winter
                        seasonDbId: '2'
                        year: '2012'
                      value: '2'
                    pedigree: ''
                    plantNumber: '5'
                    plotNumber: '5'
                    replicate: '1'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnit'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationUnitsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Observation Unit Search
      tags:
      - Observations
      - Search Services
  /search/programs:
    post:
      description: |-
        Advanced searching for the programs resource.
        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/programsSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for Programs
      tags:
      - Programs
      - Search Services
  /search/programs/{searchResultsDbId}:
    get:
      description: |-
        Advanced searching for the programs resource.
        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - abbreviation: P1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 1
                    objective: Global Population Improvement
                    programDbId: '1'
                    programName: Program 1
                  - abbreviation: P2
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 2
                    objective: XYZ
                    programDbId: '2'
                    programName: Program 2
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/program'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: programsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of a Programs search request
      tags:
      - Programs
      - Search Services
  /search/samples:
    post:
      description: |-
        Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.
        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sampleSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for Samples
      tags:
      - Samples
      - Search Services
  /search/samples/{searchResultsDbId}:
    get:
      description: |-
        Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.
        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - germplasmDbId: '1'
                    notes: Example Sample
                    observationUnitDbId: '1'
                    plantDbId: 'null'
                    plateDbId: pl1
                    plateIndex: 0
                    plotDbId: '1'
                    sampleDbId: sam00
                    sampleTimestamp: '2018-01-01T00:00:00-05:00'
                    sampleType: DNA
                    studyDbId: '1001'
                    takenBy: Bob
                    tissueType: Leaf
                  - germplasmDbId: '1'
                    notes: Example Sample
                    observationUnitDbId: '2'
                    plantDbId: '1'
                    plateDbId: pl1
                    plateIndex: 1
                    plotDbId: '1'
                    sampleDbId: sam01
                    sampleTimestamp: '2018-01-01T00:00:00-05:00'
                    sampleType: DNA
                    studyDbId: '1001'
                    takenBy: Bob
                    tissueType: Leaf
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/sample'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: samplesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of a Samples search request
      tags:
      - Samples
      - Search Services
  /search/studies:
    post:
      description: |-
        Get list of studies
        StartDate and endDate should be ISO8601 format for dates
        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studySearchRequest'
        description: Study Search request
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for Studies
      tags:
      - Studies
      - Search Services
  /search/studies/{searchResultsDbId}:
    get:
      description: |-
        Get list of studies

        StartDate and endDate should be ISO8601 format for dates

        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - active: 'true'
                    additionalInfo:
                      studyObjective: Increase yield
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2014-01-01'
                    locationDbId: '1'
                    locationName: Location 1
                    name: Study 1
                    programDbId: '1'
                    programName: Program 1
                    seasons:
                    - season: fall
                      seasonDbId: '1'
                      year: '2011'
                    - season: winter
                      seasonDbId: '2'
                      year: '2012'
                    startDate: '2013-01-01'
                    studyDbId: '1001'
                    studyName: Study 1
                    studyType: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
                  - active: 'true'
                    additionalInfo:
                      publications: pmid:23643517318968
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2015-01-01'
                    locationDbId: '1'
                    locationName: Location 1
                    name: Study 2
                    programDbId: '1'
                    programName: Program 1
                    seasons:
                    - season: winter
                      seasonDbId: '2'
                      year: '2012'
                    startDate: '2014-01-01'
                    studyDbId: '1002'
                    studyName: Study 2
                    studyType: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/studySummary'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: studiesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of a Studies search request
      tags:
      - Studies
      - Search Services
  /search/variables:
    post:
      description: |-
        Search observation variables.

        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/observationVariableSearchRequest'
      responses:
        '200':
          $ref: '#/components/responses/successfulSearchResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a search request for Observation Variables
      tags:
      - Observation Variables
      - Search Services
  /search/variables/{searchResultsDbId}:
    get:
      description: |-
        Search observation variables.

        See Search Services for additional implementation details.
      parameters:
      - $ref: '#/components/parameters/searchResultsDbId'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Numeric
                      description: Standard rolled measuring tape
                      formula: a^2 + b^2 = c^2
                      methodDbId: m1
                      methodName: Tape Measure
                      name: Tape Measure
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m1
                          type: RDF
                          url: https://ontology.org/m1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Plant height
                    observationVariableDbId: MO_123:100002
                    observationVariableName: Plant height
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Numerical
                      decimalPlaces: 1
                      name: Centimeter
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s1
                          type: OBO
                          url: https://ontology.org/s1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s1
                      scaleName: Centimeter
                      validValues:
                        categories: []
                        max: 99999
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: plant height
                      class: Numeric
                      description: plant height
                      entity: entity
                      mainAbbreviation: H
                      name: Plant Height
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t1
                          type: WEBPAGE
                          url: https://ontology.org/t1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t1
                      traitName: Plant Height
                      xref: xref
                    xref: MO_123:100002
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Categorical
                      description: Comparing sample color to standard color palette
                      formula: NA
                      methodDbId: m3
                      methodName: Standard Color Palette
                      name: Standard Color Palette
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m3
                          type: OBO
                          url: https://ontology.org/m3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Carotenoid
                    observationVariableDbId: MO_123:100003
                    observationVariableName: Carotenoid
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Nominal
                      decimalPlaces: 0
                      name: Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s3
                          type: WEBPAGE
                          url: https://ontology.org/s3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s3
                      scaleName: Color
                      validValues:
                        categories:
                        - dark red
                        - red
                        - dark blue
                        - blue
                        - black
                        max: 0
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: leaf color
                      class: Categorical
                      description: color of leaf sample
                      entity: entity
                      mainAbbreviation: LC
                      name: Leaf Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t3
                          type: RDF
                          url: https://ontology.org/t3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t3
                      traitName: Leaf Color
                      xref: xref
                    xref: MO_123:100003
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationVariable'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationVariablesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of a Observation Variable search request
      tags:
      - Observation Variables
      - Search Services
  /seasons:
    get:
      description: "Call to retrive all seasons in the database.\n\nA season is made of 2 parts\n\n- The primary year \n\n- A term which defines a segment of the year. \nThis could be a traditional season, like \"Spring\" or \"Summer\"; \nthis could be a month, like \"May\" or \"June\"; \nor this could be an arbitrary season name which is meaningful to the breeding program like \"PlantingTime_3\" or \"Season E\""
      parameters:
      - description: The unique identifier for a season
        in: query
        name: seasonDbId
        required: false
        schema:
          type: string
      - description: The term to describe a given season. Example "Spring" OR "May" OR "PlantingTime7"
        example: Spring
        in: query
        name: season
        required: false
        schema:
          type: string
      - description: The 4 digit year of a season. Example "2017"
        example: 2017
        in: query
        name: year
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 10
                    totalPages: 5
                  status: []
                result:
                  data:
                  - season: fall
                    seasonDbId: '1'
                    year: '2011'
                  - season: winter
                    seasonDbId: '2'
                    year: '2012'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/season'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: seasonsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Seasons
      tags:
      - Studies
  /studies:
    get:
      description: |-
        Get list of studies

        Implementation Notes

        StartDate and endDate should be ISO8601 format for dates

        See Search Services for additional implementation details.
      parameters:
      - description: Common name for the crop associated with this study
        in: query
        name: commonCropName
        required: false
        schema:
          type: string
      - deprecated: true
        description: DEPRECATED in v1.3 - see "studyTypeDbId"
        in: query
        name: studyType
        required: false
        schema:
          type: string
      - description: Filter based on study type unique identifier
        in: query
        name: studyTypeDbId
        required: false
        schema:
          type: string
      - description: Program filter to only return studies associated with given program id.
        in: query
        name: programDbId
        required: false
        schema:
          type: string
      - description: Filter by location
        in: query
        name: locationDbId
        required: false
        schema:
          type: string
      - description: Filter by season or year
        in: query
        name: seasonDbId
        required: false
        schema:
          type: string
      - description: Filter by trial
        in: query
        name: trialDbId
        required: false
        schema:
          type: string
      - description: Filter by study DbId
        in: query
        name: studyDbId
        required: false
        schema:
          type: string
      - deprecated: true
        description: DEPRECATED in v1.3 - see /search/studies
        in: query
        name: germplasmDbIds
        required: false
        schema:
          items:
            type: string
          type: array
      - deprecated: true
        description: DEPRECATED in v1.3 - see /search/studies
        in: query
        name: observationVariableDbIds
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Filter active status true/false.
        in: query
        name: active
        required: false
        schema:
          type: boolean
      - description: Name of the field to sort by.
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - studyDbId
          - trialDbId
          - programDbId
          - locationDbId
          - seasonDbId
          - studyTypeDbId
          - studyName
          - studyLocation
          - programName
          type: string
      - description: Sort order direction. Ascending/Descending.
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - ASC
          - desc
          - DESC
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - active: 'true'
                    additionalInfo:
                      studyObjective: Increase yield
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2014-01-01'
                    locationDbId: '1'
                    locationName: Location 1
                    name: Study 1
                    programDbId: '1'
                    programName: Program 1
                    seasons:
                    - season: fall
                      seasonDbId: '1'
                      year: '2011'
                    - season: winter
                      seasonDbId: '2'
                      year: '2012'
                    startDate: '2013-01-01'
                    studyDbId: '1001'
                    studyName: Study 1
                    studyType: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
                  - active: 'true'
                    additionalInfo:
                      publications: pmid:23643517318968
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2015-01-01'
                    locationDbId: '1'
                    locationName: Location 1
                    name: Study 2
                    programDbId: '1'
                    programName: Program 1
                    seasons:
                    - season: winter
                      seasonDbId: '2'
                      year: '2012'
                    startDate: '2014-01-01'
                    studyDbId: '1002'
                    studyName: Study 2
                    studyType: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/studySummary'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: studiesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Studies
      tags:
      - Studies
  /studies-search:
    get:
      deprecated: true
      description: DEPRECATED in v1.3 - see GET /studies
      parameters:
      - description: Filter based on study type e.g. Nursery, Trial or Genotype.
        in: query
        name: studyType
        required: false
        schema:
          type: string
      - description: Program filter to only return studies associated with given program id.
        in: query
        name: programDbId
        required: false
        schema:
          type: string
      - description: Filter by location
        in: query
        name: locationDbId
        required: false
        schema:
          type: string
      - description: Filter by season or year
        in: query
        name: seasonDbId
        required: false
        schema:
          type: string
      - description: Filter by trial
        in: query
        name: trialDbId
        required: false
        schema:
          type: string
      - description: Filter by study DbId
        in: query
        name: studyDbId
        required: false
        schema:
          type: string
      - description: Filter studies where specified germplasm have been used/tested
        in: query
        name: germplasmDbIds
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Filter studies where specified observation variables have been measured
        in: query
        name: observationVariableDbIds
        required: false
        schema:
          items:
            type: string
          type: array
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - description: Filter active status true/false.
        in: query
        name: active
        required: false
        schema:
          type: boolean
      - description: Sort order. Name of the field to sort by.
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      - description: Sort order direction. Ascending/Descending.
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - active: 'true'
                    additionalInfo:
                      studyObjective: Increase yield
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2014-01-01'
                    locationDbId: '1'
                    locationName: Location 1
                    name: Study 1
                    programDbId: '1'
                    programName: Program 1
                    seasons:
                    - season: fall
                      seasonDbId: '1'
                      year: '2011'
                    - season: winter
                      seasonDbId: '2'
                      year: '2012'
                    startDate: '2013-01-01'
                    studyDbId: '1001'
                    studyName: Study 1
                    studyType: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
                  - active: 'true'
                    additionalInfo:
                      publications: pmid:23643517318968
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2015-01-01'
                    locationDbId: '1'
                    locationName: Location 1
                    name: Study 2
                    programDbId: '1'
                    programName: Program 1
                    seasons:
                    - season: winter
                      seasonDbId: '2'
                      year: '2012'
                    startDate: '2014-01-01'
                    studyDbId: '1002'
                    studyName: Study 2
                    studyType: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/studySummary'
                        type: array
                    type: object
                required:
                - metadata
                - result
                title: studiesResponse
                type: object
          description: OK
          headers: {}
      summary: Search Studies (GET)
      tags:
      - Studies
      - Search Services
    post:
      deprecated: true
      description: DEPRECATED in v1.3 - see /search/studies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studySearchRequest_Dep'
        description: Study Search request
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - active: 'true'
                    additionalInfo:
                      studyObjective: Increase yield
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2014-01-01'
                    locationDbId: '1'
                    locationName: Location 1
                    name: Study 1
                    programDbId: '1'
                    programName: Program 1
                    seasons:
                    - season: fall
                      seasonDbId: '1'
                      year: '2011'
                    - season: winter
                      seasonDbId: '2'
                      year: '2012'
                    startDate: '2013-01-01'
                    studyDbId: '1001'
                    studyName: Study 1
                    studyType: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
                  - active: 'true'
                    additionalInfo:
                      publications: pmid:23643517318968
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2015-01-01'
                    locationDbId: '1'
                    locationName: Location 1
                    name: Study 2
                    programDbId: '1'
                    programName: Program 1
                    seasons:
                    - season: winter
                      seasonDbId: '2'
                      year: '2012'
                    startDate: '2014-01-01'
                    studyDbId: '1002'
                    studyName: Study 2
                    studyType: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/studySummary'
                        type: array
                    type: object
                required:
                - metadata
                - result
                title: studiesResponse
                type: object
          description: OK
          headers: {}
      summary: Search Studies (GET)
      tags:
      - Studies
      - Search Services
  /studies/{studyDbId}:
    get:
      description: "Retrieve the information of the study required for field data collection\n\nAn additionalInfo field was added to provide a controlled vocabulary for less common data fields.\n\nLinked data\n\n- Observation Variables: ```/brapi/v1/studies/{studyDbId}/observationvariables``` \n\n- Germplasm: ```/brapi/v1/studies/{studyDbId}/germplasm``` \n\n- Observation Units: ```/brapi/v1/studies/{studyDbId}/observationunits``` \n\n- Layout: ```brapi/v1/studies/{studyDbId}/layout```"
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  active: 'true'
                  additionalInfo:
                    studyObjective: Increase yield
                  commonCropName: Tomatillo
                  contacts:
                  - contactDbId: '1'
                    email: a.breeder@brapi.org
                    instituteName: Plant Science Institute
                    name: A. Breeder
                    orcid: 0000-0002-0607-8728
                    type: Breeder
                  - contactDbId: '2'
                    email: b.breeder@brapi.org
                    instituteName: Plant Science Institute
                    name: B. Breeder
                    orcid: 0000-0002-0607-8729
                    type: Breeder
                  dataLinks:
                  - dataLinkName: image-archive12.zip
                    name: image-archive12.zip
                    type: Image archive
                    url: http://data.inra.fr/archive/multi-spect-flowering.zip
                  - dataLinkName: image-archive13.zip
                    name: image-archive13.zip
                    type: Image archive
                    url: http://data.inra.fr/archive/biomass-img.zip
                  documentationURL: https://brapi.org
                  endDate: '2014-01-01'
                  lastUpdate:
                    timestamp: '2015-01-01T00:00:00-05:00'
                    version: '1.1'
                  license: https://creativecommons.org/licenses/by/4.0
                  location:
                    abbreviation: L1
                    abreviation: L1
                    additionalInfo:
                      adm1: Junin
                      adm2: Chanchamayo
                      adm3: San Ramon
                      annualMeanTemperature: '23'
                      annualTotalPrecipitation: '360'
                      cont: South America
                      creg: LAC
                      local: San Ramon
                    altitude: 828
                    countryCode: PER
                    countryName: Peru
                    documentationURL: https://brapi.org
                    instituteAddress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteAdress: 71 Pilgrim Avenue Chevy Chase MD 20815
                    instituteName: Plant Science Institute
                    latitude: -11.1274995803833
                    locationDbId: '1'
                    locationName: Location 1
                    locationType: Storage location
                    longitude: -75.35639190673828
                    name: Location 1
                  seasons:
                  - fall 2011
                  - winter 2012
                  startDate: '2013-01-01'
                  studyDbId: '1001'
                  studyDescription: Field yield phenotyping study
                  studyName: Study 1
                  studyType: Yield study
                  studyTypeDbId: '2'
                  studyTypeName: Yield study
                  trialDbId: '101'
                  trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/study'
                required:
                - metadata
                - result
                title: studyResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details for a specific Study
      tags:
      - Studies
  /studies/{studyDbId}/germplasm:
    get:
      description: Get the available Germplasm which are associated with this study
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 4
                    totalPages: 2
                  status: []
                result:
                  data:
                  - accessionNumber: A000001
                    acquisitionDate: '1984-01-01'
                    biologicalStatusOfAccessionCode: 300
                    breedingMethodDbId: bm1
                    commonCropName: G000001
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000001
                    documentationURL: https://brapi.org
                    donors:
                    - donorAccessionNumber: A001230
                      donorInstituteCode: INRA
                      germplasmPUI: https://doi.org/10.1109/5.771073
                    - donorAccessionNumber: A004560
                      donorInstituteCode: INRA
                      germplasmPUI: https://doi.org/10.1109/5.231123
                    entryNumber: '2'
                    genus: Fructus
                    germplasmDbId: '1'
                    germplasmName: Name001
                    germplasmPUI: http://pui.per/accession/A000001
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - landrace 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  - accessionNumber: A000001
                    acquisitionDate: '1984-01-01'
                    biologicalStatusOfAccessionCode: 300
                    breedingMethodDbId: bm1
                    commonCropName: G000001
                    countryOfOriginCode: COUNTRY1
                    defaultDisplayName: G000001
                    documentationURL: https://brapi.org
                    donors:
                    - donorAccessionNumber: A001230
                      donorInstituteCode: INRA
                      germplasmPUI: https://doi.org/10.1109/5.771073
                    - donorAccessionNumber: A004560
                      donorInstituteCode: INRA
                      germplasmPUI: https://doi.org/10.1109/5.231123
                    entryNumber: '2'
                    genus: Fructus
                    germplasmDbId: '1'
                    germplasmName: Name001
                    germplasmPUI: http://pui.per/accession/A000001
                    instituteCode: PER001
                    instituteName: INST1
                    pedigree: A000001
                    seedSource: open pollination
                    species: novus
                    speciesAuthority: L
                    subtaxa: subtaxa
                    subtaxaAuthority: N
                    synonyms:
                    - landrace 1
                    taxonIds:
                    - sourceName: ncbiTaxon
                      taxonId: '2340'
                    - sourceName: ciradTaxon
                      taxonId: E312
                    typeOfGermplasmStorageCode: []
                  studyDbId: '1001'
                  trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/germplasmSummaryList'
                required:
                - metadata
                - result
                title: germplasmSummaryListResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the Germplasm associated with a specific Study
      tags:
      - Studies
      - Germplasm
  /studies/{studyDbId}/layout:
    get:
      deprecated: true
      description: DEPRECATED in v1.3 - see `GET /studies/{studyDbId}/layouts` (pluralized)
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 4
                    totalPages: 2
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    additionalInfo: {}
                    blockNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationLevel: plot
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    replicate: '0'
                    studyDbId: '1001'
                  - X: '1'
                    Y: '1'
                    additionalInfo: {}
                    blockNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationLevel: plant
                    observationUnitDbId: '2'
                    observationUnitName: Plant 1
                    replicate: '0'
                    studyDbId: '1001'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnitPosition'
                        type: array
                    type: object
                title: observationUnitPositionsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the plot layout details for a specific Study
      tags:
      - Studies
    put:
      deprecated: true
      description: DEPRECATED in v1.3 - see `PUT /studies/{studyDbId}/layouts` (pluralized)
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studyLayoutRequest'
        description: The request body for updateing a study layout
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    additionalInfo: {}
                    blockNumber: '0'
                    entryType: CHECK
                    germplasmDbId: '2'
                    germplasmName: Name002
                    observationLevel: plot
                    observationUnitDbId: '11'
                    observationUnitName: Plot 6
                    replicate: '0'
                    studyDbId: '1003'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnitPosition'
                        type: array
                    type: object
                title: observationUnitPositionsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update an existing Study with new layout details
      tags:
      - Studies
  /studies/{studyDbId}/layouts:
    get:
      description: |-
        Retrive the layout details for a study. Returns an array of observation unit position data which describes where each unit and germplasm is located within the study layout

        Retrieve the plot layout of the study with id {id}.

        For each observationUnit within a study, return the `block`, `replicate`, and `entryType` values as well as the `X` and `Y` coordinates. `entryType` can be "check", "test", or "filler".

        Also return some human readable meta data about the observationUnit and germplasm.
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 4
                    totalPages: 2
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    additionalInfo: {}
                    blockNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationLevel: plot
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    replicate: '0'
                    studyDbId: '1001'
                  - X: '1'
                    Y: '1'
                    additionalInfo: {}
                    blockNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationLevel: plant
                    observationUnitDbId: '2'
                    observationUnitName: Plant 1
                    replicate: '0'
                    studyDbId: '1001'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnitPosition'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationUnitPositionsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the plot layout details for a specific Study
      tags:
      - Studies
    put:
      description: "Modify a study layout\n\nUpdate the layout data for a set of observation units within a study. Each layout object is a subset of fields within an observationUnit, so it doesnt make sense to create a new layout object by itself.\n\nImplementation Notes:\n\n+ If any of the fields in the request object is missing, that piece of data will not be updated. \n\n+ If an observationUnitDbId can not be found within the given study, an error will be returned. \n\n+ `entryType` can have the values \"check\", \"test\", or \"filler\". \n\n+ The response should match the structure of the response from `GET studies/{studyDbId}/layout`, but it should only contain the layout objects which have been updated by the PUT request. Also, pagination is not available in the response."
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studyLayoutRequest'
        description: The request body for updateing a study layout
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    additionalInfo: {}
                    blockNumber: '0'
                    entryType: CHECK
                    germplasmDbId: '2'
                    germplasmName: Name002
                    observationLevel: plot
                    observationUnitDbId: '11'
                    observationUnitName: Plot 6
                    replicate: '0'
                    studyDbId: '1003'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnitPosition'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationUnitPositionsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update an existing Study with new layout details
      tags:
      - Studies
  /studies/{studyDbId}/observationVariables:
    get:
      deprecated: true
      description: |2-



        test-server.brapi.org/brapi/v1/studies/{studyDbId}/observationVariables
      parameters:
      - description: string database unique identifier
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 5
                    totalPages: 1
                  status: []
                result:
                  data:
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: string
                      description: string
                      formula: string
                      methodDbId: m1
                      methodName: string
                      name: string
                      ontologyReference:
                        documentationLinks:
                        - URL: string
                          type: OBO
                          url: string
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: string
                    name: Plant height
                    observationVariableDbId: MO_123:100002
                    observationVariableName: Plant height
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Code
                      decimalPlaces: 0
                      name: string
                      ontologyReference:
                        documentationLinks:
                        - URL: string
                          type: OBO
                          url: string
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s1
                      scaleName: string
                      validValues:
                        categories:
                        - string
                        max: 0
                        min: 0
                      xref: string
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations:
                      - string
                      attribute: string
                      class: string
                      description: string
                      entity: string
                      mainAbbreviation: string
                      name: string
                      ontologyReference:
                        documentationLinks:
                        - URL: string
                          type: OBO
                          url: string
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: string
                      synonyms:
                      - string
                      traitDbId: t1
                      traitName: string
                      xref: string
                    xref: MO_123:100002
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Categorical
                      description: Comparing sample color to standard color palette
                      formula: NA
                      methodDbId: m3
                      methodName: Standard Color Palette
                      name: Standard Color Palette
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m3
                          type: OBO
                          url: https://ontology.org/m3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Carotenoid
                    observationVariableDbId: MO_123:100003
                    observationVariableName: Carotenoid
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Nominal
                      decimalPlaces: 0
                      name: Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s3
                          type: WEBPAGE
                          url: https://ontology.org/s3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s3
                      scaleName: Color
                      validValues:
                        categories:
                        - dark red
                        - red
                        - dark blue
                        - blue
                        - black
                        max: 0
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: leaf color
                      class: Categorical
                      description: color of leaf sample
                      entity: entity
                      mainAbbreviation: LC
                      name: Leaf Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t3
                          type: RDF
                          url: https://ontology.org/t3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t3
                      traitName: Leaf Color
                      xref: xref
                    xref: MO_123:100003
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Numeric
                      description: Dried sample on electric scale
                      formula: NA
                      methodDbId: m2
                      methodName: Dry Electric Scale
                      name: Dry Electric Scale
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m2
                          type: WEBPAGE
                          url: https://ontology.org/m2
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Root weight
                    observationVariableDbId: MO_123:100004
                    observationVariableName: Root weight
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Numerical
                      decimalPlaces: 3
                      name: Kilogram
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s2
                          type: RDF
                          url: https://ontology.org/s2
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s2
                      scaleName: Kilogram
                      validValues:
                        categories: []
                        max: 99999
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: root weight
                      class: Numeric
                      description: root weight
                      entity: entity
                      mainAbbreviation: RW
                      name: Root Weight
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t2
                          type: OBO
                          url: https://ontology.org/t2
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t2
                      traitName: Root Weight
                      xref: xref
                    xref: MO_123:100004
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Categorical
                      description: Comparing sample color to standard color palette
                      formula: NA
                      methodDbId: m3
                      methodName: Standard Color Palette
                      name: Standard Color Palette
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m3
                          type: OBO
                          url: https://ontology.org/m3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Root color
                    observationVariableDbId: MO_123:100005
                    observationVariableName: Root color
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Nominal
                      decimalPlaces: 0
                      name: Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s3
                          type: WEBPAGE
                          url: https://ontology.org/s3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s3
                      scaleName: Color
                      validValues:
                        categories:
                        - dark red
                        - red
                        - dark blue
                        - blue
                        - black
                        max: 0
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: root color
                      class: Categorical
                      description: color of root sample
                      entity: entity
                      mainAbbreviation: RC
                      name: Root Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t4
                          type: WEBPAGE
                          url: https://ontology.org/t4
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t4
                      traitName: Root Color
                      xref: xref
                    xref: MO_123:100005
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Percentage
                      description: Image analysis of sample photo
                      formula: Bobs Color Threshold Tool
                      methodDbId: m4
                      methodName: Image analysis
                      name: Image analysis
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m4
                          type: RDF
                          url: https://ontology.org/m4
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: https://bobsimageanalysis.com
                    name: Virus severity
                    observationVariableDbId: MO_123:100006
                    observationVariableName: Virus severity
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Numerical
                      decimalPlaces: 0
                      name: Percentage
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s4
                          type: OBO
                          url: https://ontology.org/s4
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s4
                      scaleName: Percentage
                      validValues:
                        categories: []
                        max: 100
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: Virus severity
                      class: Percentage
                      description: Percentage of contaminated sample
                      entity: entity
                      mainAbbreviation: LC
                      name: Virus severity
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t5
                          type: OBO
                          url: https://ontology.org/t5
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t5
                      traitName: Virus severity
                      xref: xref
                    xref: MO_123:100006
                  studyDbId: '1001'
                  trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationVariable'
                        type: array
                      studyDbId:
                        type: string
                      trialName:
                        type: string
                    type: object
                title: studyObservationVariablesResponse
                type: object
          description: OK
          headers: {}
      summary: Deprecated Retrieve study observation variables
      tags:
      - Studies
      - Observation Variables
      - Deprecated
  /studies/{studyDbId}/observations:
    get:
      description: |-
        Retrieve all observations where there are measurements for the given observation variables.

        observationTimestamp should be ISO8601 format with timezone -> YYYY-MM-DDThh:mm:ss+hhmm
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - description: Numeric `id` of that variable (combination of trait, unit and method)
        in: query
        name: observationVariableDbIds
        required: false
        schema:
          items:
            type: string
          type: array
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 9
                    totalPages: 5
                  status: []
                result:
                  data:
                  - germplasmDbId: '1'
                    germplasmName: Name001
                    observationDbId: '1'
                    observationLevel: plot
                    observationTimeStamp: '2013-06-14T22:03:51-04:00'
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    observationVariableDbId: MO_123:100002
                    observationVariableName: Plant height
                    operator: Bob
                    season:
                      season: fall
                      seasonDbId: '1'
                      year: '2011'
                    studyDbId: '1001'
                    uploadedBy: Bob
                    value: '1.2'
                  - germplasmDbId: '1'
                    germplasmName: Name001
                    observationDbId: '2'
                    observationLevel: plot
                    observationTimeStamp: '2013-06-14T22:04:51-04:00'
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    observationVariableDbId: MO_123:100006
                    observationVariableName: Virus severity
                    operator: Bob
                    season:
                      season: fall
                      seasonDbId: '1'
                      year: '2011'
                    studyDbId: '1001'
                    uploadedBy: Bob
                    value: '4.5'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observation'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the Observations associated with a specific Study
      tags:
      - Studies
      - Observations
    put:
      description: "Implementation Guidelines: \n\n+ If an `observationDbId` is \"null\" or an empty string in the request, a NEW observation should be created for the given study and observationUnit \n\n+ If an `observationDbId` is populated but not found in the database, a NEW observation should be created for the given study and observationUnit AND an NEW `observationDbId` should be assigned to it. A warning should be returned to the client. \n\n+ If an `observationDbId` is populated and found in the database, but the existing entry is not associated with the given study or observationUnit, a NEW observation should be created for the given study and observationUnit AND an NEW `observationDbId` should be assigned to it. A warning should be returned to the client. \n\n+ If an `observationDbId` is populated and found in the database and is associated with the given study and observationUnit, then it should be updated with the new data given."
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newObservationsRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  observations:
                  - observationDbId: '19'
                    observationUnitDbId: '11'
                    observationVariableDbId: MO_123:100002
                  - observationDbId: '20'
                    observationUnitDbId: '11'
                    observationVariableDbId: MO_123:100003
                  - observationDbId: '21'
                    observationUnitDbId: '11'
                    observationVariableDbId: MO_123:100005
                  - observationDbId: '22'
                    observationUnitDbId: '11'
                    observationVariableDbId: MO_123:100004
                  - observationDbId: 1f55443e-c7e1-4b71-bc9c-02ddbca9ab7d
                    observationUnitDbId: '11'
                    observationVariableDbId: MO_123:100002
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/newObservationDbIds'
                required:
                - metadata
                - result
                title: newObservationDbIdsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update the Observations of a specific Study
      tags:
      - Studies
      - Observations
  /studies/{studyDbId}/observationunits:
    get:
      description: The main API call for field data collection, to retrieve all the observation units within a study.
      parameters:
      - description: The study these observation units are related to.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - description: The granularity level of observation units. Either `plotNumber` or `plantNumber` fields will be relavant depending on whether granularity is plot or plant respectively.
        in: query
        name: observationLevel
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 4
                    totalPages: 2
                  status: []
                result:
                  data:
                  - X: '1'
                    Y: '1'
                    blockNumber: '1'
                    entryNumber: '1'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationUnitDbId: '1'
                    observationUnitName: Plot 1
                    observationUnitXref:
                    - id: SAMEA179865230
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH03
                      source: gnpis.lot
                    - id: '239865'
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: '1'
                      observationTimeStamp: '2013-06-14T22:03:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season:
                        season: fall
                        seasonDbId: '1'
                        year: '2011'
                      value: '1.2'
                    - collector: A. Technician
                      observationDbId: '2'
                      observationTimeStamp: '2013-06-14T22:04:51-04:00'
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season:
                        season: fall
                        seasonDbId: '1'
                        year: '2011'
                      value: '4.5'
                    - collector: string
                      observationDbId: bb989815-86bf-430b-9d87-054df8919767
                      observationTimeStamp: '1970-01-18T14:02:52-05:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season:
                        season: fall
                        seasonDbId: '1'
                        year: '2011'
                      value: string
                    pedigree: A000001/A000002
                    plantNumber: '0'
                    plotNumber: '1'
                    replicate: '0'
                  - X: '1'
                    Y: '1'
                    blockNumber: '1'
                    entryNumber: '2'
                    entryType: TEST
                    germplasmDbId: '1'
                    germplasmName: Name001
                    observationUnitDbId: '2'
                    observationUnitName: Plant 1
                    observationUnitXref:
                    - id: SAMEA179865815
                      source: ebi.biosample
                    - id: INRA:CoeSt6 _SMH13
                      source: gnpis.lot
                    - id: '239167'
                      source: kernelDB
                    observations:
                    - collector: A. Technician
                      observationDbId: '3'
                      observationTimeStamp: '2013-06-14T22:05:51-04:00'
                      observationVariableDbId: MO_123:100002
                      observationVariableName: Plant height
                      season:
                        season: fall
                        seasonDbId: '1'
                        year: '2011'
                      value: '1.1'
                    - collector: A. Technician
                      observationDbId: '4'
                      observationTimeStamp: '2013-06-14T22:06:51-04:00'
                      observationVariableDbId: MO_123:100006
                      observationVariableName: Virus severity
                      season:
                        season: fall
                        seasonDbId: '1'
                        year: '2011'
                      value: '5.1'
                    pedigree: A000001/A000002
                    plantNumber: '1'
                    plotNumber: '1'
                    replicate: '0'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationUnit'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationUnitsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the Observation Units associated with a specific Study
      tags:
      - Studies
      - Observations
    post:
      deprecated: true
      description: 'This call has been deprecated in V1.1. Use instead: "PUT /studies/{studyDbId}/observationunits" and "PUT /studies/{studyDbId}/observationunits/zip"'
      parameters:
      - description: The study these observation units are related to.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - description: (default is JSON, but can be zip) In case where JSON data is zipped for faster transfer speed (as in the case of the IRRI handheld implementation), the zipped JSON file will be listed in datafiles. The zipped file contains a JSON file with the same structure as the BrAPI call.
        in: query
        name: format
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                metadata:
                  $ref: '#/components/schemas/metadata'
                result:
                  $ref: '#/components/schemas/newObservationsRequestDeprecated'
              title: newObservationsRequestWrapperDeprecated
              type: object
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 1
                    totalCount: 1
                    totalPages: 1
                  status: []
                result:
                  observationUnitDbIds:
                  - '1'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/newObservationUnitDbIds'
                required:
                - metadata
                - result
                title: newObservationUnitDbIdsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Deprecated Save Observation Unit Phenotypes
      tags:
      - Studies
      - Observations
      - Deprecated
    put:
      description: "Use this call for uploading new Observations as JSON to a system.\n\nNote: If ''observationUnitDbId'' or ''observationDbId'' is populated, they should be considered updates to existing records. \nIf an existing record of that DbId is not found, the document should be treated as new records and assigned new DbIds. \nIf ''observationUnitDbId'' or ''observationDbId'' is un-populated (empty string or null) the document should be treated as new records and assigned new DbIds."
      parameters:
      - description: The study these observation units are related to.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/newObservationUnitRequest'
              title: newObservationUnitRequestList
              type: array
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status:
                  - code: '200'
                    message: Upload Successful
                    messageType: INFO
                result:
                  observationUnitDbIds:
                  - '11'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/newObservationUnitDbIds'
                required:
                - metadata
                - result
                title: newObservationUnitDbIdsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update the Observation Units for a specific Study
      tags:
      - Studies
      - Observations
  /studies/{studyDbId}/observationunits/zip:
    post:
      description: "If ''observationUnitDbId'' or ''observationDbId'' is populated, they should be considered updates to existing records. \n\nIf an existing record of that DbId is not found, the document should be treated as new records and assigned new DbIds. \n\nIf ''observationUnitDbId'' or ''observationDbId'' is un-populated (empty string or null) the document should be treated as new records and assigned new DbIds."
      parameters:
      - description: The study these observation units are related to.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/zip:
            schema:
              format: binary
              type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    metadata:
                      datafiles: []
                      pagination: {}
                      status: []
                    result:
                      observationUnitDbIds:
                      - observationUnitDbIds0
                      - observationUnitDbIds1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/newObservationUnitDbIds'
                required:
                - metadata
                - result
                title: newObservationUnitDbIdsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Use this call for uploading new Observations as a Batched Zip File to a system.
      tags:
      - Observations
      - Studies
  /studies/{studyDbId}/observationvariables:
    get:
      description: |-
        List all the observation variables measured in the study.

        Refer to the data type definition of variables in `/Specification/ObservationVariables/README.md`.
      parameters:
      - description: string database unique identifier
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 5
                    totalPages: 3
                  status: []
                result:
                  data:
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: string
                      description: string
                      formula: string
                      methodDbId: m1
                      methodName: string
                      name: string
                      ontologyReference:
                        documentationLinks:
                        - URL: string
                          type: OBO
                          url: string
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: string
                    name: Plant height
                    observationVariableDbId: MO_123:100002
                    observationVariableName: Plant height
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Code
                      decimalPlaces: 0
                      name: string
                      ontologyReference:
                        documentationLinks:
                        - URL: string
                          type: OBO
                          url: string
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s1
                      scaleName: string
                      validValues:
                        categories:
                        - string
                        max: 0
                        min: 0
                      xref: string
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations:
                      - string
                      attribute: string
                      class: string
                      description: string
                      entity: string
                      mainAbbreviation: string
                      name: string
                      ontologyReference:
                        documentationLinks:
                        - URL: string
                          type: OBO
                          url: string
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: string
                      synonyms:
                      - string
                      traitDbId: t1
                      traitName: string
                      xref: string
                    xref: MO_123:100002
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Categorical
                      description: Comparing sample color to standard color palette
                      formula: NA
                      methodDbId: m3
                      methodName: Standard Color Palette
                      name: Standard Color Palette
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m3
                          type: OBO
                          url: https://ontology.org/m3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Carotenoid
                    observationVariableDbId: MO_123:100003
                    observationVariableName: Carotenoid
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Nominal
                      decimalPlaces: 0
                      name: Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s3
                          type: WEBPAGE
                          url: https://ontology.org/s3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s3
                      scaleName: Color
                      validValues:
                        categories:
                        - dark red
                        - red
                        - dark blue
                        - blue
                        - black
                        max: 0
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: leaf color
                      class: Categorical
                      description: color of leaf sample
                      entity: entity
                      mainAbbreviation: LC
                      name: Leaf Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t3
                          type: RDF
                          url: https://ontology.org/t3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t3
                      traitName: Leaf Color
                      xref: xref
                    xref: MO_123:100003
                  studyDbId: '1001'
                  trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationVariable'
                        type: array
                      studyDbId:
                        type: string
                      trialName:
                        type: string
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: studyObservationVariablesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the Observation Variables for a specific Study
      tags:
      - Studies
      - Observation Variables
  /studies/{studyDbId}/table:
    get:
      description: Retrieve the details of the study required for field data collection. Includes actual trait data.
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - description: The format parameter will cause the data to be dumped to a file in the specified format. Currently, tsv and csv are supported.
        in: query
        name: format
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/csv:
              example: "year,studyDbId,studyName,locationDbId,locationName,germplasmDbId,germplasmName,observationUnitDbId,plotNumber,replicate,blockNumber,observationTimestamp,entryType,X,Y,variable1DbId,variable2DbId,variable3DbId\n2017,stu1,Study Name,loc1,Location Name,CIP1,CIP Name,abc123,1,1,1,2017-06-16T00:53:26Z,Test Entry,1,2,25.3,103.4,50.75 \n2017,stu1,Study Name,loc1,Location Name,CIP1,CIP Name,abc124,1,1,1,2017-06-16T00:54:57Z,Test Entry,2,2,27.9,98.65,45.345\n"
              schema:
                type: string
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  data:
                  - - '2011'
                    - '1001'
                    - Study 1
                    - '1'
                    - Peru
                    - '1'
                    - Name001
                    - '2'
                    - '1'
                    - '0'
                    - '1'
                    - '2013-06-14T22:05:51-04:00'
                    - TEST
                    - '1'
                    - '1'
                    - '1.1'
                    - ''
                    - ''
                    - '5.1'
                  - - '2012'
                    - '1001'
                    - Study 1
                    - '1'
                    - Peru
                    - '2'
                    - Name002
                    - '3'
                    - '2'
                    - '0'
                    - '1'
                    - '2013-06-14T22:07:51-04:00'
                    - TEST
                    - '1'
                    - '2'
                    - ''
                    - '2.1'
                    - dark blue
                    - ''
                  - - '2012'
                    - '1001'
                    - Study 1
                    - '1'
                    - Peru
                    - '2'
                    - Name002
                    - '4'
                    - '2'
                    - '0'
                    - '1'
                    - '2013-06-14T22:09:51-04:00'
                    - TEST
                    - '1'
                    - '2'
                    - ''
                    - '1.8'
                    - blue
                    - ''
                  - - '2011'
                    - '1001'
                    - Study 1
                    - '1'
                    - Peru
                    - '1'
                    - Name001
                    - '1'
                    - '1'
                    - '0'
                    - '0'
                    - '2013-06-14T22:03:51-04:00'
                    - CHECK
                    - '10'
                    - '12'
                    - '1.2'
                    - ''
                    - ''
                    - '4.5'
                  headerRow:
                  - year
                  - studyDbId
                  - studyName
                  - locationDbId
                  - locationName
                  - germplasmDbId
                  - germplasmName
                  - observationUnitDbId
                  - plotNumber
                  - replicate
                  - blockNumber
                  - observationTimestamp
                  - entryType
                  - X
                  - Y
                  observationVariableDbIds:
                  - MO_123:100002
                  - MO_123:100003
                  - MO_123:100005
                  - MO_123:100006
                  observationVariableNames:
                  - Plant height
                  - Carotenoid
                  - Root color
                  - Virus severity
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/observationsTable'
                required:
                - metadata
                - result
                title: studyobservationsTableResponse
                type: object
            application/tsv:
              example: "year\tstudyDbId\tstudyName\tlocationDbId\tlocationName\tgermplasmDbId\tgermplasmName\tobservationUnitDbId\tplotNumber\treplicate\tblockNumber\tobservationTimestamp\tentryType\tX\tY\tvariable1DbId\tvariable2DbId\tvariable3DbId\n 2017\tstu1\tStudy Name\tloc1\tLocation Name\tCIP1\tCIP Name\tabc123\t1\t1\t1\t2017-06-16T00:53:26Z\tTest Entry\t1\t2\t25.3\t103.4\t50.75\n 2017\tstu1\tStudy Name\tloc1\tLocation Name\tCIP1\tCIP Name\tabc124\t1\t1\t1\t2017-06-16T00:54:57Z\tTest Entry\t2\t2\t27.9\t98.65\t45.345\n"
              schema:
                type: string
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the Observations for a specific Study in a table format
      tags:
      - Studies
      - Observations
    post:
      description: "This call can be used to create new observations in bulk.\n\nNote: If you need to update any existing observation, please use `PUT /studies/{studyDbId}/observations`. This call should only be used to create NEW observations.\n\nImplementation Guidelines:\n\n+ All observations submitted through this call should create NEW observation records in the database under the given observation unit. \n\n+ Each \"observationUnitDbId\" listed should already exist in the database. If the server can not find a given \"observationUnitDbId\", it should report an error. (see Error Handling) \n\n+ The response of this call should be the set of \"observationDbIds\" created from this call, along with the associated \"observationUnitDbId\" and \"observationVariableDbId\" that each observation is associated with.\n\n+ Images can optionally be saved using this call by providing a zipped file of all images in the datafiles. The physical zipped file should be transferred as well in the mulit-part form data."
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newObservationsTableRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 1
                    totalCount: 1
                    totalPages: 1
                  status: []
                result:
                  observations:
                  - observationDbId: f439cdc6-768f-4d11-b66c-489d980b3d3b
                    observationUnitDbId: ee89a58d-b104-437b-9cb4-7b500eaafa11
                    observationVariableDbId: MO_123:100002
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/newObservationDbIds'
                required:
                - metadata
                - result
                title: newObservationDbIdsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Submit new Observations in a table format for a specific Study
      tags:
      - Studies
      - Observations
  /studyTypes:
    get:
      deprecated: true
      description: " ** DEPRECATED ** Use /studytypes\nCall to retrieve the list of study types.\nScope: PHENOTYPING. Implementation target date: PAG2016 "
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 3
                    totalPages: 2
                  status: []
                result:
                  data:
                  - description: Description for Nursery study type
                    name: Crossing Nursery
                    studyTypeDbId: '1'
                    studyTypeName: Crossing Nursery
                  - description: Description for yield study type
                    name: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/studyType'
                        type: array
                    type: object
                title: studyTypesResponse
                type: object
          description: OK
          headers: {}
      summary: Deprecated List study types
      tags:
      - Studies
      - Deprecated
  /studytypes:
    get:
      description: Call to retrieve the list of study types.
      parameters:
      - description: Filter based on study type unique identifier
        in: query
        name: studyTypeDbId
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 3
                    totalPages: 2
                  status: []
                result:
                  data:
                  - description: Description for Nursery study type
                    name: Crossing Nursery
                    studyTypeDbId: '1'
                    studyTypeName: Crossing Nursery
                  - description: Description for yield study type
                    name: Yield study
                    studyTypeDbId: '2'
                    studyTypeName: Yield study
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/studyType'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: studyTypesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Study Types
      tags:
      - Studies
  /traits:
    get:
      description: |-
        Call to retrieve a list of traits available in the system and their associated variables.

        An Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 5
                    totalPages: 3
                  status: []
                result:
                  data:
                  - defaultValue: '0'
                    description: plant height
                    name: Plant Height
                    observationVariables:
                    - ATT01
                    - MO_123:100002
                    traitDbId: t1
                    traitId: t1
                    traitName: Plant Height
                  - defaultValue: '0'
                    description: root weight
                    name: Root Weight
                    observationVariables:
                    - ATT03
                    - MO_123:100004
                    traitDbId: t2
                    traitId: t2
                    traitName: Root Weight
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/traitSummary'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: TraitsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Traits
      tags:
      - Observation Variables
    post:
      description: Create a new trait object in the database
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newTraitRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  alternativeAbbreviations:
                  - string
                  attribute: string
                  class: string
                  description: string
                  entity: string
                  mainAbbreviation: string
                  name: string
                  ontologyReference:
                    documentationLinks:
                    - URL: string
                      type: OBO
                      url: string
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  status: string
                  synonyms:
                  - string
                  traitDbId: 2d078dee-3d06-4deb-b0bb-2919c021a538
                  traitName: string
                  xref: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/trait'
                required:
                - metadata
                - result
                title: TraitResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Add a new Trait
      tags:
      - Observation Variables
  /traits/{traitDbId}:
    get:
      description: |-
        Retrieve the details of a single trait

        An Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.
      parameters:
      - description: Id of the trait to retrieve details of.
        in: path
        name: traitDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  defaultValue: '0'
                  description: plant height
                  name: Plant Height
                  observationVariables:
                  - ATT01
                  - MO_123:100002
                  traitDbId: t1
                  traitId: t1
                  traitName: Plant Height
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/traitSummary'
                required:
                - metadata
                - result
                title: TraitSummaryResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific Trait
      tags:
      - Observation Variables
    put:
      description: Update an existing trait
      parameters:
      - description: Id of the trait to retrieve details of.
        in: path
        name: traitDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newTraitRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  alternativeAbbreviations:
                  - string
                  attribute: string
                  class: string
                  description: string
                  entity: string
                  mainAbbreviation: string
                  name: string
                  ontologyReference:
                    documentationLinks:
                    - URL: string
                      type: OBO
                      url: string
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  status: string
                  synonyms:
                  - string
                  traitDbId: t1
                  traitName: string
                  xref: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/trait'
                required:
                - metadata
                - result
                title: TraitResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update an existing Trait
      tags:
      - Observation Variables
  /trials:
    get:
      description: Retrieve a filtered list of Trials. A Trial is a collection of studies
      parameters:
      - description: Common name for the crop associated with this trial
        in: query
        name: commonCropName
        required: false
        schema:
          type: string
      - description: Program filter to only return trials associated with given program id.
        in: query
        name: programDbId
        required: false
        schema:
          type: string
      - description: Filter by location
        in: query
        name: locationDbId
        required: false
        schema:
          type: string
      - description: Filter active status true/false.
        in: query
        name: active
        required: false
        schema:
          type: boolean
      - description: Sort order. Name of the field to sorty by.
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - trialDbId
          - trialName
          - programDbId
          - programName
          - locationDbId
          - startDate
          - endDate
          type: string
      - description: 'Sort order direction: asc/desc'
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - ASC
          - desc
          - DESC
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 10
                    totalPages: 5
                  status: []
                result:
                  data:
                  - active: false
                    additionalInfo:
                      donorName: Donor1
                      publications: doi:10.2345/GEZG3T23535
                      specialProject: Project1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2013-07-05'
                    programDbId: '1'
                    programName: Program 1
                    startDate: '2013-01-01'
                    studies:
                    - locationDbId: '1'
                      locationName: Location 1
                      studyDbId: '1001'
                      studyName: Study 1
                    - locationDbId: '1'
                      locationName: Location 1
                      studyDbId: '1002'
                      studyName: Study 2
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
                  - active: false
                    additionalInfo:
                      donorName: Donor1
                      publications: doi:10.2345/GEZG3T23535
                      specialProject: Project1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    endDate: '2013-07-05'
                    programDbId: '1'
                    programName: Program 1
                    startDate: '2013-01-01'
                    studies:
                    - locationDbId: '1'
                      locationName: Location 1
                      studyDbId: '1001'
                      studyName: Study 1
                    - locationDbId: '1'
                      locationName: Location 1
                      studyDbId: '1002'
                      studyName: Study 2
                    trialDbId: '101'
                    trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/trialSummary'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: trialsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the breeding Trials
      tags:
      - Trials
  /trials/{trialDbId}:
    get:
      description: Get trial by id.
      parameters:
      - description: The internal trialDbId
        in: path
        name: trialDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  active: false
                  additionalInfo:
                    donorName: Donor1
                    publications: doi:10.2345/GEZG3T23535
                    specialProject: Project1
                  commonCropName: Tomatillo
                  contacts:
                  - contactDbId: '4'
                    email: b.technician@brapi.org
                    instituteName: Plant Science Institute
                    name: B. Technician
                    orcid: 0000-0002-0607-8732
                    type: Technician
                  - contactDbId: '3'
                    email: a.technician@brapi.org
                    instituteName: Plant Science Institute
                    name: A. Technician
                    orcid: 0000-0002-0607-8731
                    type: Technician
                  datasetAuthorship:
                    datasetPUI: doi:10.15454/312953986E3
                    license: https://creativecommons.org/licenses/by/4.0
                  datasetAuthorships:
                  - datasetPUI: doi:10.15454/312953986E3
                    license: https://creativecommons.org/licenses/by/4.0
                  documentationURL: https://brapi.org
                  endDate: '2013-07-05'
                  programDbId: '1'
                  programName: Program 1
                  publications:
                  - publicationPUI: doi:10.15454/312953986E3
                    publicationReference: https://brapi.org
                  startDate: '2013-01-01'
                  studies:
                  - locationDbId: '1'
                    locationName: Location 1
                    studyDbId: '1001'
                    studyName: Study 1
                  - locationDbId: '1'
                    locationName: Location 1
                    studyDbId: '1002'
                    studyName: Study 2
                  trialDbId: '101'
                  trialName: Peru Yield Trial 1
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/trial'
                required:
                - metadata
                - result
                title: trialResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details of a specific Trial
      tags:
      - Trials
  /variables:
    get:
      description: Call to retrieve a list of observationVariables available in the system.
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      - description: Variable's unique ID
        in: query
        name: observationVariableDbId
        required: false
        schema:
          type: string
      - description: Variable's trait class (phenological, physiological, morphological, etc.)
        in: query
        name: traitClass
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 5
                    totalPages: 3
                  status: []
                result:
                  data:
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Numeric
                      description: Standard rolled measuring tape
                      formula: a^2 + b^2 = c^2
                      methodDbId: m1
                      methodName: Tape Measure
                      name: Tape Measure
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m1
                          type: RDF
                          url: https://ontology.org/m1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Plant height
                    observationVariableDbId: MO_123:100002
                    observationVariableName: Plant height
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Numerical
                      decimalPlaces: 1
                      name: Centimeter
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s1
                          type: OBO
                          url: https://ontology.org/s1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s1
                      scaleName: Centimeter
                      validValues:
                        categories: []
                        max: 99999
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: plant height
                      class: Numeric
                      description: plant height
                      entity: entity
                      mainAbbreviation: H
                      name: Plant Height
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t1
                          type: WEBPAGE
                          url: https://ontology.org/t1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t1
                      traitName: Plant Height
                      xref: xref
                    xref: MO_123:100002
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Categorical
                      description: Comparing sample color to standard color palette
                      formula: NA
                      methodDbId: m3
                      methodName: Standard Color Palette
                      name: Standard Color Palette
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m3
                          type: OBO
                          url: https://ontology.org/m3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Carotenoid
                    observationVariableDbId: MO_123:100003
                    observationVariableName: Carotenoid
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Nominal
                      decimalPlaces: 0
                      name: Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s3
                          type: WEBPAGE
                          url: https://ontology.org/s3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s3
                      scaleName: Color
                      validValues:
                        categories:
                        - dark red
                        - red
                        - dark blue
                        - blue
                        - black
                        max: 0
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: leaf color
                      class: Categorical
                      description: color of leaf sample
                      entity: entity
                      mainAbbreviation: LC
                      name: Leaf Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t3
                          type: RDF
                          url: https://ontology.org/t3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t3
                      traitName: Leaf Color
                      xref: xref
                    xref: MO_123:100003
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationVariable'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: observationVariablesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Observation Variables
      tags:
      - Observation Variables
  /variables-search:
    post:
      deprecated: true
      description: "Search observation variables. \nSee Search Services for additional implementation details."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/observationVariableSearchRequest_Dep'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Numeric
                      description: Standard rolled measuring tape
                      formula: a^2 + b^2 = c^2
                      methodDbId: m1
                      methodName: Tape Measure
                      name: Tape Measure
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m1
                          type: RDF
                          url: https://ontology.org/m1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Plant height
                    observationVariableDbId: MO_123:100002
                    observationVariableName: Plant height
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Numerical
                      decimalPlaces: 1
                      name: Centimeter
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s1
                          type: OBO
                          url: https://ontology.org/s1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s1
                      scaleName: Centimeter
                      validValues:
                        categories: []
                        max: 99999
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: plant height
                      class: Numeric
                      description: plant height
                      entity: entity
                      mainAbbreviation: H
                      name: Plant Height
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t1
                          type: WEBPAGE
                          url: https://ontology.org/t1
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t1
                      traitName: Plant Height
                      xref: xref
                    xref: MO_123:100002
                  - contextOfUse: []
                    crop: maize
                    date: '2018-12-05'
                    defaultValue: '10'
                    documentationURL: https://brapi.org
                    growthStage: '1'
                    institution: '1'
                    language: English
                    method:
                      class: Categorical
                      description: Comparing sample color to standard color palette
                      formula: NA
                      methodDbId: m3
                      methodName: Standard Color Palette
                      name: Standard Color Palette
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/m3
                          type: OBO
                          url: https://ontology.org/m3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      reference: google.com
                    name: Carotenoid
                    observationVariableDbId: MO_123:100003
                    observationVariableName: Carotenoid
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org
                        type: WEBPAGE
                        url: https://ontology.org
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scale:
                      dataType: Nominal
                      decimalPlaces: 0
                      name: Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/s3
                          type: WEBPAGE
                          url: https://ontology.org/s3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      scaleDbId: s3
                      scaleName: Color
                      validValues:
                        categories:
                        - dark red
                        - red
                        - dark blue
                        - blue
                        - black
                        max: 0
                        min: 0
                      xref: xref
                    scientist: Bob
                    status: active
                    submissionTimestamp: '2011-06-14T22:12:51-04:00'
                    synonyms: []
                    trait:
                      alternativeAbbreviations: []
                      attribute: leaf color
                      class: Categorical
                      description: color of leaf sample
                      entity: entity
                      mainAbbreviation: LC
                      name: Leaf Color
                      ontologyReference:
                        documentationLinks:
                        - URL: https://ontology.org/t3
                          type: RDF
                          url: https://ontology.org/t3
                        ontologyDbId: MO_123
                        ontologyName: Ontology.org
                        version: '17'
                      status: active
                      synonyms: []
                      traitDbId: t3
                      traitName: Leaf Color
                      xref: xref
                    xref: MO_123:100003
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/observationVariable'
                        type: array
                    type: object
                required:
                - metadata
                - result
                title: observationVariablesResponse
                type: object
          description: OK
          headers: {}
      summary: Variable search
      tags:
      - Observation Variables
  /variables/datatypes:
    get:
      deprecated: true
      description: DEPRECATED in v1.3 - See documentation on BrAPI fixed set of data types, references from the Crop Ontology
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - Nominal
                  - Numerical
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/dataTypesResponseResult'
                title: dataTypesResponse
                type: object
          description: OK
          headers: {}
      summary: Variable data type list
      tags:
      - Observation Variables
  /variables/{observationVariableDbId}:
    get:
      description: Retrieve variable details
      parameters:
      - description: string id of the variable
        in: path
        name: observationVariableDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  contextOfUse: []
                  crop: maize
                  date: '2018-12-05'
                  defaultValue: '10'
                  documentationURL: https://brapi.org
                  growthStage: '1'
                  institution: '1'
                  language: English
                  method:
                    class: Numeric
                    description: Standard rolled measuring tape
                    formula: a^2 + b^2 = c^2
                    methodDbId: m1
                    methodName: Tape Measure
                    name: Tape Measure
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org/m1
                        type: RDF
                        url: https://ontology.org/m1
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    reference: google.com
                  name: Plant height
                  observationVariableDbId: MO_123:100002
                  observationVariableName: Plant height
                  ontologyDbId: MO_123
                  ontologyName: Ontology.org
                  ontologyReference:
                    documentationLinks:
                    - URL: https://ontology.org
                      type: WEBPAGE
                      url: https://ontology.org
                    ontologyDbId: MO_123
                    ontologyName: Ontology.org
                    version: '17'
                  scale:
                    dataType: Numerical
                    decimalPlaces: 1
                    name: Centimeter
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org/s1
                        type: OBO
                        url: https://ontology.org/s1
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    scaleDbId: s1
                    scaleName: Centimeter
                    validValues:
                      categories: []
                      max: 99999
                      min: 0
                    xref: xref
                  scientist: Bob
                  status: active
                  submissionTimestamp: '2011-06-14T22:12:51-04:00'
                  synonyms: []
                  trait:
                    alternativeAbbreviations: []
                    attribute: plant height
                    class: Numeric
                    description: plant height
                    entity: entity
                    mainAbbreviation: H
                    name: Plant Height
                    ontologyReference:
                      documentationLinks:
                      - URL: https://ontology.org/t1
                        type: WEBPAGE
                        url: https://ontology.org/t1
                      ontologyDbId: MO_123
                      ontologyName: Ontology.org
                      version: '17'
                    status: active
                    synonyms: []
                    traitDbId: t1
                    traitName: Plant Height
                    xref: xref
                  xref: MO_123:100002
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/observationVariable'
                required:
                - metadata
                - result
                title: observationVariableResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details for a specific Observation Variable
      tags:
      - Observation Variables
  /vendor/orders:
    get:
      description: List current available orders
      parameters:
      - description: The order id returned by the vendor when the order was successfully submitted. From response of "POST /vendor/orders"
        in: query
        name: orderId
        schema:
          type: string
      - description: The submission id returned by the vendor when a set of plates was successfully submitted. From response of "POST /vendor/plates"
        in: query
        name: submissionId
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/vendorOrder'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: vendorOrdersResponse
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: List current available orders
      tags:
      - Vendor
    post:
      description: Submit a new order to a vendor
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vendorOrderRequest'
      responses:
        '200':
          content:
            application/json:
              example: {}
              schema:
                $ref: '#/components/schemas/vendorOrderResponse'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit New Order
      tags:
      - Vendor
  /vendor/orders/{orderId}/plates:
    get:
      description: Retrieve the plate and sample details of an order being processed
      parameters:
      - description: The order id returned by the vendor when the order was successfully submitted.
        in: path
        name: orderId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/vendorPlate'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: vendorPlatesResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the Plates for a specific Order
      tags:
      - Vendor
  /vendor/orders/{orderId}/results:
    get:
      description: Retrieve the data files generated by the vendors analysis
      parameters:
      - description: The order id returned by the vendor when the order was successfully submitted.
        in: path
        name: orderId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/vendorResultFile'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: vendorOrderResultsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the results of a specific Order
      tags:
      - Vendor
  /vendor/orders/{orderId}/status:
    get:
      description: Retrieve the current status of an order being processed
      parameters:
      - description: The order id returned by the vendor when the order was successfully submitted.
        in: path
        name: orderId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      status:
                        enum:
                        - registered
                        - received
                        - inProgress
                        - completed
                        - rejected
                        type: string
                    type: object
                required:
                - metadata
                - result
                title: vendorOrderStatusResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the status of a specific Order
      tags:
      - Vendor
  /vendor/plates:
    post:
      description: Submit a new set of Sample data
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vendorPlatesSubmissionRequest'
      responses:
        '200':
          content:
            application/json:
              example: {}
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/vendorPlatesSubmissionResponse'
                required:
                - metadata
                - result
                title: vendorPlateResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Submit a new set of Sample data
      tags:
      - Vendor
  /vendor/plates/{submissionId}:
    get:
      description: Get data for a submitted set of plates
      parameters:
      - in: path
        name: submissionId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result: null
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/vendorPlateGetResponse'
                required:
                - metadata
                - result
                title: vendorPlateGetResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the data for a submitted set of plates
      tags:
      - Vendor
  /vendor/specifications:
    get:
      description: Defines the plate format specification for the vendor.
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/vendorSpecification'
                required:
                - metadata
                - result
                title: vendorSpecificationResponse
                type: object
          description: OK
          headers: {}
      summary: Get the Vendor Specifications
      tags:
      - Vendor
security:
- AuthorizationToken: []
servers:
- url: https://test-server.brapi.org/brapi/v1
tags:
- description: Check the available calls on a server
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Calls
- description: Information about Crops
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Crops
- description: Information about Programs
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Programs
- description: Information about Locations
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Locations
- description: Information about Trials
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Trials
- description: Information about Studies
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Studies
- description: Information about Observations
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Observations
- description: API to retrieve list and details of observation variables. An observation variable is composed by the unique combination of one Trait, one Method and one Scale.
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Observation Variables
- description: Information about Phenotypes
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Phenotypes
- description: Information about Germplasm
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Germplasm
- description: Information about Germplasm Attributes
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Germplasm Attributes
- description: Information about Markers
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Markers
- description: Information about Marker Profiles
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Marker Profiles
- description: Information about Genome Maps
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Genome Maps
- description: Information about Samples
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Samples
- description: |-
    This interface is specific to facilities that performs an external analysis, such as genotyping facilities. The interface should be implemented by that facility's server. The breeding database is the client of this interface.
    Note that to use these calls, you likely have to use the authentication call prior to connecting (see Authentication best practices).
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Vendor
- description: Create and manipulate generic lists
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Lists
- description: Create and manipulate image data
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Images
- description: Create and manipulate information about people
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: People
- description: The available Search Services for finding data
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Search Services
- description: Authenticacte your requests
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Authentication
- description: Deprecated Calls
  externalDocs:
    description: Docs
    url: https://wiki.brapi.org/
  name: Deprecated